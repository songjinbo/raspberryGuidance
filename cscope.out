cscope 15 $HOME/UAV/get_data -q 0000006079 0000650746
	@.client.cpp

7 
	~<√töë/ö.h
>

8 
	~<uni°d.h
>

9 
	~<sys/ty≥s.h
>

10 
	~<sys/sockë.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~<¨∑/öë.h
>

16 
	#BUFFER_SIZE
 1024

	)

17 
	#FILE_NAME_MAX_SIZE
 512

	)

19 
	$maö
()

21 
˛õ¡_sockë
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

22 i‡(
˛õ¡_sockë
 < 0)

24 
	`¥ötf
("Create Socket Failed!\n");

25 
	`exô
(1);

28 
sockaddr_ö
 
£rvî_addr
;

29 
	`bzîo
(&
£rvî_addr
, (server_addr));

30 
£rvî_addr
.
sö_Ámûy
 = 
AF_INET
;

31 
£rvî_addr
.
sö_addr
.
s_addr
 = 
	`öë_addr
("192.168.1.142");

32 
£rvî_addr
.
sö_p‹t
 = 
	`ht⁄s
(6001);

34 i‡(
	`c⁄√˘
(
˛õ¡_sockë
, (
sockaddr
*)&
£rvî_addr
, (server_addr)) < 0)

36 
	`¥ötf
("Can Not Connect!\n");

37 
	`exô
(1);

40 
ªcvBuf„r
[100];

41 
£ndBuf„r
[100];

43 
	`ªcv
(
˛õ¡_sockë
, 
ªcvBuf„r
, 100, 0);

45 
	`¥ötf
("%s\n", 
ªcvBuf„r
);

47 
	`•rötf
(
£ndBuf„r
, "This is Client!\n");

48 
	`£nd
(
˛õ¡_sockë
, 
£ndBuf„r
, 100, 0);

50 
	`˛o£
(
˛õ¡_sockë
);

53 
	}
}

	@DJI_guidance.h

11 #i‚de‡
__DJI_GUIDANCE_H__


12 
	#__DJI_GUIDANCE_H__


	)

14 #ifde‡
USBDLL


15 
	#SDK_API
 
	`_de˛•ec
(
dŒexp‹t
)

	)

17 
	#SDK_API
 

	)

20 
	#CAMERA_PAIR_NUM
 5

	)

26 
	ee_sdk_îr_code


28 
e_timeout
 = -7,

29 
e_libusb_io_îr
 = -1,

30 
e_OK
 = 0,

31 
e_lﬂd_libusb_îr
=1,

32 
e_sdk_nŸ_öôed
=2,

33 
e_h¨dw¨e_nŸ_ªady
=3,

34 
e_di•¨ôy_nŸ_Ælowed
=4,

35 
e_image_‰equícy_nŸ_Ælowed
=5,

36 
e_c⁄fig_nŸ_ªady
=6,

37 
e_⁄löe_Êag_nŸ_ªady
=7,

38 
e_°îeo_ˇli_nŸ_ªady
 = 8,

39 
e_max_sdk_îr
 = 100

42 
	ee_devi˚_ty≥


44 
	mGuid™˚
 = 0,

45 
	mGuid™˚Lôe


53 
	ee_vbus_ödex


55 
	me_vbus1
 = 1,

56 
	me_vbus2
 = 2,

57 
	me_vbus3
 = 3,

58 
	me_vbus4
 = 4,

59 
	me_vbus5
 = 0

66 
	ee_image_d©a_‰equecy


68 
	me_‰equecy_5
 = 0,

69 
	me_‰equecy_10
 = 1,

70 
	me_‰equecy_20
 = 2

77 
	ee_guid™˚_evít


79 
	me_image
 = 0,

80 
	me_imu
,

81 
	me_u…øs⁄ic
,

82 
	me_vñocôy
,

83 
	me_ob°a˛e_di°™˚
,

84 
	me_mŸi⁄
,

85 
	me_evít_num


92 
	s_image_d©a


94 
	m‰ame_ödex
;

95 
	mtime_°amp
;

96 *
	mm_gªysˇÀ_image_À·
[
CAMERA_PAIR_NUM
];

97 *
	mm_gªysˇÀ_image_right
[
CAMERA_PAIR_NUM
];

98 *
	mm_dïth_image
[
CAMERA_PAIR_NUM
];

99 *
	mm_di•¨ôy_image
[
CAMERA_PAIR_NUM
];

100 }
	timage_d©a
;

106 
	s_u…øs⁄ic_d©a


108 
	m‰ame_ödex
;

109 
	mtime_°amp
;

110 
	mu…øs⁄ic
[
CAMERA_PAIR_NUM
];

111 
	mªlübûôy
[
CAMERA_PAIR_NUM
];

112 }
	tu…øs⁄ic_d©a
;

118 
	s_vñocôy


120 
	m‰ame_ödex
;

121 
	mtime_°amp
;

122 
	mvx
;

123 
	mvy
;

124 
	mvz
;

125 }
	tvñocôy
;

131 
	s_ob°a˛e_di°™˚


133 
	m‰ame_ödex
;

134 
	mtime_°amp
;

135 
	mdi°™˚
[
CAMERA_PAIR_NUM
];

136 }
	tob°a˛e_di°™˚
;

142 
	s_imu


144 
	m‰ame_ödex
;

145 
	mtime_°amp
;

146 
	macc_x
;

147 
	macc_y
;

148 
	macc_z
;

149 
	mq
[4];

150 }
	timu
;

156 
	s_°îeo_ˇli


158 
	mcu
;

159 
	mcv
;

160 
	mfoˇl
;

161 
	mba£löe
;

162 
_°îeo_ˇli
() { }

163 
_°îeo_ˇli
(
_cu
, 
_cv
, 
_foˇl
, 
_ba£löe
)

165 
	mcu
 = 
_cu
, 
	mcv
 = 
_cv
;

166 
	mfoˇl
 = 
_foˇl
, 
	mba£löe
 = 
_ba£löe
;

168 }
	t°îeo_ˇli
;

175 
	s_exposuª_∑øm


177 
	mm_°ï
;

178 
	mm_exposuª_time
;

179 
	mm_ex≥˘ed_brighäess
;

180 
	mm_is_auto_exposuª
;

181 
	mm_ˇmîa_∑ú_ödex
;

182 
_exposuª_∑øm
(){

183 
	mm_°ï
 = 10;

184 
	mm_exposuª_time
 = 7.68;

185 
	mm_ex≥˘ed_brighäess
 = 85;

186 
	mm_is_auto_exposuª
 = 1;

187 
	mm_ˇmîa_∑ú_ödex
 = 1;

189 }
	texposuª_∑øm
;

196 
	s_mŸi⁄


198 
	m‰ame_ödex
;

199 
	mtime_°amp
;

201 
	mc‹ª•⁄dög_imu_ödex
;

203 
	mq0
;

204 
	mq1
;

205 
	mq2
;

206 
	mq3
;

207 
	m©tôude_°©us
;

209 
	mposôi⁄_ö_globÆ_x
;

210 
	mposôi⁄_ö_globÆ_y
;

211 
	mposôi⁄_ö_globÆ_z
;

212 
	mposôi⁄_°©us
;

214 
	mvñocôy_ö_globÆ_x
;

215 
	mvñocôy_ö_globÆ_y
;

216 
	mvñocôy_ö_globÆ_z
;

217 
	mvñocôy_°©us
;

219 
	mª£rve_Êﬂt
[8];

220 
	mª£rve_öt
[4];

222 
	mun˚πaöty_loˇti⁄
[3];

223 
	mun˚πaöty_vñocôy
[3];

224 } 
	tmŸi⁄
;

235 (*
	tu£r_ˇŒ_back
)–
	tevít_ty≥
, 
	td©a_Àn
, *
	td©a
 );

242 
SDK_API
 
	`ª£t_c⁄fig
( );

249 
SDK_API
 
	`öô_å™s„r
( );

257 
SDK_API
 
	`£À˘_imu
( );

264 
SDK_API
 
	`£À˘_u…øs⁄ic
( );

271 
SDK_API
 
	`£À˘_vñocôy
( );

278 
SDK_API
 
	`£À˘_mŸi⁄
( );

285 
SDK_API
 
	`£À˘_ob°a˛e_di°™˚
( );

294 
SDK_API
 
	`£À˘_gªysˇÀ_image
–
e_vbus_ödex
 
ˇmîa_∑ú_ödex
, 
boﬁ
 
is_À·
 );

302 
SDK_API
 
	`£À˘_dïth_image
–
e_vbus_ödex
 
ˇmîa_∑ú_ödex
 );

310 
SDK_API
 
	`£À˘_di•¨ôy_image
–
e_vbus_ödex
 
ˇmîa_∑ú_ödex
 );

318 
SDK_API
 
	`£t_image_‰equecy
–
e_image_d©a_‰equecy
 
‰equecy
 );

326 
SDK_API
 
	`gë_devi˚_ty≥
(
e_devi˚_ty≥
* 
devi˚_ty≥
);

333 
SDK_API
 
	`°¨t_å™s„r
( );

340 
SDK_API
 
	`°›_å™s„r
( );

347 
SDK_API
 
	`ªÀa£_å™s„r
( );

355 
SDK_API
 
	`£t_sdk_evít_h™dÀr
–
u£r_ˇŒ_back
 
h™dÀr
 );

364 
SDK_API
 
	`gë_°îeo_ˇli
–
°îeo_ˇli
 
°îeo_ˇli_¥am
[
CAMERA_PAIR_NUM
]);

372 
SDK_API
 
	`gë_⁄löe_°©us
(
⁄löe_°©us
[
CAMERA_PAIR_NUM
]);

381 
SDK_API
 
	`gë_image_size
(* 
width
, * 
height
);

391 
SDK_API
 
	`waô_f‹_bﬂrd_ªady
();

399 
SDK_API
 
	`£t_exposuª_∑øm
–
exposuª_∑øm
 *
∑øm
 );

	@DJI_utility.cpp

1 
	~"DJI_utûôy.h
"

3 #ifde‡
WIN32


5 
	gDJI_lock
::
	$DJI_lock
()

7 
	`InôülizeCrôiˇlSe˘i⁄
–&
m_¸ôiˇl_£˘i⁄
 );

8 
	}
}

10 
	gDJI_lock
::~
	$DJI_lock
()

12 
	}
}

14 
DJI_lock
::
	$íãr
()

16 
	`E¡îCrôiˇlSe˘i⁄
–&
m_¸ôiˇl_£˘i⁄
 );

17 
	}
}

19 
	gDJI_lock
::
	$Àave
()

21 
	`LóveCrôiˇlSe˘i⁄
–&
m_¸ôiˇl_£˘i⁄
 );

22 
	}
}

24 
	$¶ìp
–
mi¸o£c⁄d
 )

26 
	`SÀï
––
mi¸o£c⁄d
 + 999 ) / 1000 );

27 
	}
}

28 
	gDJI_evít
::
	$DJI_evít
()

30 
SECURITY_ATTRIBUTES
 
ß
;

31 
ß
.
nLígth
 = (sa);

32 
ß
.
ÕSecurôyDes¸ùt‹
 = 
NULL
;

33 
ß
.
bInhîôH™dÀ
 = 
TRUE
;

34 
	`Cª©ePùe
–&
m_pùe_ªad
, &
m_pùe_wrôe
, &
ß
, 0 );

35 
	}
}

37 
	gDJI_evít
::~
	$DJI_evít
()

39 
	`Clo£H™dÀ
–
m_pùe_ªad
 );

40 
	`Clo£H™dÀ
–
m_pùe_wrôe
 );

41 
	}
}

43 
	gDJI_evít
::
	$£t_evít
()

45 
buf„r
[1] = {0};

46 
cou¡
 = 0;

47 
ªt
 = 
	`WrôeFûe
–
m_pùe_wrôe
, (
LPWORD
)
buf„r
, 1, (
LPDWORD
)&
cou¡
, 
NULL
 );

48  
ªt
;

49 
	}
}

51 
	gDJI_evít
::
	$waô_evít
()

53 
buf„r
[1] = {0};

54 
cou¡
 = 0;

55 
ªt
 = 
	`RódFûe
–
m_pùe_ªad
, (
LPWORD
)
buf„r
, 1, (
LPDWORD
)&
cou¡
, 
NULL
 );

56  
ªt
;

57 
	}
}

61 
	gDJI_lock
::
	$DJI_lock
()

63 
	`±hªad_muãx_öô
–&
m_lock
, 
NULL
 );

64 
	}
}

66 
	gDJI_lock
::~
	$DJI_lock
()

68 
	}
}

70 
DJI_lock
::
	$íãr
()

72 
	`±hªad_muãx_lock
–&
m_lock
 );

73 
	}
}

75 
	gDJI_lock
::
	$Àave
()

77 
	`±hªad_muãx_u∆ock
–&
m_lock
 );

78 
	}
}

80 
	gDJI_evít
::
	$DJI_evít
()

82 
	`£m_öô
–&
m_£m
, 0, 0 );

83 
	}
}

85 
	gDJI_evít
::~
	$DJI_evít
()

87 
	}
}

89 
DJI_evít
::
	$£t_evít
()

91 
ªt
 = 
	`£m_po°
–&
m_£m
 );

92  
ªt
;

93 
	}
}

95 
	gDJI_evít
::
	$waô_evít
()

97 
ªt
 = 
	`£m_waô
–&
m_£m
 );

98  
ªt
;

99 
	}
}

	@DJI_utility.h

1 #i‚de‡
__DJI_UTILITY_H__


2 
	#__DJI_UTILITY_H__


	)

3 
	~<°dio.h
>

5 #ifde‡
WIN32


7 
	~<Wödows.h
>

8 
	~<WöBa£.h
>

10 ˛as†
	cDJI_lock


12 
	mpublic
:

13 
DJI_lock
();

14 ~
DJI_lock
();

15 
íãr
();

16 
Àave
();

17 
	m¥iv©e
:

18 
CRITICAL_SECTION
 
m_¸ôiˇl_£˘i⁄
;

21 ˛as†
	cDJI_evít


23 
	mpublic
:

24 
DJI_evít
();

25 ~
DJI_evít
();

26 
£t_evít
();

27 
waô_evít
();

28 
	m¥iv©e
:

29 
HANDLE
 
m_pùe_ªad
;

30 
HANDLE
 
	mm_pùe_wrôe
;

35 
	~<±hªad.h
>

36 
	~<£m≠h‹e.h
>

38 ˛as†
	cDJI_lock


40 
	mpublic
:

41 
DJI_lock
();

42 ~
DJI_lock
();

43 
íãr
();

44 
Àave
();

45 
	m¥iv©e
:

46 
±hªad_muãx_t
 
m_lock
;

49 ˛as†
	cDJI_evít


51 
	mpublic
:

52 
DJI_evít
();

53 ~
DJI_evít
();

54 
£t_evít
();

55 
waô_evít
();

56 
	m¥iv©e
:

57 
£m_t
 
m_£m
;

62 
¶ìp
–
mi¸o£c⁄d
 );

	@getDataAndSave.cpp

8 
	~<›ícv2/highgui/highgui.hµ
>

9 
	~<f°ªam
>

10 
	~<io°ªam
>

11 
	~<m©h.h
>

12 
	~"DJI_guid™˚.h
"

13 
	~"DJI_utûôy.h
"

14 
	~<cm©h
>

15 
	~<s°ªam
>

16 
	~<°rög
>

17 
	~<uni°d.h
>

18 
	~<°dlib.h
>

19 
	~<sig«l.h
>

21 
usög
 
«me•a˚
 
	gcv
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
DJI_evít
 
	gg_evít
;

25 
DJI_lock
 
	gg_lock
;

27 
°rög
 
	$ôos
(
i
)

29 
°rög°ªam
 
ss
;

31 
ss
 << 
i
;

33  
ss
.
	`°r
();

34 
	}
}

36 
	#Thªs
 50

37 
	#WIDTH
 320

	)

38 
	#HEIGHT
 240

	)

39 
	#IMAGE_SIZE
 (
HEIGHT
 * 
WIDTH
)

	)

40 
	#RETURN_IF_ERR
(
îr_code
Ë{ if–îr_codê){ 
	`¥ötf
–"USBÉº‹ code:%d i¿fûê%†%d\n",Éº_code, 
__FILE__
, 
__LINE__
 );}}

	)

41 
	#RELEASE_IF_ERR
(
îr_code
Ë{ if–îr_codê){ 
	`ªÀa£_å™s„r
(); 
	`¥ötf
–"USBÉº‹ code:%d i¿fûê%†%d\n",Éº_code, 
__FILE__
, 
__LINE__
 );}}

	)

43 
	#GPS_Queue_MAX
 2000

44 
	#Image_Queue_MAX
 10

45 

	)

47 
	sgps_d©a


49 
	mgps_x
;

50 
	mgps_y
;

51 
	mgps_z
;

52 
boﬁ
 
	mgps_°©us
;

53 
	mgps_time_°amp
;

56 
	s©tôude_d©a


58 
	m©tôude_time_°amp
;

60 
	mpôch
;

61 
	mrﬁl
;

62 
	myaw
;

66 
e_vbus_ödex
 
	g£À˘ed_vbus
 = 
e_vbus1
;

67 
e_image_d©a_‰equecy
 
	g‰equícy
 = 
e_‰equecy_10
;

68 
°rög
 
	g∑th
 = "../data/";

69 
°rög
 
	g∑th_öô
 = "../data/";

71 
image_d©a
 
	gimage
;

72 
M©
 
g_imÀ·
(
HEIGHT
, 
WIDTH
, 
CV_8U
);

73 
M©
 
g_imright
(
HEIGHT
, 
WIDTH
, 
CV_8U
);

74 
M©
 
g_dïth
(
HEIGHT
, 
WIDTH
, 
CV_16SC1
);

75 
	gimage_time_°amp
 = 0;

77 
mŸi⁄
 
	gmŸi⁄_d©a
;

78 
gps_d©a
 
	ggps_tmp
;

80 
imu
 
	gimu_d©a
;

81 
©tôude_d©a
 
	g©tôude_tmp
;

83 
boﬁ
 
	gimage_upd©e
 = 0;

84 
	gimage_cou¡
 = 0;

86 
	$my_ˇŒback
(
d©a_ty≥
, 
d©a_Àn
, *
c⁄ã¡
)

88 
g_lock
.
	`íãr
();

90 i‡(
e_image
 =
d©a_ty≥
 && 
NULL
 !
c⁄ã¡
)

92 
image_upd©e
 = 1;

93 
image_cou¡
++;

94 
	`mem˝y
((*)&
image
, 
c⁄ã¡
, (image));

97 i‡(
e_mŸi⁄
 =
d©a_ty≥
 && 
NULL
 !
c⁄ã¡
)

99 
	`mem˝y
((*)&
mŸi⁄_d©a
, 
c⁄ã¡
, (motion_data));

101 
gps_tmp
.
gps_x
 = 
mŸi⁄_d©a
.
posôi⁄_ö_globÆ_x
;

102 
gps_tmp
.
gps_y
 = 
mŸi⁄_d©a
.
posôi⁄_ö_globÆ_y
;

103 
gps_tmp
.
gps_z
 = 
mŸi⁄_d©a
.
posôi⁄_ö_globÆ_z
;

104 
gps_tmp
.
gps_time_°amp
 = 
mŸi⁄_d©a
.
time_°amp
;

105 
gps_tmp
.
gps_°©us
 = (
mŸi⁄_d©a
.
posôi⁄_°©us
 & 0x00000004) && (motion_data.position_status & 0x00000002) && (motion_data.position_status & 0x00000001);

109 i‡(
e_imu
 =
d©a_ty≥
 && 
NULL
 !
c⁄ã¡
)

111 
	`mem˝y
((*)&
imu_d©a
, 
c⁄ã¡
, (imu_data));

113 
©tôude_tmp
.
©tôude_time_°amp
 = 
imu_d©a
.
time_°amp
;

115 
a
, 
b
, 
c
, 
d
;

116 
a
 = 
imu_d©a
.
q
[0];

117 
b
 = 
imu_d©a
.
q
[1];

118 
c
 = 
imu_d©a
.
q
[2];

119 
d
 = 
imu_d©a
.
q
[3];

121 
©tôude_tmp
.
rﬁl
 = 
	`©™2
(2 * (
a
*
b
 + 
c
*
d
), 
	`pow
(a, 2) -Öow(b, 2) -Öow(c, 2) +Öow(d, 2));

122 
©tôude_tmp
.
pôch
 = -
	`asö
(2 * (
b
*
d
 - 
a
*
c
));

123 
©tôude_tmp
.
yaw
 = 
	`©™2
(2 * (
a
*
d
 + 
b
*
c
), 
	`pow
(a, 2) +Öow(b, 2) -Öow(c, 2) -Öow(d, 2));

126 
g_lock
.
	`Àave
();

127 
g_evít
.
	`£t_evít
();

129 
	}
}

132 
	$sigroutöe
(
du¬o
)

134 
îr_code
 = 
	`ªÀa£_å™s„r
();

135 
	`RETURN_IF_ERR
(
îr_code
);

136 
cout
<<"å™s„∏i†ªÀa£d!"<<
ídl
;

137 
	`exô
(0);

138 
	}
}

139 
	$maö
()

141 
	`sig«l
(
SIGINT
,
sigroutöe
);

142 
	`sig«l
(
SIGSEGV
,
sigroutöe
);

143 
	`sig«l
(
SIGTSTP
,
sigroutöe
);

144 
	`sig«l
(
SIGPIPE
,
SIG_IGN
);

145 
	`ª£t_c⁄fig
();

147 
îr_code
 = 
	`öô_å™s„r
();

148 
	`RELEASE_IF_ERR
(
îr_code
);

150 
îr_code
 = 
	`£À˘_gªysˇÀ_image
(
£À˘ed_vbus
, 
åue
);

151 
	`RELEASE_IF_ERR
(
îr_code
);

153 
îr_code
 = 
	`£À˘_gªysˇÀ_image
(
£À˘ed_vbus
, 
Ál£
);

154 
	`RELEASE_IF_ERR
(
îr_code
);

156 
îr_code
 = 
	`£À˘_dïth_image
(
£À˘ed_vbus
);

157 
	`RELEASE_IF_ERR
(
îr_code
);

159 
	`£t_image_‰equecy
(
‰equícy
);

161 
	`£À˘_mŸi⁄
();

162 
	`£À˘_imu
();

164 
îr_code
 = 
	`£t_sdk_evít_h™dÀr
(
my_ˇŒback
);

165 
	`RELEASE_IF_ERR
(
îr_code
);

167 
îr_code
 = 
	`°¨t_å™s„r
();

168 
	`RELEASE_IF_ERR
(
îr_code
);

170 
i
=1;;i++)

172 
∑th
 = 
∑th_öô
 + 
	`ôos
(
i
) + "/";

173 if(
	`ac˚ss
(
∑th
.
	`c_°r
(),0)==-1)

175 
	`sy°em
(("mkdú "+
∑th
).
	`c_°r
());

182 
g_evít
.
	`waô_evít
();

183 i‡(
image_upd©e
)

185 
	`mem˝y
(
g_imÀ·
.
d©a
, 
image
.
m_gªysˇÀ_image_À·
[
£À˘ed_vbus
], 
IMAGE_SIZE
);

186 
	`mem˝y
(
g_imright
.
d©a
, 
image
.
m_gªysˇÀ_image_right
[
£À˘ed_vbus
], 
IMAGE_SIZE
);

187 
	`mem˝y
(
g_dïth
.
d©a
, 
image
.
m_dïth_image
[
£À˘ed_vbus
], 
IMAGE_SIZE
 * 2);

188 
image_time_°amp
 = 
image
.
time_°amp
;

190 
FûeSt‹age
 
	`f_dïth
(
∑th
 + "dïth" + 
	`ôos
(
image_cou¡
Ë+ ".xml", FûeSt‹age::
WRITE
);

191 
FûeSt‹age
 
	`f_À·
(
∑th
 + "À·" + 
	`ôos
(
image_cou¡
Ë+ ".xml", FûeSt‹age::
WRITE
);

192 
FûeSt‹age
 
	`f_right
(
∑th
 + "right" + 
	`ôos
(
image_cou¡
Ë+ ".xml", FûeSt‹age::
WRITE
);

194 
f_dïth
 << "gps" << "{" << "gps_time_°amp" << 
gps_tmp
.
gps_time_°amp
 << "gps_x" << gps_tmp.
gps_x
 << "gps_y" << gps_tmp.
gps_y
 << "gps_z" << gps_tmp.
gps_z
 << "}";

195 
f_dïth
 << "©tôude" << "{" << "©tôude_time_°amp" << 
©tôude_tmp
.
©tôude_time_°amp
 << "yaw" <<áâôude_tmp.
yaw
 << "pôch" <<áâôude_tmp.
pôch
 << "rﬁl" <<áâôude_tmp.
rﬁl
 << "}";

196 
f_dïth
 << "image" << "{ " << "image_time_°amp" << 
image_time_°amp
 << "dïth" << 
g_dïth
 << "}";

198 
f_À·
 << "gps" << "{" << "gps_time_°amp" << 
gps_tmp
.
gps_time_°amp
 << "gps_x" << gps_tmp.
gps_x
 << "gps_y" << gps_tmp.
gps_y
 << "gps_z" << gps_tmp.
gps_z
 << "}";

199 
f_À·
 << "©tôude" << "{" << "©tôude_time_°amp" << 
©tôude_tmp
.
©tôude_time_°amp
 << "yaw" <<áâôude_tmp.
yaw
 << "pôch" <<áâôude_tmp.
pôch
 << "rﬁl" <<áâôude_tmp.
rﬁl
 << "}";

200 
f_À·
 << "image" << "{" << "image_time_°amp" << 
image_time_°amp
 << "À·" << 
g_imÀ·
 << "}";

202 
f_right
 << "gps" << "{" << "gps_time_°amp" << 
gps_tmp
.
gps_time_°amp
 << "gps_x" << gps_tmp.
gps_x
 << "gps_y" << gps_tmp.
gps_y
 << "gps_z" << gps_tmp.
gps_z
 << "}";

203 
f_right
 << "©tôude" << "{" << "©tôude_time_°amp" << 
©tôude_tmp
.
©tôude_time_°amp
 << "yaw" <<áâôude_tmp.
yaw
 << "pôch" <<áâôude_tmp.
pôch
 << "rﬁl" <<áâôude_tmp.
rﬁl
 << "}";

204 
f_right
 << "image" << "{" << "image_time_°amp" << 
image_time_°amp
 << "right" << 
g_imright
 << "}";

206 
	`imwrôe
(
∑th
 + "À·" + 
	`ôos
(
image_cou¡
Ë+ ".≤g", 
g_imÀ·
);

208 
f_dïth
.
	`ªÀa£
();

209 
f_À·
.
	`ªÀa£
();

210 
f_right
.
	`ªÀa£
();

212 
image_upd©e
 = 0;

213 
	`¥ötf
("saving image is completed! ......\n");

217 
îr_code
 = 
	`°›_å™s„r
();

218 
	`RELEASE_IF_ERR
(
îr_code
);

220 
îr_code
 = 
	`ªÀa£_å™s„r
();

221 
	`RETURN_IF_ERR
(
îr_code
);

224 
	}
}

	@getDataAndTrans.cpp

9 
	~<î∫o.h
>

10 
	~<uni°d.h
>

11 
	~<›ícv2/highgui/highgui.hµ
>

12 
	~<f°ªam
>

13 
	~<io°ªam
>

14 
	~<m©h.h
>

15 
	~"DJI_guid™˚.h
"

16 
	~"DJI_utûôy.h
"

17 
	~<cm©h
>

18 
	~<s°ªam
>

19 
	~<°rög
>

20 
	~<ve˘‹
>

22 
	~<time.h
>

23 
	~<√töë/ö.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<sys/sockë.h
>

26 
	~<sys/time.h
>

27 
	~<f˙é.h
>

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<¨∑/öë.h
>

31 
	~<csig«l
>

33 
usög
 
«me•a˚
 
	gcv
;

34 
usög
 
«me•a˚
 
	g°d
;

36 
DJI_evít
 
	gg_evít
;

37 
DJI_lock
 
	gg_lock
;

39 
°rög
 
	$ôos
(
i
)

41 
°rög°ªam
 
ss
;

43 
ss
 << 
i
;

45  
ss
.
	`°r
();

46 
	}
}

48 
	#Thªs
 50

49 
	#WIDTH
 320

	)

50 
	#HEIGHT
 240

	)

51 
	#IMAGE_SIZE
 (
HEIGHT
 * 
WIDTH
)

	)

52 
	#RETURN_IF_ERR
(
îr_code
Ë{ if–îr_codê){ 
	`¥ötf
–"USBÉº‹ code:%d i¿fûê%†%d\n",Éº_code, 
__FILE__
, 
__LINE__
 );}}

	)

53 
	#RELEASE_IF_ERR
(
îr_code
Ë{ if–îr_codê){ 
	`ªÀa£_å™s„r
(); 
	`¥ötf
–"USBÉº‹ code:%d i¿fûê%†%d\n",Éº_code, 
__FILE__
, 
__LINE__
 );}}

	)

55 
	#GPS_Queue_MAX
 2000

56 
	#Image_Queue_MAX
 10

57 

	)

59 
	sgps_d©a


61 
	mgps_x
;

62 
	mgps_y
;

63 
	mgps_z
;

64 
	mgps_°©us
;

65 
	mgps_time_°amp
;

67 
	s©tôude_d©a


69 
	m©tôude_time_°amp
;

71 
	mpôch
;

72 
	mrﬁl
;

73 
	myaw
;

75 
	sMulD©aSåóm


77 
	mcou¡
;

79 
	mimage_time_°amp
;

80 
	mÀ·
[
WIDTH
*
HEIGHT
];

81 
	mright
[
WIDTH
*
HEIGHT
];

82 
	mdïth
[
WIDTH
*
HEIGHT
*2];

84 
gps_d©a
 
	mposi
;

85 
©tôude_d©a
 
	m©tôude
;

89 
e_vbus_ödex
 
	g£À˘ed_vbus
 = 
e_vbus1
;

90 
e_image_d©a_‰equecy
 
	g‰equícy
 = 
e_‰equecy_20
;

92 
image_d©a
 
	gimage
;

93 
mŸi⁄
 
	gmŸi⁄_d©a
;

94 
imu
 
	gimu_d©a
;

95 
MulD©aSåóm
 
	gd©a
;

96 
boﬁ
 
	gimage_upd©e
 = 0;

98 
	$my_ˇŒback
(
d©a_ty≥
, 
d©a_Àn
, *
c⁄ã¡
)

100 
g_lock
.
	`íãr
();

102 i‡(
e_image
 =
d©a_ty≥
 && 
NULL
 !
c⁄ã¡
)

104 
image_upd©e
 = 1;

105 
d©a
.
cou¡
++;

106 
	`mem˝y
((*)&
image
, 
c⁄ã¡
, (image));

109 i‡(
e_mŸi⁄
 =
d©a_ty≥
 && 
NULL
 !
c⁄ã¡
)

111 
	`mem˝y
((*)&
mŸi⁄_d©a
, 
c⁄ã¡
, (motion_data));

113 
d©a
.
posi
.
gps_x
 = 
mŸi⁄_d©a
.
posôi⁄_ö_globÆ_x
;

114 
d©a
.
posi
.
gps_y
 = 
mŸi⁄_d©a
.
posôi⁄_ö_globÆ_y
;

115 
d©a
.
posi
.
gps_z
 = 
mŸi⁄_d©a
.
posôi⁄_ö_globÆ_z
;

116 
d©a
.
posi
.
gps_time_°amp
 = 
mŸi⁄_d©a
.
time_°amp
;

117 
d©a
.
posi
.
gps_°©us
 = (
mŸi⁄_d©a
.
posôi⁄_°©us
 & 0x00000004) && (motion_data.position_status & 0x00000002) && (motion_data.position_status & 0x00000001);

120 i‡(
e_imu
 =
d©a_ty≥
 && 
NULL
 !
c⁄ã¡
)

122 
	`mem˝y
((*)&
imu_d©a
, 
c⁄ã¡
, (imu_data));

124 
d©a
.
©tôude
.
©tôude_time_°amp
 = 
imu_d©a
.
time_°amp
;

126 
a
, 
b
, 
c
, 
d
;

127 
a
 = 
imu_d©a
.
q
[0];

128 
b
 = 
imu_d©a
.
q
[1];

129 
c
 = 
imu_d©a
.
q
[2];

130 
d
 = 
imu_d©a
.
q
[3];

132 
d©a
.
©tôude
.
rﬁl
 = 
	`©™2
(2 * (
a
*
b
 + 
c
*
d
), 
	`pow
(a, 2) -Öow(b, 2) -Öow(c, 2) +Öow(d, 2));

133 
d©a
.
©tôude
.
pôch
 = -
	`asö
(2 * (
b
*
d
 - 
a
*
c
));

134 
d©a
.
©tôude
.
yaw
 = 
	`©™2
(2 * (
a
*
d
 + 
b
*
c
), 
	`pow
(a, 2) +Öow(b, 2) -Öow(c, 2) -Öow(d, 2));

137 
g_lock
.
	`Àave
();

138 
g_evít
.
	`£t_evít
();

140 
	}
}

142 
C⁄√˘Guid™˚
();

143 
Tøns„r
();

144 
	$sigroutöe
(
du¬o
)

146 
îr_code
 = 
	`ªÀa£_å™s„r
();

147 
	`RETURN_IF_ERR
(
îr_code
);

148 
cout
<<"å™s„∏i†ªÀa£d!"<<
ídl
;

149 
	`exô
(1);

150 
	}
}

151 
	$maö
()

153 
	`sig«l
(
SIGKILL
,
sigroutöe
);

154 
	`sig«l
(
SIGINT
,
sigroutöe
);

155 
	`sig«l
(
SIGSEGV
,
sigroutöe
);

156 
	`sig«l
(
SIGTSTP
,
sigroutöe
);

157 
	`sig«l
(
SIGPIPE
,
SIG_IGN
);

158 
	`C⁄√˘Guid™˚
();

161 
	`Tøns„r
();

163 
cout
<<"å™s„∏i†ovî!"<<
ídl
;

164 
îr_code
 = 
	`ªÀa£_å™s„r
();

165 
	`RETURN_IF_ERR
(
îr_code
);

166 
cout
<<"å™s„∏i†ªÀa£d!"<<
ídl
;

168 
	}
}

170 
	$C⁄√˘Guid™˚
()

172 
	`ª£t_c⁄fig
();

174 
îr_code
 = 
	`öô_å™s„r
();

175 
	`RETURN_IF_ERR
(
îr_code
);

176 
cout
<<"c⁄√˘i⁄ wôh guid™˚ suc˚ed!"<<
ídl
;

178 
îr_code
 = 
	`£À˘_gªysˇÀ_image
(
£À˘ed_vbus
, 
åue
);

179 
	`RELEASE_IF_ERR
(
îr_code
);

181 
îr_code
 = 
	`£À˘_gªysˇÀ_image
(
£À˘ed_vbus
, 
Ál£
);

182 
	`RELEASE_IF_ERR
(
îr_code
);

184 
îr_code
 = 
	`£À˘_dïth_image
(
£À˘ed_vbus
);

185 
	`RELEASE_IF_ERR
(
îr_code
);

187 
	`£t_image_‰equecy
(
‰equícy
);

189 
	`£À˘_mŸi⁄
();

190 
	`£À˘_imu
();

192 
îr_code
 = 
	`£t_sdk_evít_h™dÀr
(
my_ˇŒback
);

193 
	`RELEASE_IF_ERR
(
îr_code
);

196 
	}
}

198 c⁄° 
	gMAXLEN
 = 1200;

199 
sockaddr_ö
 
	gªmŸe_addr
;

200 
	sSídUnô


202 
	mödex
;

203 
	md©a
[
MAXLEN
];

205 
	sRecvUnô


207 
	mcou¡
;

208 
	md©a
[5];

210 
	eERRCODE


212 
	mSENDERROR
=1,

213 
	mSENDTIMEOUT
,

214 
	mACKERROR
,

215 
	mSUCCESS
,

217 
ERRCODE
 
	$SídD©a
(
sock
, *
buf
, 
size
)

219 
îr
;

220 
SídUnô
 
¢d_buf
;

221 
timevÆ
 
°¨t
,
íd
;

222 
	`gëtimeofday
(&
°¨t
,
NULL
);

223 
BlockNum
 = (
size
%
MAXLEN
)? size/MAXLEN+1:size/MAXLEN;

224 
i
 = 0;i<
BlockNum
;i++)

226 
¢d_buf
.
ödex
 = 
i
;

227 if(
i
<
size
/
MAXLEN
)

229 
	`mem˝y
(
¢d_buf
.
d©a
,
buf
+
i
*
MAXLEN
,MAXLEN);

233 
	`mem˝y
(
¢d_buf
.
d©a
,
buf
+
i
*
MAXLEN
,
size
-i*MAXLEN);

235 
îr
 = 
	`£ndto
(
sock
,&
¢d_buf
,(
SídUnô
),0,(
sockaddr
 *)&
ªmŸe_addr
,(remote_addr));

236 if(
îr
==-1)

238 
cout
<<
__LINE__
<<
ídl
;

239 
	`≥º‹
("sendÉrror");

240  
SENDERROR
;

242 if(
îr
 !(
SídUnô
))

244 
cout
<<"ÂèëÈÄÅÊï∞ÊçÆÂ§ßÂ∞è‰∏çÊ≠£Á°Æ:ÂèëÈÄÅ"<<
îr
<<"‰∏™Â≠óËäÇ "<<
__LINE__
<<
ídl
;

245  
SENDERROR
;

249 
RecvUnô
 *
rcv_buf
;

250 
sockaddr_ö
 
rcv_addr
;

251 
sockÀn_t
 
addr_size
 = (
sockaddr
);

252 
îr
=
	`ªcv‰om
(
sock
,(*)
rcv_buf
,(),0,(
sockaddr
*)&
rcv_addr
,&
addr_size
)

253 
	`gëtimeofday
(&
íd
,
NULL
);

254 
t
 = 1000000*(
íd
.
tv_£c
-
°¨t
.tv_£c)+”nd.
tv_u£c
-start.tv_usec);

255 
cout
<<"timêo‡⁄ê‰amêi†:"<<
t
<<
ídl
;

257  
SUCCESS
;

258 
	}
}

259 c⁄° 
	gIP_addªss
[]={"192.168.3.3"};

260 
	$Tøns„r
()

262 
˛õ¡_sockë
;

263 if((
˛õ¡_sockë
=
	`sockë
(
AF_INET
,
SOCK_DGRAM
,0))<0)

265 
cout
<<
__LINE__
<<
ídl
;

266 
	`≥º‹
("socket");

270 
Êags
 =
	`f˙é
(
˛õ¡_sockë
,
F_GETFL
,0);

271 
	`f˙é
(
˛õ¡_sockë
,
F_SETFL
,
Êags
&~
O_NONBLOCK
);

274 c⁄° 
¢d_size
 = 310*1024*2;

275 if(
	`£tsock›t
(
˛õ¡_sockë
, 
SOL_SOCKET
, 
SO_SNDBUF
, (*)&
¢d_size
, (snd_size))<0)

277 
cout
<<
__LINE__
<<
ídl
;

278 
	`≥º‹
("socket");

279 
	`≥º‹
("set socket send buffer");

293 
	`mem£t
(&
ªmŸe_addr
,0,(remote_addr));

294 
ªmŸe_addr
.
sö_Ámûy
=
AF_INET
;

295 
ªmŸe_addr
.
sö_addr
.
s_addr
=
	`öë_addr
(
IP_addªss
);

296 
ªmŸe_addr
.
sö_p‹t
=
	`ht⁄s
(8000);

298 c⁄° 
Àngth
 = (
MulD©aSåóm
);

299 
d©a_°ªam
[
Àngth
];

300 
	`mem£t
(
d©a_°ªam
, 0, 
Àngth
);

302 
îr_code
 = 
	`°¨t_å™s„r
();

303 
	`RELEASE_IF_ERR
(
îr_code
);

304 
cout
<<"å™s„∏i†°¨ãd!"<<
ídl
;

306 
d©a
.
cou¡
 = 0;

309 
g_evít
.
	`waô_evít
();

310 i‡(
image_upd©e
)

312 
d©a
.
image_time_°amp
 = 
image
.
time_°amp
;

313 
	`mem˝y
(
d©a
.
À·
, 
image
.
m_gªysˇÀ_image_À·
[
£À˘ed_vbus
], 
IMAGE_SIZE
);

314 
	`mem˝y
(
d©a
.
right
, 
image
.
m_gªysˇÀ_image_right
[
£À˘ed_vbus
], 
IMAGE_SIZE
);

315 
	`mem˝y
(
d©a
.
dïth
, 
image
.
m_dïth_image
[
£À˘ed_vbus
], 
IMAGE_SIZE
 * 2);

316 
	`mem£t
(
d©a_°ªam
,0,
Àngth
);

317 
	`mem˝y
(
d©a_°ªam
,&
d©a
,
Àngth
);

319 
ERRCODE
 
ªt
 = 
	`SídD©a
(
˛õ¡_sockë
, 
d©a_°ªam
, 
Àngth
);

320 i‡(
ªt
 =
SENDTIMEOUT
)

322 
cout
<<"Timeouà "<<
__LINE__
<<
ídl
;

324 if(
ªt
 !
SUCCESS
)

326 
cout
<<"Síd Eº‹ / ACKÉº‹"<<
__LINE__
<<
ídl
;

329 
image_upd©e
 = 0;

332 
îr_code
 = 
	`°›_å™s„r
();

333 
	`RELEASE_IF_ERR
(
îr_code
);

334 
cout
<<"å™s„∏i†°›≥d!"<<
ídl
;

336 
	`˛o£
(
˛õ¡_sockë
);

337 
cout
<<"sockë i†˛o£d!"<<
ídl
;

339 
	}
}

	@getDataAndTransTCP.cpp

9 
	~<uni°d.h
>

10 
	~<›ícv2/highgui/highgui.hµ
>

11 
	~<f°ªam
>

12 
	~<io°ªam
>

13 
	~<m©h.h
>

14 
	~"DJI_guid™˚.h
"

15 
	~"DJI_utûôy.h
"

16 
	~<cm©h
>

17 
	~<s°ªam
>

18 
	~<°rög
>

19 
	~<ve˘‹
>

21 
	~<î∫o.h
>

22 
	~<√töë/ö.h
>

23 
	~<uni°d.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<sys/sockë.h
>

26 
	~<°dio.h
>

27 
	~<°dlib.h
>

28 
	~<¨∑/öë.h
>

29 
	~<csig«l
>

30 
usög
 
«me•a˚
 
	gcv
;

31 
usög
 
«me•a˚
 
	g°d
;

33 
DJI_evít
 
	gg_evít
;

34 
DJI_lock
 
	gg_lock
;

36 
°rög
 
	$ôos
(
i
)

38 
°rög°ªam
 
ss
;

40 
ss
 << 
i
;

42  
ss
.
	`°r
();

43 
	}
}

45 
	#Thªs
 50

46 
	#WIDTH
 320

	)

47 
	#HEIGHT
 240

	)

48 
	#IMAGE_SIZE
 (
HEIGHT
 * 
WIDTH
)

	)

49 
	#RETURN_IF_ERR
(
îr_code
Ë{ if–îr_codê){ 
	`¥ötf
–"USBÉº‹ code:%d i¿fûê%†%d\n",Éº_code, 
__FILE__
, 
__LINE__
 );}}

	)

50 
	#RELEASE_IF_ERR
(
îr_code
Ë{ if–îr_codê){ 
	`ªÀa£_å™s„r
(); 
	`¥ötf
–"USBÉº‹ code:%d i¿fûê%†%d\n",Éº_code, 
__FILE__
, 
__LINE__
 );}}

	)

52 
	#GPS_Queue_MAX
 2000

53 
	#Image_Queue_MAX
 10

54 

	)

56 
	sgps_d©a


58 
	mgps_x
;

59 
	mgps_y
;

60 
	mgps_z
;

61 
	mgps_°©us
;

62 
	mgps_time_°amp
;

65 
	s©tôude_d©a


67 
	m©tôude_time_°amp
;

69 
	mpôch
;

70 
	mrﬁl
;

71 
	myaw
;

74 
	sMulD©aSåóm


76 
	mhód
[5];

77 
	mcou¡
;

79 
	mimage_time_°amp
;

80 
	mÀ·
[
WIDTH
*
HEIGHT
];

81 
	mright
[
WIDTH
*
HEIGHT
];

82 
	mdïth
[
WIDTH
*
HEIGHT
*2];

84 
gps_d©a
 
	mposi
;

85 
©tôude_d©a
 
	m©tôude
;

86 
	mèû
[5];

90 
e_vbus_ödex
 
	g£À˘ed_vbus
 = 
e_vbus1
;

91 
e_image_d©a_‰equecy
 
	g‰equícy
 = 
e_‰equecy_20
;

93 
image_d©a
 
	gimage
;

94 
mŸi⁄
 
	gmŸi⁄_d©a
;

95 
imu
 
	gimu_d©a
;

96 
MulD©aSåóm
 
	gd©a
;

97 
boﬁ
 
	gimage_upd©e
 = 0;

100 
boﬁ
 
	$SídD©a
(
sock
, *
buf
, 
size
)

102 
îr
;

103 
ödex
 = 0;

104 
size
 != 0)

106 
îr
 = 
	`£nd
(
sock
, (*)
buf
 + 
ödex
, 
size
, 0);

107 i‡(
îr
 == -1) ;

108 i‡(
îr
 == 0) ;

109 
size
 -
îr
;

110 
ödex
 +
îr
;

112  
size
 == 0;

113 
	}
}

114 
	$my_ˇŒback
(
d©a_ty≥
, 
d©a_Àn
, *
c⁄ã¡
)

116 
g_lock
.
	`íãr
();

118 i‡(
e_image
 =
d©a_ty≥
 && 
NULL
 !
c⁄ã¡
)

120 
image_upd©e
 = 1;

121 
d©a
.
cou¡
++;

122 
	`mem˝y
((*)&
image
, 
c⁄ã¡
, (image));

125 i‡(
e_mŸi⁄
 =
d©a_ty≥
 && 
NULL
 !
c⁄ã¡
)

127 
	`mem˝y
((*)&
mŸi⁄_d©a
, 
c⁄ã¡
, (motion_data));

129 
d©a
.
posi
.
gps_x
 = 
mŸi⁄_d©a
.
posôi⁄_ö_globÆ_x
;

130 
d©a
.
posi
.
gps_y
 = 
mŸi⁄_d©a
.
posôi⁄_ö_globÆ_y
;

131 
d©a
.
posi
.
gps_z
 = 
mŸi⁄_d©a
.
posôi⁄_ö_globÆ_z
;

132 
d©a
.
posi
.
gps_time_°amp
 = 
mŸi⁄_d©a
.
time_°amp
;

133 
d©a
.
posi
.
gps_°©us
 = (
mŸi⁄_d©a
.
posôi⁄_°©us
 & 0x00000004) && (motion_data.position_status & 0x00000002) && (motion_data.position_status & 0x00000001);

136 i‡(
e_imu
 =
d©a_ty≥
 && 
NULL
 !
c⁄ã¡
)

138 
	`mem˝y
((*)&
imu_d©a
, 
c⁄ã¡
, (imu_data));

140 
d©a
.
©tôude
.
©tôude_time_°amp
 = 
imu_d©a
.
time_°amp
;

142 
a
, 
b
, 
c
, 
d
;

143 
a
 = 
imu_d©a
.
q
[0];

144 
b
 = 
imu_d©a
.
q
[1];

145 
c
 = 
imu_d©a
.
q
[2];

146 
d
 = 
imu_d©a
.
q
[3];

148 
d©a
.
©tôude
.
rﬁl
 = 
	`©™2
(2 * (
a
*
b
 + 
c
*
d
), 
	`pow
(a, 2) -Öow(b, 2) -Öow(c, 2) +Öow(d, 2));

149 
d©a
.
©tôude
.
pôch
 = -
	`asö
(2 * (
b
*
d
 - 
a
*
c
));

150 
d©a
.
©tôude
.
yaw
 = 
	`©™2
(2 * (
a
*
d
 + 
b
*
c
), 
	`pow
(a, 2) +Öow(b, 2) -Öow(c, 2) -Öow(d, 2));

153 
g_lock
.
	`Àave
();

154 
g_evít
.
	`£t_evít
();

156 
	}
}

158 c⁄° 
	gIP_addªss
[]={"192.168.3.3"};

159 
C⁄√˘Guid™˚
();

160 
Tøns„r
();

162 
	$sigroutöe
(
du¬o
)

164 
îr_code
 = 
	`ªÀa£_å™s„r
();

165 
	`RETURN_IF_ERR
(
îr_code
);

166 
cout
<<"å™s„∏i†ªÀa£d!"<<
ídl
;

167 
	`exô
(0);

168 
	}
}

170 
	$maö
()

172 
	`sig«l
(
SIGINT
,
sigroutöe
);

173 
	`sig«l
(
SIGTSTP
,
sigroutöe
);

174 
	`sig«l
(
SIGSEGV
,
sigroutöe
);

175 
	`sig«l
(
SIGPIPE
,
SIG_IGN
);

176 
	`C⁄√˘Guid™˚
();

179 
	`Tøns„r
();

181 
	`¥ötf
("transfer is over!\n");

183 
îr_code
 = 
	`ªÀa£_å™s„r
();

184 
	`RETURN_IF_ERR
(
îr_code
);

185 
cout
<<"å™s„∏i†ªÀa£d!"<<
ídl
;

187 
	}
}

189 
	$Tøns„r
()

191 
˛õ¡_sockë
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

192 i‡(
˛õ¡_sockë
 < 0)

194 
	`¥ötf
("Create Socket Failed!\n");

195 
	`exô
(1);

198 
sockaddr_ö
 
£rvî_addr
;

199 
	`bzîo
(&
£rvî_addr
, (server_addr));

200 
£rvî_addr
.
sö_Ámûy
 = 
AF_INET
;

201 
£rvî_addr
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
IP_addªss
);

202 
£rvî_addr
.
sö_p‹t
 = 
	`ht⁄s
(6001);

204 
îr
;

205 
¢d_size
 = 310*1024*2;

206 
sockÀn_t
 
¢d_Àn
 = ();

207 
îr
 = 
	`£tsock›t
(
˛õ¡_sockë
, 
SOL_SOCKET
, 
SO_SNDBUF
, (*)&
¢d_size
,
¢d_Àn
);

208 i‡(
îr
<0){

209 
	`¥ötf
("error when setÅhe size of send buffer!\n");

212 
	`c⁄√˘
(
˛õ¡_sockë
, (
sockaddr
*)&
£rvî_addr
, (server_addr)) < 0)

214 
	`¥ötf
("Can Not Connect!\n");

215 
	`¶ìp
(2000000);

217 
	`¥ötf
("connnect with server succeed!\n");

219 
îr_code
 = 
	`°¨t_å™s„r
();

220 
	`RELEASE_IF_ERR
(
îr_code
);

221 
cout
<<"å™s„∏i†°¨ãd!"<<
ídl
;

223 c⁄° 
Àngth
 = (
MulD©aSåóm
);

224 
d©a_°ªam
[
Àngth
];

225 
	`mem£t
(
d©a_°ªam
, 0, 
Àngth
);

227 
	`mem˝y
(
d©a
.
hód
,"head",5);

228 
	`mem˝y
(
d©a
.
èû
,"tail",5);

230 
d©a
.
cou¡
 = 0;

234 
g_evít
.
	`waô_evít
();

235 i‡(
image_upd©e
)

238 
d©a
.
image_time_°amp
 = 
image
.
time_°amp
;

239 
	`mem˝y
(
d©a
.
À·
, 
image
.
m_gªysˇÀ_image_À·
[
£À˘ed_vbus
], 
IMAGE_SIZE
);

240 
	`mem˝y
(
d©a
.
right
, 
image
.
m_gªysˇÀ_image_right
[
£À˘ed_vbus
], 
IMAGE_SIZE
);

241 
	`mem˝y
(
d©a
.
dïth
, 
image
.
m_dïth_image
[
£À˘ed_vbus
], 
IMAGE_SIZE
 * 2);

242 
	`mem£t
(
d©a_°ªam
,0,
Àngth
);

243 
	`mem˝y
(
d©a_°ªam
,&
d©a
,
Àngth
);

245 
ªt
 = 
	`SídD©a
(
˛õ¡_sockë
, 
d©a_°ªam
, 
Àngth
);

246 i‡(
ªt
 == 0)

248 
	`¥ötf
("dataÉrror!\n");

252 
image_upd©e
 = 0;

255 
îr_code
 = 
	`°›_å™s„r
();

256 
	`RELEASE_IF_ERR
(
îr_code
);

257 
cout
<<"å™s„∏i†°›≥d!"<<
ídl
;

259 
	`˛o£
(
˛õ¡_sockë
);

260 
cout
<<"sockë i†˛o£d!"<<
ídl
;

262 
	}
}

264 
	$C⁄√˘Guid™˚
()

266 
	`ª£t_c⁄fig
();

267 
îr_code
 = 
	`öô_å™s„r
();

268 
	`RETURN_IF_ERR
(
îr_code
);

270 
	`¥ötf
("connection with guidance succeed!\n");

272 
îr_code
 = 
	`£À˘_gªysˇÀ_image
(
£À˘ed_vbus
, 
åue
);

273 
	`RELEASE_IF_ERR
(
îr_code
);

275 
îr_code
 = 
	`£À˘_gªysˇÀ_image
(
£À˘ed_vbus
, 
Ál£
);

276 
	`RELEASE_IF_ERR
(
îr_code
);

278 
îr_code
 = 
	`£À˘_dïth_image
(
£À˘ed_vbus
);

279 
	`RELEASE_IF_ERR
(
îr_code
);

281 
	`£t_image_‰equecy
(
‰equícy
);

283 
	`£À˘_mŸi⁄
();

284 
	`£À˘_imu
();

286 
îr_code
 = 
	`£t_sdk_evít_h™dÀr
(
my_ˇŒback
);

287 
	`RELEASE_IF_ERR
(
îr_code
);

290 
	}
}

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

77 
	~<bôs/°©.h
>

79 
	#S_IFMT
 
__S_IFMT


	)

80 
	#S_IFDIR
 
__S_IFDIR


	)

81 
	#S_IFCHR
 
__S_IFCHR


	)

82 
	#S_IFBLK
 
__S_IFBLK


	)

83 
	#S_IFREG
 
__S_IFREG


	)

84 #ifde‡
__S_IFIFO


85 
	#S_IFIFO
 
__S_IFIFO


	)

87 #ifde‡
__S_IFLNK


88 
	#S_IFLNK
 
__S_IFLNK


	)

90 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


91 
	#S_IFSOCK
 
__S_IFSOCK


	)

96 
	#S_ISUID
 
__S_ISUID


	)

97 
	#S_ISGID
 
__S_ISGID


	)

99 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_ISVTX
 
__S_ISVTX


	)

104 
	#S_IRUSR
 
__S_IREAD


	)

105 
	#S_IWUSR
 
__S_IWRITE


	)

106 
	#S_IXUSR
 
__S_IEXEC


	)

108 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

110 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

111 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

112 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

114 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

116 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

117 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

118 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

120 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

123 #ifdef 
__USE_MISC


124 #i‚de‡
R_OK


127 
	#R_OK
 4

	)

128 
	#W_OK
 2

	)

129 
	#X_OK
 1

	)

130 
	#F_OK
 0

	)

135 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


136 
	#SEEK_SET
 0

	)

137 
	#SEEK_CUR
 1

	)

138 
	#SEEK_END
 2

	)

146 
f˙é
 (
__fd
, 
__cmd
, ...);

155 #i‚de‡
__USE_FILE_OFFSET64


156 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

160 
	`__n⁄nuŒ
 ((1));

162 
	#›í
 
›í64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

169 #ifde‡
__USE_ATFILE


179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

181 
	`__n⁄nuŒ
 ((2));

183 #ifde‡
__REDIRECT


184 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

185 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

187 
	#›í©
 
›í©64


	)

190 #ifde‡
__USE_LARGEFILE64


191 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

192 
	`__n⁄nuŒ
 ((2));

201 #i‚de‡
__USE_FILE_OFFSET64


202 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

204 #ifde‡
__REDIRECT


205 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

206 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

208 
	#¸ót
 
¸ót64


	)

211 #ifde‡
__USE_LARGEFILE64


212 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

215 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

216 && !
deföed
 
__USE_POSIX
))

225 
	#F_ULOCK
 0

	)

226 
	#F_LOCK
 1

	)

227 
	#F_TLOCK
 2

	)

228 
	#F_TEST
 3

	)

230 #i‚de‡
__USE_FILE_OFFSET64


231 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

233 #ifde‡
__REDIRECT


234 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

236 
	#lockf
 
lockf64


	)

239 #ifde‡
__USE_LARGEFILE64


240 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

244 #ifde‡
__USE_XOPEN2K


247 #i‚de‡
__USE_FILE_OFFSET64


248 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

249 
__advi£
Ë
__THROW
;

251 #ifde‡
__REDIRECT_NTH


252 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

253 
__off64_t
 
__Àn
, 
__advi£
),

254 
posix_Ádvi£64
);

256 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

259 #ifde‡
__USE_LARGEFILE64


260 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

261 
__advi£
Ë
__THROW
;

269 #i‚de‡
__USE_FILE_OFFSET64


270 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

272 #ifde‡
__REDIRECT


273 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

274 
__off64_t
 
__Àn
),

275 
posix_ÁŒoˇã64
);

277 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

280 #ifde‡
__USE_LARGEFILE64


281 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

287 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

288 && 
deföed
 
__va_¨g_∑ck_Àn


289 
	~<bôs/f˙é2.h
>

292 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_RAW
 = 255,

89 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

90 
	mIPPROTO_MAX


96 #i‚de‡
__USE_KERNEL_IPV6_DEFS


99 
	mIPPROTO_HOPOPTS
 = 0,

100 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

101 
	mIPPROTO_ROUTING
 = 43,

102 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

103 
	mIPPROTO_FRAGMENT
 = 44,

104 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

105 
	mIPPROTO_ICMPV6
 = 58,

106 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

107 
	mIPPROTO_NONE
 = 59,

108 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

109 
	mIPPROTO_DSTOPTS
 = 60,

110 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

111 
	mIPPROTO_MH
 = 135

112 
	#IPPROTO_MH
 
IPPROTO_MH


	)

117 
uöt16_t
 
	tö_p‹t_t
;

122 
	mIPPORT_ECHO
 = 7,

123 
	mIPPORT_DISCARD
 = 9,

124 
	mIPPORT_SYSTAT
 = 11,

125 
	mIPPORT_DAYTIME
 = 13,

126 
	mIPPORT_NETSTAT
 = 15,

127 
	mIPPORT_FTP
 = 21,

128 
	mIPPORT_TELNET
 = 23,

129 
	mIPPORT_SMTP
 = 25,

130 
	mIPPORT_TIMESERVER
 = 37,

131 
	mIPPORT_NAMESERVER
 = 42,

132 
	mIPPORT_WHOIS
 = 43,

133 
	mIPPORT_MTP
 = 57,

135 
	mIPPORT_TFTP
 = 69,

136 
	mIPPORT_RJE
 = 77,

137 
	mIPPORT_FINGER
 = 79,

138 
	mIPPORT_TTYLINK
 = 87,

139 
	mIPPORT_SUPDUP
 = 95,

142 
	mIPPORT_EXECSERVER
 = 512,

143 
	mIPPORT_LOGINSERVER
 = 513,

144 
	mIPPORT_CMDSERVER
 = 514,

145 
	mIPPORT_EFSSERVER
 = 520,

148 
	mIPPORT_BIFFUDP
 = 512,

149 
	mIPPORT_WHOSERVER
 = 513,

150 
	mIPPORT_ROUTESERVER
 = 520,

153 
	mIPPORT_RESERVED
 = 1024,

156 
	mIPPORT_USERRESERVED
 = 5000

164 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

165 
	#IN_CLASSA_NET
 0xff000000

	)

166 
	#IN_CLASSA_NSHIFT
 24

	)

167 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

168 
	#IN_CLASSA_MAX
 128

	)

170 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

171 
	#IN_CLASSB_NET
 0xffff0000

	)

172 
	#IN_CLASSB_NSHIFT
 16

	)

173 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

174 
	#IN_CLASSB_MAX
 65536

	)

176 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

177 
	#IN_CLASSC_NET
 0xffffff00

	)

178 
	#IN_CLASSC_NSHIFT
 8

	)

179 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

181 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

182 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

184 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

185 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

188 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

190 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

192 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#IN_LOOPBACKNET
 127

	)

197 #i‚de‡
INADDR_LOOPBACK


198 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

202 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

203 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

204 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

205 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

207 #i‚de‡
__USE_KERNEL_IPV6_DEFS


209 
	sö6_addr


213 
uöt8_t
 
	m__u6_addr8
[16];

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


215 
uöt16_t
 
	m__u6_addr16
[8];

216 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‚de‡
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‚de‡
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

387 #ifde‡
__OPTIMIZE__


391 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


394 
	#¡ohl
(
x
Ë(x)

	)

395 
	#¡ohs
(
x
Ë(x)

	)

396 
	#ht⁄l
(
x
Ë(x)

	)

397 
	#ht⁄s
(
x
Ë(x)

	)

399 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


400 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

401 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

402 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

408 #ifde‡
__GNUC__


409 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

410 (
__exãnsi⁄__
 \

411 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

412 
__a
->
s6_addr32
[0] == 0 \

413 && 
__a
->
s6_addr32
[1] == 0 \

414 && 
__a
->
s6_addr32
[2] == 0 \

415 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

417 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

418 (
__exãnsi⁄__
 \

419 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

420 
__a
->
s6_addr32
[0] == 0 \

421 && 
__a
->
s6_addr32
[1] == 0 \

422 && 
__a
->
s6_addr32
[2] == 0 \

423 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

425 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

430 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

431 (
__exãnsi⁄__
 \

432 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

433 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

435 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

436 (
__exãnsi⁄__
 \

437 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

438 
__a
->
s6_addr32
[0] == 0 \

439 && 
__a
->
s6_addr32
[1] == 0 \

440 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

442 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

443 (
__exãnsi⁄__
 \

444 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

445 
__a
->
s6_addr32
[0] == 0 \

446 && 
__a
->
s6_addr32
[1] == 0 \

447 && 
__a
->
s6_addr32
[2] == 0 \

448 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

450 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

451 (
__exãnsi⁄__
 \

452 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

453 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

454 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

455 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

456 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

457 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

459 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

460 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

461 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

465 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

466 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

467 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

471 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

472 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

473 =
	`ht⁄l
 (0x„800000))

	)

475 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

476 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

477 =
	`ht⁄l
 (0x„c00000))

	)

479 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

480 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

481 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

484 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

486 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

488 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

490 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

491 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

492 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

497 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

499 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


501 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

504 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

505 
__THROW
;

509 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

510 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

511 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

513 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

514 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

515 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

517 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

518 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

519 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

521 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

522 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

523 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

525 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

526 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

527 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

530 #ifde‡
__USE_GNU


531 
cmsghdr
;

534 
	sö6_pktöfo


536 
ö6_addr
 
ùi6_addr
;

537 
ùi6_ifödex
;

541 
	sù6_mtuöfo


543 
sockaddr_ö6
 
ù6m_addr
;

544 
uöt32_t
 
ù6m_mtu
;

549 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

552 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

553 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

554 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

555 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

557 
__mu…x
, 
__∂usy
)

558 
__THROW
 
__©åibuã_dïªˇãd__
;

559 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

560 
uöt8_t
 **
__çåp
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
, 
__ty≥
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

568 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

569 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

573 
__THROW
;

574 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

575 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

577 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

578 **
__d©abuÂ
Ë
__THROW
;

579 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

583 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

587 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

588 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

589 
__£gmíts
Ë
__THROW
;

590 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

591 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

592 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

593 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

594 
__THROW
;

600 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

601 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

602 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

603 
__THROW
;

606 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

607 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

608 
uöt32_t
 
__num§c
,

609 c⁄° 
ö_addr
 *
__¶i°
)

610 
__THROW
;

614 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

615 c⁄° 
sockaddr
 *
__group
,

616 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

617 
uöt32_t
 *
__num§c
,

618 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

621 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

622 c⁄° 
sockaddr
 *
__group
,

623 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

624 
uöt32_t
 
__num§c
,

625 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

628 
__END_DECLS


	@/usr/include/opencv2/highgui/highgui.hpp

43 #i‚de‡
__OPENCV_HIGHGUI_HPP__


44 
	#__OPENCV_HIGHGUI_HPP__


	)

46 
	~"›ícv2/c‹e/c‹e.hµ
"

47 
	~"›ícv2/highgui/highgui_c.h
"

49 #ifde‡
__˝lu•lus


51 
	gCvC≠tuª
;

52 
	gCvVideoWrôî
;

54 
«me•a˚
 
	gcv


59 
	gWINDOW_NORMAL
 = 
CV_WINDOW_NORMAL
,

60 
	gWINDOW_AUTOSIZE
 = 
CV_WINDOW_AUTOSIZE
,

61 
	gWINDOW_OPENGL
 = 
CV_WINDOW_OPENGL
,

64 
	gWND_PROP_FULLSCREEN
 = 
CV_WND_PROP_FULLSCREEN
,

65 
	gWND_PROP_AUTOSIZE
 = 
CV_WND_PROP_AUTOSIZE
,

66 
	gWND_PROP_ASPECT_RATIO
 = 
CV_WND_PROP_ASPECTRATIO
,

67 
	gWND_PROP_OPENGL
 = 
CV_WND_PROP_OPENGL


70 
CV_EXPORTS_W
 
«medWödow
(c⁄° 
°rög
& 
wö«me
, 
Êags
 = 
WINDOW_AUTOSIZE
);

71 
CV_EXPORTS_W
 
de°royWödow
(c⁄° 
°rög
& 
wö«me
);

72 
CV_EXPORTS_W
 
de°royAŒWödows
();

74 
CV_EXPORTS_W
 
°¨tWödowThªad
();

76 
CV_EXPORTS_W
 
waôKey
(
dñay
 = 0);

78 
CV_EXPORTS_W
 
imshow
(c⁄° 
°rög
& 
wö«me
, 
I≈utAºay
 
m©
);

80 
CV_EXPORTS_W
 
ªsizeWödow
(c⁄° 
°rög
& 
wö«me
, 
width
, 
height
);

81 
CV_EXPORTS_W
 
moveWödow
(c⁄° 
°rög
& 
wö«me
, 
x
, 
y
);

83 
CV_EXPORTS_W
 
£tWödowPr›îty
(c⁄° 
°rög
& 
wö«me
, 
¥›_id
, 
¥›_vÆue
);

84 
CV_EXPORTS_W
 
gëWödowPr›îty
(c⁄° 
°rög
& 
wö«me
, 
¥›_id
);

88 
	gEVENT_MOUSEMOVE
 =0,

89 
	gEVENT_LBUTTONDOWN
 =1,

90 
	gEVENT_RBUTTONDOWN
 =2,

91 
	gEVENT_MBUTTONDOWN
 =3,

92 
	gEVENT_LBUTTONUP
 =4,

93 
	gEVENT_RBUTTONUP
 =5,

94 
	gEVENT_MBUTTONUP
 =6,

95 
	gEVENT_LBUTTONDBLCLK
 =7,

96 
	gEVENT_RBUTTONDBLCLK
 =8,

97 
	gEVENT_MBUTTONDBLCLK
 =9

102 
	gEVENT_FLAG_LBUTTON
 =1,

103 
	gEVENT_FLAG_RBUTTON
 =2,

104 
	gEVENT_FLAG_MBUTTON
 =4,

105 
	gEVENT_FLAG_CTRLKEY
 =8,

106 
	gEVENT_FLAG_SHIFTKEY
 =16,

107 
	gEVENT_FLAG_ALTKEY
 =32

110 (*
	gMou£CÆlback
)(
	tevít
, 
	tx
, 
	ty
, 
	tÊags
, * 
	tu£rd©a
);

113 
CV_EXPORTS
 
£tMou£CÆlback
(c⁄° 
°rög
& 
wö«me
, 
Mou£CÆlback
 
⁄Mou£
, * 
u£rd©a
 = 0);

116 (
CV_CDECL
 *
	tTøckb¨CÆlback
)(
	tpos
, * 
	tu£rd©a
);

118 
CV_EXPORTS
 
¸óãTøckb¨
(c⁄° 
°rög
& 
åackb¨«me
, c⁄° såög& 
wö«me
,

119 * 
vÆue
, 
cou¡
,

120 
Tøckb¨CÆlback
 
⁄Ch™ge
 = 0,

121 * 
u£rd©a
 = 0);

123 
CV_EXPORTS_W
 
gëTøckb¨Pos
(c⁄° 
°rög
& 
åackb¨«me
, c⁄° såög& 
wö«me
);

124 
CV_EXPORTS_W
 
£tTøckb¨Pos
(c⁄° 
°rög
& 
åackb¨«me
, c⁄° såög& 
wö«me
, 
pos
);

128 (*
	gO≥nGlDøwCÆlback
)(* 
	tu£rd©a
);

129 
CV_EXPORTS
 
£tO≥nGlDøwCÆlback
(c⁄° 
°rög
& 
wö«me
, 
O≥nGlDøwCÆlback
 
⁄O≥nGlDøw
, * 
u£rd©a
 = 0);

131 
CV_EXPORTS
 
£tO≥nGlC⁄ãxt
(c⁄° 
°rög
& 
wö«me
);

133 
CV_EXPORTS
 
upd©eWödow
(c⁄° 
°rög
& 
wö«me
);

136 
CV_EXPORTS
 
poötCloudShow
(c⁄° 
°rög
& 
wö«me
, c⁄° 
GlCamîa
& 
ˇmîa
, c⁄° 
GlAºays
& 
¨r
);

137 
CV_EXPORTS
 
poötCloudShow
(c⁄° 
°rög
& 
wö«me
, c⁄° 
GlCamîa
& 
ˇmîa
, 
I≈utAºay
 
poöts
, I≈utAºay 
cﬁ‹s
 = 
noAºay
());

142 
CV_EXPORTS
 
CvF⁄t
 
f⁄tQt
(c⁄° 
°rög
& 
«meF⁄t
, 
poötSize
=-1,

143 
Sˇœr
 
cﬁ‹
=Sˇœr::
Æl
(0), 
weight
=
CV_FONT_NORMAL
,

144 
°yÀ
=
CV_STYLE_NORMAL
, 
•acög
=0);

145 
CV_EXPORTS
 
addText
–c⁄° 
M©
& 
img
, c⁄° 
°rög
& 
ãxt
, 
Poöt
 
‹g
, 
CvF⁄t
 
f⁄t
);

147 
CV_EXPORTS
 
di•œyOvîœy
(c⁄° 
°rög
& 
wö«me
, c⁄° såög& 
ãxt
, 
dñayms
 
CV_DEFAULT
(0));

148 
CV_EXPORTS
 
di•œySètusB¨
(c⁄° 
°rög
& 
wö«me
, c⁄° såög& 
ãxt
, 
dñayms
 
CV_DEFAULT
(0));

150 
CV_EXPORTS
 
ßveWödowP¨amëîs
(c⁄° 
°rög
& 
wödowName
);

151 
CV_EXPORTS
 
lﬂdWödowP¨amëîs
(c⁄° 
°rög
& 
wödowName
);

152 
CV_EXPORTS
 
°¨tLo›
((*
±2Func
)(
¨gc
, *
¨gv
[]), argc, *árgv[]);

153 
CV_EXPORTS
 
°›Lo›
();

155 (
CV_CDECL
 *
	tBuâ⁄CÆlback
)(
	t°©e
, * 
	tu£rd©a
);

156 
CV_EXPORTS
 
¸óãBuâ⁄
–c⁄° 
°rög
& 
b¨_«me
, 
Buâ⁄CÆlback
 
⁄_ch™ge
,

157 * 
u£rd©a
=
NULL
, 
ty≥
=
CV_PUSH_BUTTON
,

158 
boﬁ
 
öôül_buâ⁄_°©e
=0);

165 
	gIMREAD_UNCHANGED
 =-1,

167 
	gIMREAD_GRAYSCALE
 =0,

169 
	gIMREAD_COLOR
 =1,

171 
	gIMREAD_ANYDEPTH
 =2,

173 
	gIMREAD_ANYCOLOR
 =4

178 
	gIMWRITE_JPEG_QUALITY
 =1,

179 
	gIMWRITE_PNG_COMPRESSION
 =16,

180 
	gIMWRITE_PNG_STRATEGY
 =17,

181 
	gIMWRITE_PNG_BILEVEL
 =18,

182 
	gIMWRITE_PNG_STRATEGY_DEFAULT
 =0,

183 
	gIMWRITE_PNG_STRATEGY_FILTERED
 =1,

184 
	gIMWRITE_PNG_STRATEGY_HUFFMAN_ONLY
 =2,

185 
	gIMWRITE_PNG_STRATEGY_RLE
 =3,

186 
	gIMWRITE_PNG_STRATEGY_FIXED
 =4,

187 
	gIMWRITE_PXM_BINARY
 =32

190 
CV_EXPORTS_W
 
M©
 
imªad
–c⁄° 
°rög
& 
fûíame
, 
Êags
=1 );

191 
CV_EXPORTS_W
 
boﬁ
 
imwrôe
–c⁄° 
°rög
& 
fûíame
, 
I≈utAºay
 
img
,

192 c⁄° 
ve˘‹
<>& 
∑øms
=vector<>());

193 
CV_EXPORTS_W
 
M©
 
imdecode
–
I≈utAºay
 
buf
, 
Êags
 );

194 
CV_EXPORTS
 
M©
 
imdecode
–
I≈utAºay
 
buf
, 
Êags
, M©* 
d°
 );

195 
CV_EXPORTS_W
 
boﬁ
 
imícode
–c⁄° 
°rög
& 
ext
, 
I≈utAºay
 
img
,

196 
CV_OUT
 
ve˘‹
<
uch¨
>& 
buf
,

197 c⁄° 
ve˘‹
<>& 
∑øms
=vector<>());

199 #i‚de‡
CV_NO_VIDEO_CAPTURE_CPP_API


201 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvC≠tuª
>::
dñëe_obj
();

202 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvVideoWrôî
>::
dñëe_obj
();

204 ˛as†
	cCV_EXPORTS_W
 
	gVideoC≠tuª


206 
	gpublic
:

207 
CV_WRAP
 
VideoC≠tuª
();

208 
CV_WRAP
 
VideoC≠tuª
(c⁄° 
°rög
& 
fûíame
);

209 
CV_WRAP
 
VideoC≠tuª
(
devi˚
);

211 
	gvútuÆ
 ~
VideoC≠tuª
();

212 
CV_WRAP
 
vútuÆ
 
boﬁ
 
›í
(c⁄° 
°rög
& 
fûíame
);

213 
CV_WRAP
 
vútuÆ
 
boﬁ
 
›í
(
devi˚
);

214 
CV_WRAP
 
vútuÆ
 
boﬁ
 
isO≥√d
() const;

215 
CV_WRAP
 
vútuÆ
 
ªÀa£
();

217 
CV_WRAP
 
vútuÆ
 
boﬁ
 
gøb
();

218 
CV_WRAP
 
vútuÆ
 
boﬁ
 
ªåõve
(
CV_OUT
 
M©
& 
image
, 
ch™√l
=0);

219 
vútuÆ
 
	gVideoC≠tuª
& 
	g›î©‹
 >> (
CV_OUT
 
	gM©
& 
	gimage
);

220 
CV_WRAP
 
vútuÆ
 
boﬁ
 
ªad
(
CV_OUT
 
M©
& 
image
);

222 
CV_WRAP
 
vútuÆ
 
boﬁ
 
£t
(
¥›Id
, 
vÆue
);

223 
CV_WRAP
 
vútuÆ
 
gë
(
¥›Id
);

225 
	g¥Ÿe˘ed
:

226 
På
<
CvC≠tuª
> 
ˇp
;

230 ˛as†
	cCV_EXPORTS_W
 
	gVideoWrôî


232 
	gpublic
:

233 
CV_WRAP
 
VideoWrôî
();

234 
CV_WRAP
 
VideoWrôî
(c⁄° 
°rög
& 
fûíame
, 
fourcc
, 
Âs
,

235 
Size
 
‰ameSize
, 
boﬁ
 
isCﬁ‹
=
åue
);

237 
	gvútuÆ
 ~
VideoWrôî
();

238 
CV_WRAP
 
vútuÆ
 
boﬁ
 
›í
(c⁄° 
°rög
& 
fûíame
, 
fourcc
, 
Âs
,

239 
Size
 
‰ameSize
, 
boﬁ
 
isCﬁ‹
=
åue
);

240 
CV_WRAP
 
vútuÆ
 
boﬁ
 
isO≥√d
() const;

241 
CV_WRAP
 
vútuÆ
 
ªÀa£
();

242 
vútuÆ
 
	gVideoWrôî
& 
	g›î©‹
 << (c⁄° 
	gM©
& 
	gimage
);

243 
CV_WRAP
 
vútuÆ
 
wrôe
(c⁄° 
M©
& 
image
);

245 
	g¥Ÿe˘ed
:

246 
På
<
CvVideoWrôî
> 
wrôî
;

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	#__√ed_time•ec


	)

25 
	~<time.h
>

29 
	~<bôs/£m≠h‹e.h
>

32 
__BEGIN_DECLS


36 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

37 
__THROW
;

39 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

42 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...Ë
__THROW
;

45 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

48 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
;

54 
	`£m_waô
 (
£m_t
 *
__£m
);

56 #ifde‡
__USE_XOPEN2K


61 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

62 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

66 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

69 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

72 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

73 
__THROW
;

76 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/opencv2/core/core.hpp

46 #i‚de‡
__OPENCV_CORE_HPP__


47 
	#__OPENCV_CORE_HPP__


	)

49 
	~"›ícv2/c‹e/ty≥s_c.h
"

50 
	~"›ícv2/c‹e/vîsi⁄.hµ
"

52 #ifde‡
__˝lu•lus


54 #i‚de‡
SKIP_INCLUDES


55 
	~<limôs.h
>

56 
	~<Æg‹ôhm
>

57 
	~<cm©h
>

58 
	~<c°ddef
>

59 
	~<com∂ex
>

60 
	~<m≠
>

61 
	~<√w
>

62 
	~<°rög
>

63 
	~<ve˘‹
>

64 
	~<s°ªam
>

70 
«me•a˚
 
	gcv
 {

72 #unde‡
abs


73 #unde‡
mö


74 #unde‡
max


75 #unde‡
Com∂ex


77 
usög
 
	g°d
::
ve˘‹
;

78 
usög
 
	g°d
::
°rög
;

79 
usög
 
	g°d
::
±rdiff_t
;

81 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gSize_
;

82 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gPoöt_
;

83 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gRe˘_
;

84 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
˛ass
 
	gVec
;

85 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
˛ass
 
	gM©x
;

87 
	g°d
::
	t°rög
 
	tSåög
;

89 
˛ass
 
	gM©
;

90 
˛ass
 
	gS∑r£M©
;

91 
M©
 
	tM©ND
;

93 
«me•a˚
 
	gogl
 {

94 
˛ass
 
	gBuf„r
;

95 
˛ass
 
	gTextuª2D
;

96 
˛ass
 
	gAºays
;

100 
˛ass
 
	gGlBuf„r
;

101 
˛ass
 
	gGlTextuª
;

102 
˛ass
 
	gGlAºays
;

103 
˛ass
 
	gGlCamîa
;

106 
«me•a˚
 
	ggpu
 {

107 
˛ass
 
	gGpuM©
;

110 
˛ass
 
CV_EXPORTS
 
	gM©Ex¥
;

111 
˛ass
 
CV_EXPORTS
 
	gM©Op_Ba£
;

112 
˛ass
 
CV_EXPORTS
 
	gM©Arg
;

113 
˛ass
 
CV_EXPORTS
 
	gM©C⁄°Iãøt‹
;

115 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gM©_
;

116 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gM©Iãøt‹_
;

117 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gM©C⁄°Iãøt‹_
;

118 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gM©CommaInôülizî_
;

120 #i‡!
deföed
(
ANDROID
Ë|| (deföed(
_GLIBCXX_USE_WCHAR_T
) && _GLIBCXX_USE_WCHAR_T)

121 
	g°d
::
	tbasic_°rög
<
	twch¨_t
> 
	tWSåög
;

123 
CV_EXPORTS
 
°rög
 
‰omUtf16
(c⁄° 
WSåög
& 
°r
);

124 
CV_EXPORTS
 
WSåög
 
toUtf16
(c⁄° 
°rög
& 
°r
);

127 
CV_EXPORTS
 
°rög
 
f‹m©
–c⁄° * 
fmt
, ... );

128 
CV_EXPORTS
 
°rög
 
ãmpfûe
–c⁄° * 
suffix
 
CV_DEFAULT
(0));

131 íum { 
	gDECOMP_LU
=0, 
	gDECOMP_SVD
=1, 
	gDECOMP_EIG
=2, 
	gDECOMP_CHOLESKY
=3, 
	gDECOMP_QR
=4, 
	gDECOMP_NORMAL
=16 };

132 íum { 
	gNORM_INF
=1, 
	gNORM_L1
=2, 
	gNORM_L2
=4, 
	gNORM_L2SQR
=5, 
	gNORM_HAMMING
=6, 
	gNORM_HAMMING2
=7, 
	gNORM_TYPE_MASK
=7, 
	gNORM_RELATIVE
=8, 
	gNORM_MINMAX
=32 };

133 íum { 
	gCMP_EQ
=0, 
	gCMP_GT
=1, 
	gCMP_GE
=2, 
	gCMP_LT
=3, 
	gCMP_LE
=4, 
	gCMP_NE
=5 };

134 íum { 
	gGEMM_1_T
=1, 
	gGEMM_2_T
=2, 
	gGEMM_3_T
=4 };

135 íum { 
	gDFT_INVERSE
=1, 
	gDFT_SCALE
=2, 
	gDFT_ROWS
=4, 
	gDFT_COMPLEX_OUTPUT
=16, 
	gDFT_REAL_OUTPUT
=32,

136 
	gDCT_INVERSE
 = 
DFT_INVERSE
, 
	gDCT_ROWS
=
DFT_ROWS
 };

143 ˛as†
	cCV_EXPORTS
 
	gEx˚±i⁄
 : 
public
 
°d
::
ex˚±i⁄


145 
public
:

149 
Ex˚±i⁄
();

154 
Ex˚±i⁄
(
_code
, c⁄° 
°rög
& 
_îr
, c⁄° såög& 
_func
, c⁄° såög& 
_fûe
, 
_löe
);

155 
	gvútuÆ
 ~
Ex˚±i⁄
(Ë
throw
();

160 
vútuÆ
 c⁄° *
wh©
(Ëc⁄° 
throw
();

161 
f‹m©Mesßge
();

163 
°rög
 
	gmsg
;

165 
	gcode
;

166 
°rög
 
	gîr
;

167 
°rög
 
	gfunc
;

168 
°rög
 
	gfûe
;

169 
	glöe
;

182 
CV_EXPORTS
 
îr‹
–c⁄° 
Ex˚±i⁄
& 
exc
 );

192 
CV_EXPORTS
 
boﬁ
 
£tBªakOnEº‹
(boﬁ 
Êag
);

194 (
	tCV_CDECL
 *
	tEº‹CÆlback
)–
	t°©us
, c⁄° * 
	tfunc_«me
,

195 c⁄° * 
	tîr_msg
, c⁄° * 
	tfûe_«me
,

196 
	tlöe
, * 
	tu£rd©a
 );

209 
CV_EXPORTS
 
Eº‹CÆlback
 
	`ªdúe˘Eº‹
–Eº‹CÆlback 
îrCÆlback
,

210 * 
u£rd©a
=0, ** 
¥evU£rd©a
=0);

213 #i‡
deföed
 
__GNUC__


214 
	#CV_Func
 
__func__


	)

215 #ñi‡
deföed
 
_MSC_VER


216 
	#CV_Func
 
__FUNCTION__


	)

218 
	#CV_Func
 ""

	)

221 
	#CV_Eº‹
–
code
, 
msg
 ) 
cv
::
	`îr‹
–cv::
	$Ex˚±i⁄
(
code
, 
msg
, 
CV_Func
, 
__FILE__
, 
__LINE__
Ë)

	)

222 
	#CV_Eº‹_
–
code
, 
¨gs
 ) 
cv
::
	`îr‹
–cv::
	$Ex˚±i⁄
(
code
, 
cv
::
f‹m©
 
¨gs
, 
CV_Func
, 
__FILE__
, 
__LINE__
Ë)

	)

223 
	#CV_As£π
–
ex¥
 ) if(!!”x¥)Ë; 
cv
::
	`îr‹
–cv::
	`Ex˚±i⁄
(
CV_StsAs£π
, #ex¥, 
CV_Func
, 
__FILE__
, 
__LINE__
Ë)

	)

225 #ifde‡
_DEBUG


226 
	#CV_DbgAs£π
(
ex¥
Ë
	$CV_As£π
(
ex¥
)

	)

228 
	#CV_DbgAs£π
(
ex¥
)

	)

231 
CV_EXPORTS
 
	`glob
(
Såög
 
∑âîn
, 
°d
::
ve˘‹
<Såög>& 
ªsu…
, 
boﬁ
 
ªcursive
 = 
Ál£
);

233 
CV_EXPORTS
 
	`£tNumThªads
(
¡hªads
);

234 
CV_EXPORTS
 
	`gëNumThªads
();

235 
CV_EXPORTS
 
	`gëThªadNum
();

237 
CV_EXPORTS_W
 c⁄° 
°rög
& 
	`gëBuûdInf‹m©i⁄
();

247 
CV_EXPORTS_W
 
öt64
 
	`gëTickCou¡
();

261 
CV_EXPORTS_W
 
	`gëTickFªquícy
();

271 
CV_EXPORTS_W
 
öt64
 
	`gëCPUTickCou¡
();

292 
CV_EXPORTS_W
 
boﬁ
 
	`checkH¨dw¨eSuµ‹t
(
„©uª
);

295 
CV_EXPORTS_W
 
	`gëNumbîOfCPUs
();

307 
CV_EXPORTS
 * 
	`Á°MÆloc
(
size_t
 
bufSize
);

315 
CV_EXPORTS
 
	`Á°Fªe
(* 
±r
);

317 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 _Tp* 
	$Æloˇã
(
size_t
 
n
)

319  
√w
 
_Tp
[
n
];

320 
	}
}

322 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	$dóŒoˇã
(
_Tp
* 
±r
, 
size_t
)

324 
dñëe
[] 
±r
;

325 
	}
}

333 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
ÆignPå
(_Tp* 
±r
, 
n
=()(_Tp))

335  (
_Tp
*)(((
size_t
)
±r
 + 
n
-1) & -n);

336 
	}
}

343 
ölöe
 
size_t
 
	$ÆignSize
(
size_t
 
sz
, 
n
)

345 
	`as£π
((
n
 & (n - 1)) == 0);

346  (
sz
 + 
n
-1) & -n;

347 
	}
}

358 
CV_EXPORTS_W
 
£tU£O±imized
(
boﬁ
 
⁄off
);

365 
CV_EXPORTS_W
 
boﬁ
 
u£O±imized
();

370 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cAŒoˇt‹


372 
	gpublic
:

373 
_Tp
 
	tvÆue_ty≥
;

374 
vÆue_ty≥
* 
	tpoöãr
;

375 c⁄° 
	tvÆue_ty≥
* 
	tc⁄°_poöãr
;

376 
	gvÆue_ty≥
& 
	tª„ªn˚
;

377 c⁄° 
	tvÆue_ty≥
& 
	tc⁄°_ª„ªn˚
;

378 
size_t
 
	tsize_ty≥
;

379 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

380 
	gãm∂©e
<
ty≥«me
 
	gU
> cœs†
	cªböd
 { 
	gAŒoˇt‹
<
	tU
> 
	tŸhî
; };

382 
ex∂icô
 
AŒoˇt‹
() {}

383 ~
AŒoˇt‹
() {}

384 
ex∂icô
 
AŒoˇt‹
(Allocator const&) {}

385 
	gãm∂©e
<
ty≥«me
 
	gU
>

386 
ex∂icô
 
AŒoˇt‹
(AŒoˇt‹<
U
> const&) {}

389 
poöãr
 
addªss
(
ª„ªn˚
 
r
Ë{  &
	gr
; }

390 
c⁄°_poöãr
 
addªss
(
c⁄°_ª„ªn˚
 
r
Ë{  &
	gr
; }

392 
poöãr
 
Æloˇã
(
size_ty≥
 
cou¡
, const * =0)

393 {  
ªöãΩªt_ˇ°
<
poöãr
>(
Á°MÆloc
(
cou¡
 *  (
_Tp
))); }

395 
dóŒoˇã
(
poöãr
 
p
, 
size_ty≥
Ë{
Á°Fªe
(p); }

397 
size_ty≥
 
max_size
() const

398 {  
max
(
°©ic_ˇ°
<
_Tp
>(-1)/(_Tp), 1); }

400 
c⁄°ru˘
(
poöãr
 
p
, c⁄° 
_Tp
& 
v
Ë{ 
√w
(
°©ic_ˇ°
<*>(p)) _Tp(v); }

401 
de°roy
(
poöãr
 
p
Ë{ 
	gp
->~
_Tp
(); }

412 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cD©aDïth
 {};

414 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<
	gboﬁ
> { 
	gpublic
:Énum { 
vÆue
 = 
CV_8U
, 
	gfmt
=()'u' }; };

415 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<
	guch¨
> { 
	gpublic
:Énum { 
vÆue
 = 
CV_8U
, 
	gfmt
=()'u' }; };

416 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<
	gsch¨
> { 
	gpublic
:Énum { 
vÆue
 = 
CV_8S
, 
	gfmt
=()'c' }; };

417 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_8S
, 
	gfmt
=()'c' }; };

418 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<
	gush‹t
> { 
	gpublic
:Énum { 
vÆue
 = 
CV_16U
, 
	gfmt
=()'w' }; };

419 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_16S
, 
	gfmt
=()'s' }; };

420 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_32S
, 
	gfmt
=()'i' }; };

422 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_32S
, 
	gfmt
=()'i' }; };

423 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_32F
, 
	gfmt
=()'f' }; };

424 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_64F
, 
	gfmt
=()'d' }; };

425 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aDïth
<_Tp*> { 
	gpublic
:Énum { 
vÆue
 = 
CV_USRTYPE1
, 
	gfmt
=()'r' }; };

446 
CV_EXPORTS
 
	gM©x_AddOp
 {};

447 
CV_EXPORTS
 
	gM©x_SubOp
 {};

448 
CV_EXPORTS
 
	gM©x_SˇÀOp
 {};

449 
CV_EXPORTS
 
	gM©x_MulOp
 {};

450 
CV_EXPORTS
 
	gM©x_M©MulOp
 {};

451 
CV_EXPORTS
 
	gM©x_TOp
 {};

453 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> cœs†
	cM©x


455 
	gpublic
:

456 
_Tp
 
	tvÆue_ty≥
;

457 
	gM©x
<
	t_Tp
, (
	tm
 < 
	tn
 ? m :Ç), 1> 
	tdüg_ty≥
;

458 
	gM©x
<
	t_Tp
, 
	tm
, 
	tn
> 
	tm©_ty≥
;

459 íum { 
	gdïth
 = 
D©aDïth
<
_Tp
>::
vÆue
, 
	grows
 = 
m
, 
	gcﬁs
 = 
n
, 
	gch™√ls
 = 
rows
*
cﬁs
,

460 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

463 
M©x
();

465 
M©x
(
_Tp
 
v0
);

466 
M©x
(
_Tp
 
v0
, _T∞
v1
);

467 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
);

468 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
);

469 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
);

470 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
);

471 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
);

472 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
);

473 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
, _T∞
v8
);

474 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
, _T∞
v8
, _T∞
v9
);

475 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

476 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

477 
_Tp
 
v8
, _T∞
v9
, _T∞
v10
, _T∞
v11
);

478 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

479 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

480 
_Tp
 
v8
, _T∞
v9
, _T∞
v10
, _T∞
v11
,

481 
_Tp
 
v12
, _T∞
v13
, _T∞
v14
, _T∞
v15
);

482 
ex∂icô
 
M©x
(c⁄° 
_Tp
* 
vÆs
);

484 
M©x
 
Æl
(
_Tp
 
Æpha
);

485 
M©x
 
zîos
();

486 
M©x
 
⁄es
();

487 
M©x
 
eye
();

488 
M©x
 
düg
(c⁄° 
düg_ty≥
& 
d
);

489 
M©x
 
øndu
(
_Tp
 
a
, _T∞
b
);

490 
M©x
 
øndn
(
_Tp
 
a
, _T∞
b
);

493 
_Tp
 
dŸ
(c⁄° 
M©x
<_Tp, 
m
, 
n
>& 
v
) const;

496 
ddŸ
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
v
) const;

499 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
›î©‹
 
	gM©x
<T2, 
	gm
, 
	gn
>() const;

502 
	gãm∂©e
<
	gm1
, 
	gn1
> 
	gM©x
<
	g_Tp
, m1,Ç1> 
ªsh≠e
() const;

505 
	gãm∂©e
<
	gm1
, 
	gn1
> 
	gM©x
<
	g_Tp
, m1,Ç1> 
gë_mö‹
(
i
, 
j
) const;

508 
	gM©x
<
	g_Tp
, 1, 
	gn
> 
row
(
i
) const;

511 
	gM©x
<
	g_Tp
, 
	gm
, 1> 
cﬁ
(
i
) const;

514 
düg_ty≥
 
düg
() const;

517 
	gM©x
<
	g_Tp
, 
	gn
, 
	gm
> 
t
() const;

520 
	gM©x
<
	g_Tp
, 
	gn
, 
	gm
> 
öv
(
mëhod
=
DECOMP_LU
) const;

523 
	gãm∂©e
<
	gl
> 
	gM©x
<
	g_Tp
, 
	gn
,Ü> 
sﬁve
(c⁄° 
M©x
<
_Tp
, 
m
, 
l
>& 
rhs
, 
Êags
=
DECOMP_LU
) const;

524 
	gVec
<
	g_Tp
, 
	gn
> 
sﬁve
(c⁄° 
Vec
<
_Tp
, 
m
>& 
rhs
, 
mëhod
) const;

527 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
mul
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
) const;

530 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gi
, 
	gj
) const;

531 
	g_Tp
& 
›î©‹
 ()(
	gi
, 
	gj
);

534 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gi
) const;

535 
	g_Tp
& 
›î©‹
 ()(
	gi
);

537 
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_AddOp
);

538 
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_SubOp
);

539 
	gãm∂©e
<
ty≥«me
 
	g_T2
> 
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, 
_T2
 
Æpha
, 
M©x_SˇÀOp
);

540 
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_MulOp
);

541 
	gãm∂©e
<
	gl
> 
M©x
(c⁄° M©x<
_Tp
, 
m
, 
l
>& 
a
, c⁄° M©x<_Tp,Ü, 
n
>& 
b
, 
M©x_M©MulOp
);

542 
M©x
(c⁄° M©x<
_Tp
, 
n
, 
m
>& 
a
, 
M©x_TOp
);

544 
_Tp
 
	gvÆ
[
m
*
n
];

548 
	gM©x
<, 1, 2> 
	tM©x12f
;

549 
	gM©x
<, 1, 2> 
	tM©x12d
;

550 
	gM©x
<, 1, 3> 
	tM©x13f
;

551 
	gM©x
<, 1, 3> 
	tM©x13d
;

552 
	gM©x
<, 1, 4> 
	tM©x14f
;

553 
	gM©x
<, 1, 4> 
	tM©x14d
;

554 
	gM©x
<, 1, 6> 
	tM©x16f
;

555 
	gM©x
<, 1, 6> 
	tM©x16d
;

557 
	gM©x
<, 2, 1> 
	tM©x21f
;

558 
	gM©x
<, 2, 1> 
	tM©x21d
;

559 
	gM©x
<, 3, 1> 
	tM©x31f
;

560 
	gM©x
<, 3, 1> 
	tM©x31d
;

561 
	gM©x
<, 4, 1> 
	tM©x41f
;

562 
	gM©x
<, 4, 1> 
	tM©x41d
;

563 
	gM©x
<, 6, 1> 
	tM©x61f
;

564 
	gM©x
<, 6, 1> 
	tM©x61d
;

566 
	gM©x
<, 2, 2> 
	tM©x22f
;

567 
	gM©x
<, 2, 2> 
	tM©x22d
;

568 
	gM©x
<, 2, 3> 
	tM©x23f
;

569 
	gM©x
<, 2, 3> 
	tM©x23d
;

570 
	gM©x
<, 3, 2> 
	tM©x32f
;

571 
	gM©x
<, 3, 2> 
	tM©x32d
;

573 
	gM©x
<, 3, 3> 
	tM©x33f
;

574 
	gM©x
<, 3, 3> 
	tM©x33d
;

576 
	gM©x
<, 3, 4> 
	tM©x34f
;

577 
	gM©x
<, 3, 4> 
	tM©x34d
;

578 
	gM©x
<, 4, 3> 
	tM©x43f
;

579 
	gM©x
<, 4, 3> 
	tM©x43d
;

581 
	gM©x
<, 4, 4> 
	tM©x44f
;

582 
	gM©x
<, 4, 4> 
	tM©x44d
;

583 
	gM©x
<, 6, 6> 
	tM©x66f
;

584 
	gM©x
<, 6, 6> 
	tM©x66d
;

602 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
˛ass
 
	gVec
 : 
public
 
M©x
<
_Tp
, cn, 1>

604 
	gpublic
:

605 
_Tp
 
	tvÆue_ty≥
;

606 íum { 
	gdïth
 = 
D©aDïth
<
_Tp
>::
vÆue
, 
	gch™√ls
 = 
˙
, 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

609 
Vec
();

611 
Vec
(
_Tp
 
v0
);

612 
Vec
(
_Tp
 
v0
, _T∞
v1
);

613 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
);

614 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
);

615 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
);

616 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
);

617 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
);

618 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
);

619 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
, _T∞
v8
);

620 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
, _T∞
v8
, _T∞
v9
);

621 
ex∂icô
 
Vec
(c⁄° 
_Tp
* 
vÆues
);

623 
Vec
(c⁄° Vec<
_Tp
, 
˙
>& 
v
);

625 
Vec
 
Æl
(
_Tp
 
Æpha
);

628 
Vec
 
mul
(c⁄° Vec<
_Tp
, 
˙
>& 
v
) const;

631 
Vec
 
c⁄j
() const;

638 
Vec
 
¸oss
(c⁄° Vec& 
v
) const;

640 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
›î©‹
 
	gVec
<T2, 
	g˙
>() const;

642 
›î©‹
 
CvSˇœr
() const;

645 c⁄° 
	g_Tp
& 
	g›î©‹
 [](
	gi
) const;

646 
	g_Tp
& 
	g›î©‹
[](
	gi
);

647 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gi
) const;

648 
	g_Tp
& 
›î©‹
 ()(
	gi
);

650 
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, c⁄° M©x<_Tp, cn, 1>& 
b
, 
M©x_AddOp
);

651 
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, c⁄° M©x<_Tp, cn, 1>& 
b
, 
M©x_SubOp
);

652 
	gãm∂©e
<
ty≥«me
 
	g_T2
> 
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, 
_T2
 
Æpha
, 
M©x_SˇÀOp
);

660 
	gVec
<
	tuch¨
, 2> 
	tVec2b
;

661 
	gVec
<
	tuch¨
, 3> 
	tVec3b
;

662 
	gVec
<
	tuch¨
, 4> 
	tVec4b
;

664 
	gVec
<, 2> 
	tVec2s
;

665 
	gVec
<, 3> 
	tVec3s
;

666 
	gVec
<, 4> 
	tVec4s
;

668 
	gVec
<
	tush‹t
, 2> 
	tVec2w
;

669 
	gVec
<
	tush‹t
, 3> 
	tVec3w
;

670 
	gVec
<
	tush‹t
, 4> 
	tVec4w
;

672 
	gVec
<, 2> 
	tVec2i
;

673 
	gVec
<, 3> 
	tVec3i
;

674 
	gVec
<, 4> 
	tVec4i
;

675 
	gVec
<, 6> 
	tVec6i
;

676 
	gVec
<, 8> 
	tVec8i
;

678 
	gVec
<, 2> 
	tVec2f
;

679 
	gVec
<, 3> 
	tVec3f
;

680 
	gVec
<, 4> 
	tVec4f
;

681 
	gVec
<, 6> 
	tVec6f
;

683 
	gVec
<, 2> 
	tVec2d
;

684 
	gVec
<, 3> 
	tVec3d
;

685 
	gVec
<, 4> 
	tVec4d
;

686 
	gVec
<, 6> 
	tVec6d
;

698 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cCom∂ex


700 
	gpublic
:

703 
Com∂ex
();

704 
Com∂ex
–
_Tp
 
_ª
, _T∞
_im
=0 );

705 
Com∂ex
–c⁄° 
°d
::
com∂ex
<
_Tp
>& 
c
 );

708 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
›î©‹
 
	gCom∂ex
<T2>() const;

710 
Com∂ex
 
c⁄j
() const;

712 
›î©‹
 
	g°d
::
com∂ex
<
_Tp
>() const;

714 
_Tp
 
	gª
, 
	gim
;

721 
	gCom∂ex
<> 
	tCom∂exf
;

722 
	gCom∂ex
<> 
	tCom∂exd
;

734 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cPoöt_


736 
	gpublic
:

737 
_Tp
 
	tvÆue_ty≥
;

740 
Poöt_
();

741 
Poöt_
(
_Tp
 
_x
, _T∞
_y
);

742 
Poöt_
(c⁄° Poöt_& 
±
);

743 
Poöt_
(c⁄° 
CvPoöt
& 
±
);

744 
Poöt_
(c⁄° 
CvPoöt2D32f
& 
±
);

745 
Poöt_
(c⁄° 
Size_
<
_Tp
>& 
sz
);

746 
Poöt_
(c⁄° 
Vec
<
_Tp
, 2>& 
v
);

748 
	gPoöt_
& 
	g›î©‹
 = (c⁄° 
Poöt_
& 
±
);

750 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
›î©‹
 
	gPoöt_
<_Tp2>() const;

753 
›î©‹
 
CvPoöt
() const;

754 
›î©‹
 
CvPoöt2D32f
() const;

755 
›î©‹
 
	gVec
<
	g_Tp
, 2>() const;

758 
_Tp
 
dŸ
(c⁄° 
Poöt_
& 
±
) const;

760 
ddŸ
(c⁄° 
Poöt_
& 
±
) const;

762 
¸oss
(c⁄° 
Poöt_
& 
±
) const;

764 
boﬁ
 
öside
(c⁄° 
Re˘_
<
_Tp
>& 
r
) const;

766 
_Tp
 
	gx
, 
	gy
;

777 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cPoöt3_


779 
	gpublic
:

780 
_Tp
 
	tvÆue_ty≥
;

783 
Poöt3_
();

784 
Poöt3_
(
_Tp
 
_x
, _T∞
_y
, _T∞
_z
);

785 
Poöt3_
(c⁄° Poöt3_& 
±
);

786 
ex∂icô
 
Poöt3_
(c⁄° 
Poöt_
<
_Tp
>& 
±
);

787 
Poöt3_
(c⁄° 
CvPoöt3D32f
& 
±
);

788 
Poöt3_
(c⁄° 
Vec
<
_Tp
, 3>& 
v
);

790 
	gPoöt3_
& 
	g›î©‹
 = (c⁄° 
Poöt3_
& 
±
);

792 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
›î©‹
 
	gPoöt3_
<_Tp2>() const;

794 
›î©‹
 
CvPoöt3D32f
() const;

796 
›î©‹
 
	gVec
<
	g_Tp
, 3>() const;

799 
_Tp
 
dŸ
(c⁄° 
Poöt3_
& 
±
) const;

801 
ddŸ
(c⁄° 
Poöt3_
& 
±
) const;

803 
Poöt3_
 
¸oss
(c⁄° Poöt3_& 
±
) const;

805 
_Tp
 
	gx
, 
	gy
, 
	gz
;

816 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cSize_


818 
	gpublic
:

819 
_Tp
 
	tvÆue_ty≥
;

822 
Size_
();

823 
Size_
(
_Tp
 
_width
, _T∞
_height
);

824 
Size_
(c⁄° Size_& 
sz
);

825 
Size_
(c⁄° 
CvSize
& 
sz
);

826 
Size_
(c⁄° 
CvSize2D32f
& 
sz
);

827 
Size_
(c⁄° 
Poöt_
<
_Tp
>& 
±
);

829 
	gSize_
& 
	g›î©‹
 = (c⁄° 
Size_
& 
sz
);

831 
_Tp
 
¨ó
() const;

834 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
›î©‹
 
	gSize_
<_Tp2>() const;

837 
›î©‹
 
CvSize
() const;

838 
›î©‹
 
CvSize2D32f
() const;

840 
_Tp
 
	gwidth
, 
	gheight
;

851 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cRe˘_


853 
	gpublic
:

854 
_Tp
 
	tvÆue_ty≥
;

857 
Re˘_
();

858 
Re˘_
(
_Tp
 
_x
, _T∞
_y
, _T∞
_width
, _T∞
_height
);

859 
Re˘_
(c⁄° Re˘_& 
r
);

860 
Re˘_
(c⁄° 
CvRe˘
& 
r
);

861 
Re˘_
(c⁄° 
Poöt_
<
_Tp
>& 
‹g
, c⁄° 
Size_
<_Tp>& 
sz
);

862 
Re˘_
(c⁄° 
Poöt_
<
_Tp
>& 
±1
, c⁄° Poöt_<_Tp>& 
±2
);

864 
	gRe˘_
& 
	g›î©‹
 = ( c⁄° 
Re˘_
& 
r
 );

866 
	gPoöt_
<
	g_Tp
> 
é
() const;

868 
	gPoöt_
<
	g_Tp
> 
br
() const;

871 
	gSize_
<
	g_Tp
> 
size
() const;

873 
_Tp
 
¨ó
() const;

876 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
›î©‹
 
	gRe˘_
<_Tp2>() const;

878 
›î©‹
 
CvRe˘
() const;

881 
boﬁ
 
c⁄èös
(c⁄° 
Poöt_
<
_Tp
>& 
±
) const;

883 
_Tp
 
	gx
, 
	gy
, 
	gwidth
, 
	gheight
;

892 
	gPoöt_
<> 
	tPoöt2i
;

893 
Poöt2i
 
	tPoöt
;

894 
	gSize_
<> 
	tSize2i
;

895 
	gSize_
<> 
	tSize2d
;

896 
Size2i
 
	tSize
;

897 
	gRe˘_
<> 
	tRe˘
;

898 
	gPoöt_
<> 
	tPoöt2f
;

899 
	gPoöt_
<> 
	tPoöt2d
;

900 
	gSize_
<> 
	tSize2f
;

901 
	gPoöt3_
<> 
	tPoöt3i
;

902 
	gPoöt3_
<> 
	tPoöt3f
;

903 
	gPoöt3_
<> 
	tPoöt3d
;

913 ˛as†
	cCV_EXPORTS
 
	gRŸ©edRe˘


915 
	gpublic
:

917 
RŸ©edRe˘
();

918 
RŸ©edRe˘
(c⁄° 
Poöt2f
& 
˚¡î
, c⁄° 
Size2f
& 
size
, 
™gÀ
);

919 
RŸ©edRe˘
(c⁄° 
CvBox2D
& 
box
);

922 
poöts
(
Poöt2f
 
±s
[]) const;

924 
Re˘
 
boundögRe˘
() const;

926 
›î©‹
 
CvBox2D
() const;

928 
Poöt2f
 
	g˚¡î
;

929 
Size2f
 
	gsize
;

930 
	g™gÀ
;

941 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gSˇœr_
 : 
public
 
Vec
<
_Tp
, 4>

943 
	gpublic
:

945 
Sˇœr_
();

946 
Sˇœr_
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
=0, _T∞
v3
=0);

947 
Sˇœr_
(c⁄° 
CvSˇœr
& 
s
);

948 
Sˇœr_
(
_Tp
 
v0
);

951 
	gSˇœr_
<
	g_Tp
> 
Æl
(
_Tp
 
v0
);

953 
›î©‹
 
CvSˇœr
() const;

956 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
›î©‹
 
	gSˇœr_
<T2>() const;

959 
	gSˇœr_
<
	g_Tp
> 
mul
(c⁄° 
Sˇœr_
<
_Tp
>& 
t
, 
sˇÀ
=1 ) const;

962 
	gSˇœr_
<
	g_Tp
> 
c⁄j
() const;

965 
boﬁ
 
isRól
() const;

968 
	gSˇœr_
<> 
	tSˇœr
;

970 
CV_EXPORTS
 
sˇœrToRawD©a
(c⁄° 
Sˇœr
& 
s
, * 
buf
, 
ty≥
, 
uƒﬁl_to
=0);

979 ˛as†
	cCV_EXPORTS
 
	gR™ge


981 
	gpublic
:

982 
R™ge
();

983 
R™ge
(
_°¨t
, 
_íd
);

984 
R™ge
(c⁄° 
CvSli˚
& 
¶i˚
);

985 
size
() const;

986 
boﬁ
 
em±y
() const;

987 
R™ge
 
Æl
();

988 
›î©‹
 
CvSli˚
() const;

990 
	g°¨t
, 
	gíd
;

1006 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cD©aTy≥


1008 
	gpublic
:

1009 
_Tp
 
	tvÆue_ty≥
;

1010 
vÆue_ty≥
 
	tw‹k_ty≥
;

1011 
vÆue_ty≥
 
	tch™√l_ty≥
;

1012 
vÆue_ty≥
 
	tvec_ty≥
;

1013 íum { 
	ggíîic_ty≥
 = 1, 
	gdïth
 = -1, 
	gch™√ls
 = 1, 
	gfmt
=0,

1014 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1017 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<
	gboﬁ
>

1019 
	gpublic
:

1020 
boﬁ
 
	tvÆue_ty≥
;

1021 
	tw‹k_ty≥
;

1022 
vÆue_ty≥
 
	tch™√l_ty≥
;

1023 
vÆue_ty≥
 
	tvec_ty≥
;

1024 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1025 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1026 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1029 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<
	guch¨
>

1031 
	gpublic
:

1032 
uch¨
 
	tvÆue_ty≥
;

1033 
	tw‹k_ty≥
;

1034 
vÆue_ty≥
 
	tch™√l_ty≥
;

1035 
vÆue_ty≥
 
	tvec_ty≥
;

1036 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1037 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1038 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1041 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<
	gsch¨
>

1043 
	gpublic
:

1044 
sch¨
 
	tvÆue_ty≥
;

1045 
	tw‹k_ty≥
;

1046 
vÆue_ty≥
 
	tch™√l_ty≥
;

1047 
vÆue_ty≥
 
	tvec_ty≥
;

1048 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1049 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1050 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1053 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<>

1055 
	gpublic
:

1056 
sch¨
 
	tvÆue_ty≥
;

1057 
	tw‹k_ty≥
;

1058 
vÆue_ty≥
 
	tch™√l_ty≥
;

1059 
vÆue_ty≥
 
	tvec_ty≥
;

1060 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1061 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1062 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1065 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<
	gush‹t
>

1067 
	gpublic
:

1068 
ush‹t
 
	tvÆue_ty≥
;

1069 
	tw‹k_ty≥
;

1070 
vÆue_ty≥
 
	tch™√l_ty≥
;

1071 
vÆue_ty≥
 
	tvec_ty≥
;

1072 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1073 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1074 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1077 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<>

1079 
	gpublic
:

1080 
	tvÆue_ty≥
;

1081 
	tw‹k_ty≥
;

1082 
vÆue_ty≥
 
	tch™√l_ty≥
;

1083 
vÆue_ty≥
 
	tvec_ty≥
;

1084 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1085 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1086 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1089 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<>

1091 
	gpublic
:

1092 
	tvÆue_ty≥
;

1093 
vÆue_ty≥
 
	tw‹k_ty≥
;

1094 
vÆue_ty≥
 
	tch™√l_ty≥
;

1095 
vÆue_ty≥
 
	tvec_ty≥
;

1096 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1097 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1098 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1101 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<>

1103 
	gpublic
:

1104 
	tvÆue_ty≥
;

1105 
vÆue_ty≥
 
	tw‹k_ty≥
;

1106 
vÆue_ty≥
 
	tch™√l_ty≥
;

1107 
vÆue_ty≥
 
	tvec_ty≥
;

1108 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1109 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1110 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1113 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<>

1115 
	gpublic
:

1116 
	tvÆue_ty≥
;

1117 
vÆue_ty≥
 
	tw‹k_ty≥
;

1118 
vÆue_ty≥
 
	tch™√l_ty≥
;

1119 
vÆue_ty≥
 
	tvec_ty≥
;

1120 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1121 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1122 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1125 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
˛ass
 
	gD©aTy≥
<
	gM©x
<_Tp, m,Ç> >

1127 
	gpublic
:

1128 
M©x
<
	t_Tp
, 
	tm
, 
	tn
> 
	tvÆue_ty≥
;

1129 
	gM©x
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
, 
	tm
, 
	tn
> work_type;

1130 
_Tp
 
	tch™√l_ty≥
;

1131 
vÆue_ty≥
 
	tvec_ty≥
;

1132 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 
m
*
n
,

1133 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1134 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1137 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
˛ass
 
	gD©aTy≥
<
	gVec
<_Tp, cn> >

1139 
	gpublic
:

1140 
Vec
<
	t_Tp
, 
	t˙
> 
	tvÆue_ty≥
;

1141 
	gVec
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
, 
	t˙
> work_type;

1142 
_Tp
 
	tch™√l_ty≥
;

1143 
vÆue_ty≥
 
	tvec_ty≥
;

1144 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 
˙
,

1145 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1146 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1149 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	g°d
::
com∂ex
<
_Tp
> >

1151 
public
:

1152 
°d
::
	tcom∂ex
<
	t_Tp
> 
	tvÆue_ty≥
;

1153 
vÆue_ty≥
 
	tw‹k_ty≥
;

1154 
_Tp
 
	tch™√l_ty≥
;

1155 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 2,

1156 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1157 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1158 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1161 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gCom∂ex
<_Tp> >

1163 
	gpublic
:

1164 
Com∂ex
<
	t_Tp
> 
	tvÆue_ty≥
;

1165 
vÆue_ty≥
 
	tw‹k_ty≥
;

1166 
_Tp
 
	tch™√l_ty≥
;

1167 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 2,

1168 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1169 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1170 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1173 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gPoöt_
<_Tp> >

1175 
	gpublic
:

1176 
Poöt_
<
	t_Tp
> 
	tvÆue_ty≥
;

1177 
	gPoöt_
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
> work_type;

1178 
_Tp
 
	tch™√l_ty≥
;

1179 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 2,

1180 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1181 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1182 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1185 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gPoöt3_
<_Tp> >

1187 
	gpublic
:

1188 
Poöt3_
<
	t_Tp
> 
	tvÆue_ty≥
;

1189 
	gPoöt3_
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
> work_type;

1190 
_Tp
 
	tch™√l_ty≥
;

1191 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 3,

1192 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1193 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1194 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1197 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gSize_
<_Tp> >

1199 
	gpublic
:

1200 
Size_
<
	t_Tp
> 
	tvÆue_ty≥
;

1201 
	gSize_
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
> work_type;

1202 
_Tp
 
	tch™√l_ty≥
;

1203 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 2,

1204 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1205 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1206 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1209 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gRe˘_
<_Tp> >

1211 
	gpublic
:

1212 
Re˘_
<
	t_Tp
> 
	tvÆue_ty≥
;

1213 
	gRe˘_
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
> work_type;

1214 
_Tp
 
	tch™√l_ty≥
;

1215 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 4,

1216 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1217 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1218 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1221 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gSˇœr_
<_Tp> >

1223 
	gpublic
:

1224 
Sˇœr_
<
	t_Tp
> 
	tvÆue_ty≥
;

1225 
	gSˇœr_
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
> work_type;

1226 
_Tp
 
	tch™√l_ty≥
;

1227 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 4,

1228 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1229 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1230 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1233 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<
	gR™ge
>

1235 
	gpublic
:

1236 
R™ge
 
	tvÆue_ty≥
;

1237 
vÆue_ty≥
 
	tw‹k_ty≥
;

1238 
	tch™√l_ty≥
;

1239 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 2,

1240 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1241 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1242 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1268 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cPå


1270 
	gpublic
:

1272 
På
();

1274 
På
(
_Tp
* 
_obj
);

1276 ~
På
();

1278 
På
(c⁄° På& 
±r
);

1279 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
På
(c⁄° På<
_Tp2
>& 
±r
);

1281 
	gPå
& 
	g›î©‹
 = (c⁄° 
På
& 
±r
);

1283 
addªf
();

1285 
ªÀa£
();

1287 
dñëe_obj
();

1289 
boﬁ
 
em±y
() const;

1292 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
	gPå
<_Tp2> 
±r
();

1293 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> c⁄° 
	gPå
<_Tp2> 
±r
() const;

1296 
_Tp
* 
	g›î©‹
 -> ();

1297 c⁄° 
_Tp
* 
	g›î©‹
 -> () const;

1299 
›î©‹
 
	g_Tp
* ();

1300 
›î©‹
 c⁄° 
	g_Tp
*() const;

1302 
_Tp
* 
	gobj
;

1303 
_Atomic_w‹d
* 
	gªfcou¡
;

1312 ˛as†
	cCV_EXPORTS
 
	g_I≈utAºay


1314 
	gpublic
:

1316 
KIND_SHIFT
 = 16,

1317 
	gFIXED_TYPE
 = 0x8000 << 
KIND_SHIFT
,

1318 
	gFIXED_SIZE
 = 0x4000 << 
KIND_SHIFT
,

1319 
	gKIND_MASK
 = ~(
FIXED_TYPE
|
FIXED_SIZE
Ë- (1 << 
KIND_SHIFT
) + 1,

1321 
	gNONE
 = 0 << 
KIND_SHIFT
,

1322 
	gMAT
 = 1 << 
KIND_SHIFT
,

1323 
	gMATX
 = 2 << 
KIND_SHIFT
,

1324 
	gSTD_VECTOR
 = 3 << 
KIND_SHIFT
,

1325 
	gSTD_VECTOR_VECTOR
 = 4 << 
KIND_SHIFT
,

1326 
	gSTD_VECTOR_MAT
 = 5 << 
KIND_SHIFT
,

1327 
	gEXPR
 = 6 << 
KIND_SHIFT
,

1328 
	gOPENGL_BUFFER
 = 7 << 
KIND_SHIFT
,

1329 
	gOPENGL_TEXTURE
 = 8 << 
KIND_SHIFT
,

1330 
	gGPU_MAT
 = 9 << 
KIND_SHIFT
,

1331 
	gOCL_MAT
 =10 << 
KIND_SHIFT


1333 
_I≈utAºay
();

1335 
_I≈utAºay
(c⁄° 
M©
& 
m
);

1336 
_I≈utAºay
(c⁄° 
M©Ex¥
& 
ex¥
);

1337 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_I≈utAºay
(c⁄° 
_Tp
* 
vec
, 
n
);

1338 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_I≈utAºay
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
);

1339 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_I≈utAºay
(c⁄° 
ve˘‹
<ve˘‹<
_Tp
> >& 
vec
);

1340 
_I≈utAºay
(c⁄° 
ve˘‹
<
M©
>& 
vec
);

1341 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_I≈utAºay
(c⁄° 
ve˘‹
<
M©_
<
_Tp
> >& 
vec
);

1342 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_I≈utAºay
(c⁄° 
M©_
<
_Tp
>& 
m
);

1343 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
_I≈utAºay
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
m©x
);

1344 
_I≈utAºay
(c⁄° 
Sˇœr
& 
s
);

1345 
_I≈utAºay
(c⁄° & 
vÆ
);

1347 
_I≈utAºay
(c⁄° 
GlBuf„r
& 
buf
);

1348 
_I≈utAºay
(c⁄° 
GlTextuª
& 
ãx
);

1350 
_I≈utAºay
(c⁄° 
gpu
::
GpuM©
& 
d_m©
);

1351 
_I≈utAºay
(c⁄° 
ogl
::
Buf„r
& 
buf
);

1352 
_I≈utAºay
(c⁄° 
ogl
::
Textuª2D
& 
ãx
);

1354 
vútuÆ
 
M©
 
gëM©
(
i
=-1) const;

1355 
vútuÆ
 
gëM©Ve˘‹
(
ve˘‹
<
M©
>& 
mv
) const;

1357 
vútuÆ
 
GlBuf„r
 
gëGlBuf„r
() const;

1358 
vútuÆ
 
GlTextuª
 
gëGlTextuª
() const;

1360 
vútuÆ
 
	ggpu
::
GpuM©
 
gëGpuM©
() const;

1361  
	gogl
::
Buf„r
 
gëOGlBuf„r
() const;

1362  
	gogl
::
Textuª2D
 
gëOGlTextuª2D
() const;

1364 
vútuÆ
 
köd
() const;

1365 
vútuÆ
 
Size
 
size
(
i
=-1) const;

1366 
vútuÆ
 
size_t
 
tŸÆ
(
i
=-1) const;

1367 
vútuÆ
 
ty≥
(
i
=-1) const;

1368 
vútuÆ
 
dïth
(
i
=-1) const;

1369 
vútuÆ
 
ch™√ls
(
i
=-1) const;

1370 
vútuÆ
 
boﬁ
 
em±y
() const;

1372 #ifde‡
OPENCV_CAN_BREAK_BINARY_COMPATIBILITY


1373 
	gvútuÆ
 ~
_I≈utAºay
();

1376 
	gÊags
;

1377 * 
	gobj
;

1378 
Size
 
	gsz
;

1384 
	gDEPTH_MASK_8U
 = 1 << 
CV_8U
,

1385 
	gDEPTH_MASK_8S
 = 1 << 
CV_8S
,

1386 
	gDEPTH_MASK_16U
 = 1 << 
CV_16U
,

1387 
	gDEPTH_MASK_16S
 = 1 << 
CV_16S
,

1388 
	gDEPTH_MASK_32S
 = 1 << 
CV_32S
,

1389 
	gDEPTH_MASK_32F
 = 1 << 
CV_32F
,

1390 
	gDEPTH_MASK_64F
 = 1 << 
CV_64F
,

1391 
	gDEPTH_MASK_ALL
 = (
DEPTH_MASK_64F
<<1)-1,

1392 
	gDEPTH_MASK_ALL_BUT_8S
 = 
DEPTH_MASK_ALL
 & ~
DEPTH_MASK_8S
,

1393 
	gDEPTH_MASK_FLT
 = 
DEPTH_MASK_32F
 + 
DEPTH_MASK_64F


1400 ˛as†
	cCV_EXPORTS
 
	g_OuçutAºay
 : 
public
 
_I≈utAºay


1402 
public
:

1403 
_OuçutAºay
();

1405 
_OuçutAºay
(
M©
& 
m
);

1406 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(
ve˘‹
<
_Tp
>& 
vec
);

1407 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(
ve˘‹
<ve˘‹<
_Tp
> >& 
vec
);

1408 
_OuçutAºay
(
ve˘‹
<
M©
>& 
vec
);

1409 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(
ve˘‹
<
M©_
<
_Tp
> >& 
vec
);

1410 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(
M©_
<
_Tp
>& 
m
);

1411 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
_OuçutAºay
(
M©x
<
_Tp
, 
m
, 
n
>& 
m©x
);

1412 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(
_Tp
* 
vec
, 
n
);

1413 
_OuçutAºay
(
gpu
::
GpuM©
& 
d_m©
);

1414 
_OuçutAºay
(
ogl
::
Buf„r
& 
buf
);

1415 
_OuçutAºay
(
ogl
::
Textuª2D
& 
ãx
);

1417 
_OuçutAºay
(c⁄° 
M©
& 
m
);

1418 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
);

1419 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(c⁄° 
ve˘‹
<ve˘‹<
_Tp
> >& 
vec
);

1420 
_OuçutAºay
(c⁄° 
ve˘‹
<
M©
>& 
vec
);

1421 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(c⁄° 
ve˘‹
<
M©_
<
_Tp
> >& 
vec
);

1422 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(c⁄° 
M©_
<
_Tp
>& 
m
);

1423 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
_OuçutAºay
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
m©x
);

1424 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(c⁄° 
_Tp
* 
vec
, 
n
);

1425 
_OuçutAºay
(c⁄° 
gpu
::
GpuM©
& 
d_m©
);

1426 
_OuçutAºay
(c⁄° 
ogl
::
Buf„r
& 
buf
);

1427 
_OuçutAºay
(c⁄° 
ogl
::
Textuª2D
& 
ãx
);

1429 
vútuÆ
 
boﬁ
 
fixedSize
() const;

1430 
vútuÆ
 
boﬁ
 
fixedTy≥
() const;

1431 
vútuÆ
 
boﬁ
 
√eded
() const;

1432 
vútuÆ
 
	gM©
& 
gëM©Ref
(
i
=-1) const;

1433  
	ggpu
::
GpuM©
& 
gëGpuM©Ref
() const;

1434  
	gogl
::
Buf„r
& 
gëOGlBuf„rRef
() const;

1435  
	gogl
::
Textuª2D
& 
gëOGlTextuª2DRef
() const;

1436 
vútuÆ
 
¸óã
(
Size
 
sz
, 
ty≥
, 
i
=-1, 
boﬁ
 
ÆlowTøn•o£d
=
Ál£
, 
fixedDïthMask
=0) const;

1437 
vútuÆ
 
¸óã
(
rows
, 
cﬁs
, 
ty≥
, 
i
=-1, 
boﬁ
 
ÆlowTøn•o£d
=
Ál£
, 
fixedDïthMask
=0) const;

1438 
vútuÆ
 
¸óã
(
dims
, c⁄° * 
size
, 
ty≥
, 
i
=-1, 
boﬁ
 
ÆlowTøn•o£d
=
Ál£
, 
fixedDïthMask
=0) const;

1439 
vútuÆ
 
ªÀa£
() const;

1440 
vútuÆ
 
˛ór
() const;

1442 #ifde‡
OPENCV_CAN_BREAK_BINARY_COMPATIBILITY


1443 
	gvútuÆ
 ~
_OuçutAºay
();

1447 c⁄° 
	t_I≈utAºay
& 
	tI≈utAºay
;

1448 
I≈utAºay
 
	tI≈utAºayOfAºays
;

1449 c⁄° 
	t_OuçutAºay
& 
	tOuçutAºay
;

1450 
OuçutAºay
 
	tOuçutAºayOfAºays
;

1451 
OuçutAºay
 
	tI≈utOuçutAºay
;

1452 
OuçutAºay
 
	tI≈utOuçutAºayOfAºays
;

1454 
CV_EXPORTS
 
OuçutAºay
 
noAºay
();

1458 íum { 
	gMAGIC_MASK
=0xFFFF0000, 
	gTYPE_MASK
=0x00000FFF, 
	gDEPTH_MASK
=7 };

1460 
ölöe
 
size_t
 
	$gëEÀmSize
(
ty≥
Ë{  
	`CV_ELEM_SIZE
—y≥); 
	}
}

1466 ˛as†
	cCV_EXPORTS
 
	gM©AŒoˇt‹


1468 
	gpublic
:

1469 
M©AŒoˇt‹
() {}

1470 
vútuÆ
 ~
M©AŒoˇt‹
() {}

1471 
vútuÆ
 
Æloˇã
(
dims
, c⁄° * 
sizes
, 
ty≥
, 
_Atomic_w‹d
*& 
ªfcou¡
,

1472 
uch¨
*& 
d©a°¨t
, uch¨*& 
d©a
, 
size_t
* 
°ï
) = 0;

1473 
vútuÆ
 
dóŒoˇã
(
_Atomic_w‹d
* 
ªfcou¡
, 
uch¨
* 
d©a°¨t
, uch¨* 
d©a
) = 0;

1688 ˛as†
	cCV_EXPORTS
 
	gM©


1690 
	gpublic
:

1692 
M©
();

1695 
M©
(
rows
, 
cﬁs
, 
ty≥
);

1696 
M©
(
Size
 
size
, 
ty≥
);

1698 
M©
(
rows
, 
cﬁs
, 
ty≥
, c⁄° 
Sˇœr
& 
s
);

1699 
M©
(
Size
 
size
, 
ty≥
, c⁄° 
Sˇœr
& 
s
);

1702 
M©
(
ndims
, c⁄° * 
sizes
, 
ty≥
);

1703 
M©
(
ndims
, c⁄° * 
sizes
, 
ty≥
, c⁄° 
Sˇœr
& 
s
);

1706 
M©
(c⁄° M©& 
m
);

1708 
M©
(
rows
, 
cﬁs
, 
ty≥
, * 
d©a
, 
size_t
 
°ï
=
AUTO_STEP
);

1709 
M©
(
Size
 
size
, 
ty≥
, * 
d©a
, 
size_t
 
°ï
=
AUTO_STEP
);

1710 
M©
(
ndims
, c⁄° * 
sizes
, 
ty≥
, * 
d©a
, c⁄° 
size_t
* 
°ïs
=0);

1713 
M©
(c⁄° M©& 
m
, c⁄° 
R™ge
& 
rowR™ge
, c⁄° R™ge& 
cﬁR™ge
=R™ge::
Æl
());

1714 
M©
(c⁄° M©& 
m
, c⁄° 
Re˘
& 
roi
);

1715 
M©
(c⁄° M©& 
m
, c⁄° 
R™ge
* 
ønges
);

1717 
M©
(c⁄° 
CvM©
* 
m
, 
boﬁ
 
c›yD©a
=
Ál£
);

1719 
M©
(c⁄° 
CvM©ND
* 
m
, 
boﬁ
 
c›yD©a
=
Ál£
);

1721 
M©
(c⁄° 
I∂Image
* 
img
, 
boﬁ
 
c›yD©a
=
Ál£
);

1723 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ex∂icô
 
M©
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
, 
boﬁ
 
c›yD©a
=
Ál£
);

1725 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
ex∂icô
 
M©
(c⁄° 
Vec
<
_Tp
, 
n
>& 
vec
, 
boﬁ
 
c›yD©a
=
åue
);

1727 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ex∂icô
 
M©
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
mtx
, 
boﬁ
 
c›yD©a
=
åue
);

1729 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ex∂icô
 
M©
(c⁄° 
Poöt_
<
_Tp
>& 
±
, 
boﬁ
 
c›yD©a
=
åue
);

1731 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ex∂icô
 
M©
(c⁄° 
Poöt3_
<
_Tp
>& 
±
, 
boﬁ
 
c›yD©a
=
åue
);

1733 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ex∂icô
 
M©
(c⁄° 
M©CommaInôülizî_
<
_Tp
>& 
commaInôülizî
);

1736 
ex∂icô
 
M©
(c⁄° 
gpu
::
GpuM©
& 
m
);

1739 ~
M©
();

1741 
	gM©
& 
	g›î©‹
 = (c⁄° 
M©
& 
m
);

1742 
	gM©
& 
	g›î©‹
 = (c⁄° 
M©Ex¥
& 
ex¥
);

1745 
M©
 
row
(
y
) const;

1747 
M©
 
cﬁ
(
x
) const;

1749 
M©
 
rowR™ge
(
°¨åow
, 
ídrow
) const;

1750 
M©
 
rowR™ge
(c⁄° 
R™ge
& 
r
) const;

1752 
M©
 
cﬁR™ge
(
°¨tcﬁ
, 
ídcﬁ
) const;

1753 
M©
 
cﬁR™ge
(c⁄° 
R™ge
& 
r
) const;

1758 
M©
 
düg
(
d
=0) const;

1760 
M©
 
düg
(c⁄° M©& 
d
);

1763 
M©
 
˛⁄e
() const;

1766 
c›yTo
–
OuçutAºay
 
m
 ) const;

1768 
c›yTo
–
OuçutAºay
 
m
, 
I≈utAºay
 
mask
 ) const;

1770 
c⁄vîtTo
–
OuçutAºay
 
m
, 
πy≥
, 
Æpha
=1, 
bëa
=0 ) const;

1772 
assignTo
–
M©
& 
m
, 
ty≥
=-1 ) const;

1775 
	gM©
& 
	g›î©‹
 = (c⁄° 
Sˇœr
& 
s
);

1777 
	gM©
& 
£tTo
(
I≈utAºay
 
vÆue
, I≈utAºay 
mask
=
noAºay
());

1780 
M©
 
ªsh≠e
(
˙
, 
rows
=0) const;

1781 
M©
 
ªsh≠e
(
˙
, 
√wndims
, c⁄° * 
√wsz
) const;

1784 
M©Ex¥
 
t
() const;

1786 
M©Ex¥
 
öv
(
mëhod
=
DECOMP_LU
) const;

1788 
M©Ex¥
 
mul
(
I≈utAºay
 
m
, 
sˇÀ
=1) const;

1791 
M©
 
¸oss
(
I≈utAºay
 
m
) const;

1793 
dŸ
(
I≈utAºay
 
m
) const;

1796 
M©Ex¥
 
zîos
(
rows
, 
cﬁs
, 
ty≥
);

1797 
M©Ex¥
 
zîos
(
Size
 
size
, 
ty≥
);

1798 
M©Ex¥
 
zîos
(
ndims
, c⁄° * 
sz
, 
ty≥
);

1799 
M©Ex¥
 
⁄es
(
rows
, 
cﬁs
, 
ty≥
);

1800 
M©Ex¥
 
⁄es
(
Size
 
size
, 
ty≥
);

1801 
M©Ex¥
 
⁄es
(
ndims
, c⁄° * 
sz
, 
ty≥
);

1802 
M©Ex¥
 
eye
(
rows
, 
cﬁs
, 
ty≥
);

1803 
M©Ex¥
 
eye
(
Size
 
size
, 
ty≥
);

1807 
¸óã
(
rows
, 
cﬁs
, 
ty≥
);

1808 
¸óã
(
Size
 
size
, 
ty≥
);

1809 
¸óã
(
ndims
, c⁄° * 
sizes
, 
ty≥
);

1812 
addªf
();

1815 
ªÀa£
();

1818 
dóŒoˇã
();

1820 
c›ySize
(c⁄° 
M©
& 
m
);

1823 
ª£rve
(
size_t
 
sz
);

1825 
ªsize
(
size_t
 
sz
);

1827 
ªsize
(
size_t
 
sz
, c⁄° 
Sˇœr
& 
s
);

1829 
push_back_
(c⁄° * 
ñem
);

1831 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
push_back
(c⁄° 
_Tp
& 
ñem
);

1832 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
push_back
(c⁄° 
M©_
<
_Tp
>& 
ñem
);

1833 
push_back
(c⁄° 
M©
& 
m
);

1835 
p›_back
(
size_t
 
√Àms
=1);

1838 
loˇãROI
–
Size
& 
whﬁeSize
, 
Poöt
& 
ofs
 ) const;

1840 
	gM©
& 
adju°ROI
–
dt›
, 
dbŸtom
, 
dÀ·
, 
dright
 );

1843 
M©
 
›î©‹
()–
R™ge
 
	growR™ge
, R™gê
	gcﬁR™ge
 ) const;

1844 
M©
 
›î©‹
()–c⁄° 
	gRe˘
& 
	groi
 ) const;

1845 
M©
 
›î©‹
()–c⁄° 
R™ge
* 
	gønges
 ) const;

1848 
›î©‹
 
CvM©
() const;

1850 
›î©‹
 
CvM©ND
() const;

1852 
›î©‹
 
I∂Image
() const;

1854 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
›î©‹
 
	gve˘‹
<_Tp>() const;

1855 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
›î©‹
 
	gVec
<_Tp,Ç>() const;

1856 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
›î©‹
 
	gM©x
<_Tp, m,Ç>() const;

1861 
boﬁ
 
isC⁄töuous
() const;

1864 
boﬁ
 
isSubm©rix
() const;

1868 
size_t
 
ñemSize
() const;

1870 
size_t
 
ñemSize1
() const;

1872 
ty≥
() const;

1874 
dïth
() const;

1876 
ch™√ls
() const;

1878 
size_t
 
°ï1
(
i
=0) const;

1880 
boﬁ
 
em±y
() const;

1882 
size_t
 
tŸÆ
() const;

1885 
checkVe˘‹
(
ñemCh™√ls
, 
dïth
=-1, 
boﬁ
 
ªquúeC⁄töuous
=
åue
) const;

1888 
uch¨
* 
±r
(
i0
=0);

1889 c⁄° 
uch¨
* 
±r
(
i0
=0) const;

1892 
uch¨
* 
±r
(
i0
, 
i1
);

1893 c⁄° 
uch¨
* 
±r
(
i0
, 
i1
) const;

1896 
uch¨
* 
±r
(
i0
, 
i1
, 
i2
);

1897 c⁄° 
uch¨
* 
±r
(
i0
, 
i1
, 
i2
) const;

1900 
uch¨
* 
±r
(c⁄° * 
idx
);

1902 c⁄° 
uch¨
* 
±r
(c⁄° * 
idx
) const;

1904 
	gãm∂©e
<
	gn
> 
uch¨
* 
±r
(c⁄° 
Vec
<, 
n
>& 
idx
);

1905 
	gãm∂©e
<
	gn
> c⁄° 
uch¨
* 
±r
(c⁄° 
Vec
<, 
n
>& 
idx
) const;

1908 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_Tp
* 
±r
(
i0
=0);

1909 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° 
_Tp
* 
±r
(
i0
=0) const;

1911 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_Tp
* 
±r
(
i0
, 
i1
);

1912 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° 
_Tp
* 
±r
(
i0
, 
i1
) const;

1914 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_Tp
* 
±r
(
i0
, 
i1
, 
i2
);

1915 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° 
_Tp
* 
±r
(
i0
, 
i1
, 
i2
) const;

1917 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_Tp
* 
±r
(c⁄° * 
idx
);

1918 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° 
_Tp
* 
±r
(c⁄° * 
idx
) const;

1920 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
_Tp
* 
±r
(c⁄° 
Vec
<, 
n
>& 
idx
);

1921 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> c⁄° 
_Tp
* 
±r
(c⁄° 
Vec
<, 
n
>& 
idx
) const;

1924 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
©
(
i0
=0);

1925 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
©
(
i0
=0) const;

1927 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
©
(
i0
, 
i1
);

1928 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
©
(
i0
, 
i1
) const;

1930 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
©
(
i0
, 
i1
, 
i2
);

1931 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
©
(
i0
, 
i1
, 
i2
) const;

1933 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
©
(c⁄° * 
idx
);

1934 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
©
(c⁄° * 
idx
) const;

1936 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> _Tp& 
©
(c⁄° 
Vec
<, 
n
>& 
idx
);

1937 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> c⁄° _Tp& 
©
(c⁄° 
Vec
<, 
n
>& 
idx
) const;

1940 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
©
(
Poöt
 
±
);

1941 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
©
(
Poöt
 
±
) const;

1945 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©Iãøt‹_
<_Tp> 
begö
();

1946 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©Iãøt‹_
<_Tp> 
íd
();

1947 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©C⁄°Iãøt‹_
<_Tp> 
begö
() const;

1948 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©C⁄°Iãøt‹_
<_Tp> 
íd
() const;

1950 íum { 
	gMAGIC_VAL
=0x42FF0000, 
	gAUTO_STEP
=0, 
	gCONTINUOUS_FLAG
=
CV_MAT_CONT_FLAG
, 
	gSUBMATRIX_FLAG
=
CV_SUBMAT_FLAG
 };

1958 
	gÊags
;

1960 
	gdims
;

1962 
	grows
, 
	gcﬁs
;

1964 
uch¨
* 
	gd©a
;

1968 
_Atomic_w‹d
* 
	gªfcou¡
;

1971 
uch¨
* 
	gd©a°¨t
;

1972 
uch¨
* 
	gd©´nd
;

1973 
uch¨
* 
	gd©Æimô
;

1976 
M©AŒoˇt‹
* 
	gÆloˇt‹
;

1978 
CV_EXPORTS
 
	gMSize


1980 
MSize
(* 
_p
);

1981 
Size
 
›î©‹
()() const;

1982 c⁄° & 
	g›î©‹
[](
	gi
) const;

1983 & 
	g›î©‹
[](
	gi
);

1984 
›î©‹
 const *() const;

1985 
boﬁ
 
	g›î©‹
 =(c⁄° 
MSize
& 
sz
) const;

1986 
boﬁ
 
	g›î©‹
 !(c⁄° 
MSize
& 
sz
) const;

1988 * 
	gp
;

1991 
CV_EXPORTS
 
	gMSãp


1993 
MSãp
();

1994 
MSãp
(
size_t
 
s
);

1995 c⁄° 
	gsize_t
& 
	g›î©‹
[](
	gi
) const;

1996 
	gsize_t
& 
	g›î©‹
[](
	gi
);

1997 
›î©‹
 
size_t
() const;

1998 
	gMSãp
& 
	g›î©‹
 = (
size_t
 
s
);

2000 
size_t
* 
	gp
;

2001 
size_t
 
	gbuf
[2];

2002 
	g¥Ÿe˘ed
:

2003 
MSãp
& 
›î©‹
 = (const MStep&);

2006 
MSize
 
	gsize
;

2007 
MSãp
 
	g°ï
;

2009 
	g¥Ÿe˘ed
:

2010 
öôEm±y
();

2019 ˛as†
	cCV_EXPORTS
 
	gRNG


2021 
	gpublic
:

2022 íum { 
UNIFORM
=0, 
	gNORMAL
=1 };

2024 
RNG
();

2025 
RNG
(
uöt64
 
°©e
);

2027 
√xt
();

2029 
›î©‹
 
uch¨
();

2030 
›î©‹
 
sch¨
();

2031 
›î©‹
 
ush‹t
();

2032 
›î©‹
 ();

2033 
›î©‹
 ();

2035 
›î©‹
 ()(
	gN
);

2036 
›î©‹
 ()();

2037 
›î©‹
 ();

2038 
›î©‹
 ();

2039 
›î©‹
 ();

2041 
unif‹m
(
a
, 
b
);

2043 
unif‹m
(
a
, 
b
);

2045 
unif‹m
(
a
, 
b
);

2046 
fûl
–
I≈utOuçutAºay
 
m©
, 
di°Ty≥
, 
I≈utAºay
 
a
, I≈utAºay 
b
, 
boﬁ
 
ßtuøãR™ge
=
Ál£
 );

2048 
gaussün
(
sigma
);

2050 
uöt64
 
	g°©e
;

2058 ˛as†
	cCV_EXPORTS
 
	gRNG_MT19937


2060 
	gpublic
:

2061 
RNG_MT19937
();

2062 
RNG_MT19937
(
s
);

2063 
£ed
(
s
);

2065 
√xt
();

2067 
›î©‹
 ();

2068 
›î©‹
 ();

2069 
›î©‹
 ();

2070 
›î©‹
 ();

2072 
›î©‹
 ()(
	gN
);

2073 
›î©‹
 ()();

2076 
unif‹m
(
a
, 
b
);

2078 
unif‹m
(
a
, 
b
);

2080 
unif‹m
(
a
, 
b
);

2082 
	g¥iv©e
:

2083 
	ePîiodP¨amëîs
 {
N
 = 624, 
	gM
 = 397};

2084 
	g°©e
[
N
];

2085 
	gmti
;

2091 ˛as†
	cCV_EXPORTS
 
	gTîmCrôîü


2093 
	gpublic
:

2096 
COUNT
=1,

2097 
	gMAX_ITER
=
COUNT
,

2098 
	gEPS
=2

2102 
TîmCrôîü
();

2104 
TîmCrôîü
(
ty≥
, 
maxCou¡
, 
ïsû⁄
);

2106 
TîmCrôîü
(c⁄° 
CvTîmCrôîü
& 
¸ôîü
);

2108 
›î©‹
 
CvTîmCrôîü
() const;

2110 
	gty≥
;

2111 
	gmaxCou¡
;

2112 
	gïsû⁄
;

2116 (*
	tBö¨yFunc
)(c⁄° 
	tuch¨
* 
	t§c1
, 
	tsize_t
 
	t°ï1
,

2117 c⁄° 
	tuch¨
* 
	t§c2
, 
	tsize_t
 
	t°ï2
,

2118 
	tuch¨
* 
	td°
, 
	tsize_t
 
	t°ï
, 
	tSize
 
	tsz
,

2121 
CV_EXPORTS
 
Bö¨yFunc
 
	`gëC⁄vîtFunc
(
sdïth
, 
ddïth
);

2122 
CV_EXPORTS
 
Bö¨yFunc
 
	`gëC⁄vîtSˇÀFunc
(
sdïth
, 
ddïth
);

2123 
CV_EXPORTS
 
Bö¨yFunc
 
	`gëC›yMaskFunc
(
size_t
 
esz
);

2126 
CV_EXPORTS
 
	`sw≠
(
M©
& 
a
, M©& 
b
);

2129 
CV_EXPORTS
 
M©
 
	`cv¨rToM©
(c⁄° 
CvAº
* 
¨r
, 
boﬁ
 
c›yD©a
=
Ál£
,

2130 
boﬁ
 
ÆlowND
=
åue
, 
coiMode
=0);

2132 
CV_EXPORTS
 
	`exåa˘ImageCOI
(c⁄° 
CvAº
* 
¨r
, 
OuçutAºay
 
coiimg
, 
coi
=-1);

2134 
CV_EXPORTS
 
	`ö£πImageCOI
(
I≈utAºay
 
coiimg
, 
CvAº
* 
¨r
, 
coi
=-1);

2137 
CV_EXPORTS_W
 
	`add
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
,

2138 
I≈utAºay
 
mask
=
	`noAºay
(), 
dty≥
=-1);

2140 
CV_EXPORTS_W
 
	`subåa˘
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
,

2141 
I≈utAºay
 
mask
=
	`noAºay
(), 
dty≥
=-1);

2144 
CV_EXPORTS_W
 
	`mu…ùly
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2145 
OuçutAºay
 
d°
, 
sˇÀ
=1, 
dty≥
=-1);

2148 
CV_EXPORTS_W
 
	`divide
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
,

2149 
sˇÀ
=1, 
dty≥
=-1);

2152 
CV_EXPORTS_W
 
	`divide
(
sˇÀ
, 
I≈utAºay
 
§c2
,

2153 
OuçutAºay
 
d°
, 
dty≥
=-1);

2156 
CV_EXPORTS_W
 
	`sˇÀAdd
(
I≈utAºay
 
§c1
, 
Æpha
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2159 
CV_EXPORTS_W
 
	`addWeighãd
(
I≈utAºay
 
§c1
, 
Æpha
, I≈utAºay 
§c2
,

2160 
bëa
, 
gamma
, 
OuçutAºay
 
d°
, 
dty≥
=-1);

2163 
CV_EXPORTS_W
 
	`c⁄vîtSˇÀAbs
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

2164 
Æpha
=1, 
bëa
=0);

2166 
CV_EXPORTS_W
 
	`LUT
(
I≈utAºay
 
§c
, I≈utAºay 
lut
, 
OuçutAºay
 
d°
,

2167 
öãΩﬁ©i⁄
=0);

2170 
	$CV_EXPORTS_AS
(
sumEÀms
Ë
Sˇœr
 
	`sum
(
I≈utAºay
 
§c
);

2172 
CV_EXPORTS_W
 
	`cou¡N⁄Zîo
–
I≈utAºay
 
§c
 );

2174 
CV_EXPORTS_W
 
	`födN⁄Zîo
–
I≈utAºay
 
§c
, 
OuçutAºay
 
idx
 );

2177 
CV_EXPORTS_W
 
Sˇœr
 
	`món
(
I≈utAºay
 
§c
, I≈utAºay 
mask
=
	`noAºay
());

2179 
CV_EXPORTS_W
 
	`mónStdDev
(
I≈utAºay
 
§c
, 
OuçutAºay
 
món
, OuçutAºay 
°ddev
,

2180 
I≈utAºay
 
mask
=
	`noAºay
());

2182 
CV_EXPORTS_W
 
	`n‹m
(
I≈utAºay
 
§c1
, 
n‹mTy≥
=
NORM_L2
, I≈utAºay 
mask
=
	`noAºay
());

2184 
CV_EXPORTS_W
 
	`n‹m
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2185 
n‹mTy≥
=
NORM_L2
, 
I≈utAºay
 
mask
=
	`noAºay
());

2188 
CV_EXPORTS_W
 
	`b©chDi°™˚
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2189 
OuçutAºay
 
di°
, 
dty≥
, OuçutAºay 
nidx
,

2190 
n‹mTy≥
=
NORM_L2
, 
K
=0,

2191 
I≈utAºay
 
mask
=
	`noAºay
(), 
upd©e
=0,

2192 
boﬁ
 
¸osscheck
=
Ál£
);

2195 
CV_EXPORTS_W
 
	`n‹mÆize
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Æpha
=1, 
bëa
=0,

2196 
n‹m_ty≥
=
NORM_L2
, 
dty≥
=-1, 
I≈utAºay
 
mask
=
	`noAºay
());

2199 
CV_EXPORTS_W
 
	`möMaxLoc
(
I≈utAºay
 
§c
, 
CV_OUT
 * 
möVÆ
,

2200 
CV_OUT
 * 
maxVÆ
=0, CV_OUT 
Poöt
* 
möLoc
=0,

2201 
CV_OUT
 
Poöt
* 
maxLoc
=0, 
I≈utAºay
 
mask
=
	`noAºay
());

2202 
CV_EXPORTS
 
	`möMaxIdx
(
I≈utAºay
 
§c
, * 
möVÆ
, * 
maxVÆ
,

2203 * 
möIdx
=0, * 
maxIdx
=0, 
I≈utAºay
 
mask
=
	`noAºay
());

2206 
CV_EXPORTS_W
 
	`ªdu˚
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
dim
, 
πy≥
, 
dty≥
=-1);

2209 
CV_EXPORTS
 
	`mîge
(c⁄° 
M©
* 
mv
, 
size_t
 
cou¡
, 
OuçutAºay
 
d°
);

2210 
CV_EXPORTS
 
	`mîge
(c⁄° 
ve˘‹
<
M©
>& 
mv
, 
OuçutAºay
 
d°
 );

2213 
CV_EXPORTS_W
 
	`mîge
(
I≈utAºayOfAºays
 
mv
, 
OuçutAºay
 
d°
);

2216 
CV_EXPORTS
 
	`•lô
(c⁄° 
M©
& 
§c
, M©* 
mvbegö
);

2217 
CV_EXPORTS
 
	`•lô
(c⁄° 
M©
& 
m
, 
ve˘‹
<M©>& 
mv
 );

2220 
CV_EXPORTS_W
 
	`•lô
(
I≈utAºay
 
m
, 
OuçutAºayOfAºays
 
mv
);

2223 
CV_EXPORTS
 
	`mixCh™√ls
(c⁄° 
M©
* 
§c
, 
size_t
 
n§cs
, M©* 
d°
, size_à
nd°s
,

2224 c⁄° * 
‰omTo
, 
size_t
 
≈aús
);

2225 
CV_EXPORTS
 
	`mixCh™√ls
(c⁄° 
ve˘‹
<
M©
>& 
§c
, ve˘‹<M©>& 
d°
,

2226 c⁄° * 
‰omTo
, 
size_t
 
≈aús
);

2227 
CV_EXPORTS_W
 
	`mixCh™√ls
(
I≈utAºayOfAºays
 
§c
, I≈utAºayOfAºay†
d°
,

2228 c⁄° 
ve˘‹
<>& 
‰omTo
);

2231 
CV_EXPORTS_W
 
	`exåa˘Ch™√l
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
coi
);

2234 
CV_EXPORTS_W
 
	`ö£πCh™√l
(
I≈utAºay
 
§c
, 
I≈utOuçutAºay
 
d°
, 
coi
);

2237 
CV_EXPORTS_W
 
	`Êù
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
ÊùCode
);

2240 
CV_EXPORTS_W
 
	`ª≥©
(
I≈utAºay
 
§c
, 
ny
, 
nx
, 
OuçutAºay
 
d°
);

2241 
CV_EXPORTS
 
M©
 
	`ª≥©
(c⁄° M©& 
§c
, 
ny
, 
nx
);

2243 
CV_EXPORTS
 
	`hc⁄ˇt
(c⁄° 
M©
* 
§c
, 
size_t
 
n§c
, 
OuçutAºay
 
d°
);

2244 
CV_EXPORTS
 
	`hc⁄ˇt
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2245 
CV_EXPORTS_W
 
	`hc⁄ˇt
(
I≈utAºayOfAºays
 
§c
, 
OuçutAºay
 
d°
);

2247 
CV_EXPORTS
 
	`vc⁄ˇt
(c⁄° 
M©
* 
§c
, 
size_t
 
n§c
, 
OuçutAºay
 
d°
);

2248 
CV_EXPORTS
 
	`vc⁄ˇt
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2249 
CV_EXPORTS_W
 
	`vc⁄ˇt
(
I≈utAºayOfAºays
 
§c
, 
OuçutAºay
 
d°
);

2252 
CV_EXPORTS_W
 
	`bôwi£_™d
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2253 
OuçutAºay
 
d°
, 
I≈utAºay
 
mask
=
	`noAºay
());

2255 
CV_EXPORTS_W
 
	`bôwi£_‹
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2256 
OuçutAºay
 
d°
, 
I≈utAºay
 
mask
=
	`noAºay
());

2258 
CV_EXPORTS_W
 
	`bôwi£_x‹
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2259 
OuçutAºay
 
d°
, 
I≈utAºay
 
mask
=
	`noAºay
());

2261 
CV_EXPORTS_W
 
	`bôwi£_nŸ
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

2262 
I≈utAºay
 
mask
=
	`noAºay
());

2264 
CV_EXPORTS_W
 
	`absdiff
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2266 
CV_EXPORTS_W
 
	`öR™ge
(
I≈utAºay
 
§c
, I≈utAºay 
lowîb
,

2267 
I≈utAºay
 
uµîb
, 
OuçutAºay
 
d°
);

2269 
CV_EXPORTS_W
 
	`com∑ª
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
, 
cmp›
);

2271 
CV_EXPORTS_W
 
	`mö
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2273 
CV_EXPORTS_W
 
	`max
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2276 
CV_EXPORTS
 
	`mö
(c⁄° 
M©
& 
§c1
, c⁄° M©& 
§c2
, M©& 
d°
);

2278 
CV_EXPORTS
 
	`mö
(c⁄° 
M©
& 
§c1
, 
§c2
, M©& 
d°
);

2280 
CV_EXPORTS
 
	`max
(c⁄° 
M©
& 
§c1
, c⁄° M©& 
§c2
, M©& 
d°
);

2282 
CV_EXPORTS
 
	`max
(c⁄° 
M©
& 
§c1
, 
§c2
, M©& 
d°
);

2285 
CV_EXPORTS_W
 
	`sqπ
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
);

2287 
CV_EXPORTS_W
 
	`pow
(
I≈utAºay
 
§c
, 
powî
, 
OuçutAºay
 
d°
);

2289 
CV_EXPORTS_W
 
	`exp
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
);

2291 
CV_EXPORTS_W
 
	`log
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
);

2293 
CV_EXPORTS_W
 
	`cubeRoŸ
(
vÆ
);

2295 
CV_EXPORTS_W
 
	`Á°Aèn2
(
y
, 
x
);

2297 
CV_EXPORTS
 
	`exp
(c⁄° * 
§c
, * 
d°
, 
n
);

2298 
CV_EXPORTS
 
	`log
(c⁄° * 
§c
, * 
d°
, 
n
);

2299 
CV_EXPORTS
 
	`Á°Aèn2
(c⁄° * 
y
, c⁄° * 
x
, * 
d°
, 
n
, 
boﬁ
 
™gÀInDegªes
);

2300 
CV_EXPORTS
 
	`magnôude
(c⁄° * 
x
, c⁄° * 
y
, * 
d°
, 
n
);

2303 
CV_EXPORTS_W
 
	`pﬁ¨ToC¨t
(
I≈utAºay
 
magnôude
, I≈utAºay 
™gÀ
,

2304 
OuçutAºay
 
x
, OuçutAºay 
y
, 
boﬁ
 
™gÀInDegªes
=
Ál£
);

2306 
CV_EXPORTS_W
 
	`ˇπToPﬁ¨
(
I≈utAºay
 
x
, I≈utAºay 
y
,

2307 
OuçutAºay
 
magnôude
, OuçutAºay 
™gÀ
,

2308 
boﬁ
 
™gÀInDegªes
=
Ál£
);

2310 
CV_EXPORTS_W
 
	`pha£
(
I≈utAºay
 
x
, I≈utAºay 
y
, 
OuçutAºay
 
™gÀ
,

2311 
boﬁ
 
™gÀInDegªes
=
Ál£
);

2313 
CV_EXPORTS_W
 
	`magnôude
(
I≈utAºay
 
x
, I≈utAºay 
y
, 
OuçutAºay
 
magnôude
);

2315 
CV_EXPORTS_W
 
boﬁ
 
	`checkR™ge
(
I≈utAºay
 
a
, boﬁ 
quõt
=
åue
, 
CV_OUT
 
Poöt
* 
pos
=0,

2316 
möVÆ
=-
DBL_MAX
, 
maxVÆ
=DBL_MAX);

2318 
CV_EXPORTS_W
 
	`∑tchNaNs
(
I≈utOuçutAºay
 
a
, 
vÆ
=0);

2321 
CV_EXPORTS_W
 
	`gemm
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
Æpha
,

2322 
I≈utAºay
 
§c3
, 
gamma
, 
OuçutAºay
 
d°
, 
Êags
=0);

2324 
CV_EXPORTS_W
 
	`mulTøn•o£d
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
boﬁ
 
aTa
,

2325 
I≈utAºay
 
dñè
=
	`noAºay
(),

2326 
sˇÀ
=1, 
dty≥
=-1 );

2328 
CV_EXPORTS_W
 
	`å™•o£
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
);

2330 
CV_EXPORTS_W
 
	`å™sf‹m
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, I≈utAºay 
m
 );

2332 
CV_EXPORTS_W
 
	`≥r•e˘iveTønsf‹m
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, I≈utAºay 
m
 );

2335 
CV_EXPORTS_W
 
	`com∂ëeSymm
(
I≈utOuçutAºay
 
mtx
, 
boﬁ
 
lowîToUµî
=
Ál£
);

2337 
CV_EXPORTS_W
 
	`£tIdítôy
(
I≈utOuçutAºay
 
mtx
, c⁄° 
Sˇœr
& 
s
=
	`Sˇœr
(1));

2339 
CV_EXPORTS_W
 
	`dëîmö™t
(
I≈utAºay
 
mtx
);

2341 
CV_EXPORTS_W
 
Sˇœr
 
	`åa˚
(
I≈utAºay
 
mtx
);

2343 
CV_EXPORTS_W
 
	`övît
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
=
DECOMP_LU
);

2345 
CV_EXPORTS_W
 
boﬁ
 
	`sﬁve
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2346 
OuçutAºay
 
d°
, 
Êags
=
DECOMP_LU
);

2350 
SORT_EVERY_ROW
=0,

2351 
SORT_EVERY_COLUMN
=1,

2352 
SORT_ASCENDING
=0,

2353 
SORT_DESCENDING
=16

2354 
	}
};

2357 
CV_EXPORTS_W
 
s‹t
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
);

2359 
CV_EXPORTS_W
 
s‹tIdx
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
);

2361 
CV_EXPORTS_W
 
sﬁveCubic
(
I≈utAºay
 
c€ffs
, 
OuçutAºay
 
roŸs
);

2363 
CV_EXPORTS_W
 
sﬁvePﬁy
(
I≈utAºay
 
c€ffs
, 
OuçutAºay
 
roŸs
, 
maxIãrs
=300);

2365 
CV_EXPORTS
 
boﬁ
 
eigí
(
I≈utAºay
 
§c
, 
OuçutAºay
 
eigívÆues
, 
lowödex
=-1,

2366 
highödex
=-1);

2368 
CV_EXPORTS
 
boﬁ
 
eigí
(
I≈utAºay
 
§c
, 
OuçutAºay
 
eigívÆues
,

2369 
OuçutAºay
 
eigíve˘‹s
,

2370 
lowödex
=-1, 
highödex
=-1);

2371 
CV_EXPORTS_W
 
boﬁ
 
eigí
(
I≈utAºay
 
§c
, boﬁ 
compuãEigíve˘‹s
,

2372 
OuçutAºay
 
eigívÆues
, OuçutAºay 
eigíve˘‹s
);

2376 
	gCOVAR_SCRAMBLED
=0,

2377 
	gCOVAR_NORMAL
=1,

2378 
	gCOVAR_USE_AVG
=2,

2379 
	gCOVAR_SCALE
=4,

2380 
	gCOVAR_ROWS
=8,

2381 
	gCOVAR_COLS
=16

2385 
CV_EXPORTS
 
ˇlcCov¨M©rix
–c⁄° 
M©
* 
ßm∂es
, 
nßm∂es
, M©& 
cov¨
, M©& 
món
,

2386 
Êags
, 
˘y≥
=
CV_64F
);

2388 
CV_EXPORTS_W
 
ˇlcCov¨M©rix
–
I≈utAºay
 
ßm∂es
, 
OuçutAºay
 
cov¨
,

2389 
OuçutAºay
 
món
, 
Êags
, 
˘y≥
=
CV_64F
);

2445 ˛as†
	cCV_EXPORTS
 
	gPCA


2447 
	gpublic
:

2449 
PCA
();

2451 
PCA
(
I≈utAºay
 
d©a
, I≈utAºay 
món
, 
Êags
, 
maxComp⁄íts
=0);

2452 
PCA
(
I≈utAºay
 
d©a
, I≈utAºay 
món
, 
Êags
, 
ªèöedV¨ün˚
);

2454 
	gPCA
& 
›î©‹
()(
I≈utAºay
 
	gd©a
, I≈utAºay 
	gmón
, 
	gÊags
, 
	gmaxComp⁄íts
=0);

2455 
	gPCA
& 
compuãV¨
(
I≈utAºay
 
d©a
, I≈utAºay 
món
, 
Êags
, 
ªèöedV¨ün˚
);

2457 
M©
 
¥oje˘
(
I≈utAºay
 
vec
) const;

2459 
¥oje˘
(
I≈utAºay
 
vec
, 
OuçutAºay
 
ªsu…
) const;

2461 
M©
 
backProje˘
(
I≈utAºay
 
vec
) const;

2463 
backProje˘
(
I≈utAºay
 
vec
, 
OuçutAºay
 
ªsu…
) const;

2465 
M©
 
	geigíve˘‹s
;

2466 
M©
 
	geigívÆues
;

2467 
M©
 
	gmón
;

2470 
CV_EXPORTS_W
 
PCACompuã
(
I≈utAºay
 
d©a
, 
CV_OUT
 
I≈utOuçutAºay
 
món
,

2471 
OuçutAºay
 
eigíve˘‹s
, 
maxComp⁄íts
=0);

2473 
CV_EXPORTS_W
 
PCACompuãV¨
(
I≈utAºay
 
d©a
, 
CV_OUT
 
I≈utOuçutAºay
 
món
,

2474 
OuçutAºay
 
eigíve˘‹s
, 
ªèöedV¨ün˚
);

2476 
CV_EXPORTS_W
 
PCAProje˘
(
I≈utAºay
 
d©a
, I≈utAºay 
món
,

2477 
I≈utAºay
 
eigíve˘‹s
, 
OuçutAºay
 
ªsu…
);

2479 
CV_EXPORTS_W
 
PCABackProje˘
(
I≈utAºay
 
d©a
, I≈utAºay 
món
,

2480 
I≈utAºay
 
eigíve˘‹s
, 
OuçutAºay
 
ªsu…
);

2496 ˛as†
	cCV_EXPORTS
 
	gSVD


2498 
	gpublic
:

2499 íum { 
MODIFY_A
=1, 
	gNO_UV
=2, 
	gFULL_UV
=4 };

2501 
SVD
();

2503 
SVD
–
I≈utAºay
 
§c
, 
Êags
=0 );

2505 
	gSVD
& 
›î©‹
 ()–
I≈utAºay
 
	g§c
, 
	gÊags
=0 );

2508 
compuã
–
I≈utAºay
 
§c
, 
OuçutAºay
 
w
,

2509 
OuçutAºay
 
u
, OuçutAºay 
vt
, 
Êags
=0 );

2511 
compuã
–
I≈utAºay
 
§c
, 
OuçutAºay
 
w
, 
Êags
=0 );

2513 
backSub°
–
I≈utAºay
 
w
, I≈utAºay 
u
,

2514 
I≈utAºay
 
vt
, I≈utAºay 
rhs
,

2515 
OuçutAºay
 
d°
 );

2517 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
> 
compuã
–c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
,

2518 
M©x
<
_Tp
, 
nm
, 1>& 
w
, M©x<_Tp, 
m
,Çm>& 
u
, M©x<_Tp, 
n
,Çm>& 
vt
 );

2519 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
> 
compuã
–c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
,

2520 
M©x
<
_Tp
, 
nm
, 1>& 
w
 );

2521 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
, 
	gnb
> 
backSub°
–c⁄° 
M©x
<
_Tp
, 
nm
, 1>& 
w
,

2522 c⁄° 
M©x
<
_Tp
, 
m
, 
nm
>& 
u
, c⁄° M©x<_Tp, 
n
,Çm>& 
vt
, c⁄° M©x<_Tp, m, 
nb
>& 
rhs
, M©x<_Tp,Ç,Çb>& 
d°
 );

2525 
sﬁveZ
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
 );

2527 
backSub°
–
I≈utAºay
 
rhs
, 
OuçutAºay
 
d°
 ) const;

2529 
M©
 
	gu
, 
	gw
, 
	gvt
;

2533 
CV_EXPORTS_W
 
SVDecomp
–
I≈utAºay
 
§c
, 
CV_OUT
 
OuçutAºay
 
w
,

2534 
CV_OUT
 
OuçutAºay
 
u
, CV_OUT OuçutAºay 
vt
, 
Êags
=0 );

2537 
CV_EXPORTS_W
 
SVBackSub°
–
I≈utAºay
 
w
, I≈utAºay 
u
, I≈utAºay 
vt
,

2538 
I≈utAºay
 
rhs
, 
CV_OUT
 
OuçutAºay
 
d°
 );

2541 
CV_EXPORTS_W
 
MahÆ™obis
(
I≈utAºay
 
v1
, I≈utAºay 
v2
, I≈utAºay 
icov¨
);

2543 
CV_EXPORTS
 
MahÆ⁄obis
(
I≈utAºay
 
v1
, I≈utAºay 
v2
, I≈utAºay 
icov¨
);

2546 
CV_EXPORTS_W
 
d·
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
=0, 
n⁄zîoRows
=0);

2548 
CV_EXPORTS_W
 
id·
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
=0, 
n⁄zîoRows
=0);

2550 
CV_EXPORTS_W
 
d˘
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
=0);

2552 
CV_EXPORTS_W
 
id˘
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
=0);

2554 
CV_EXPORTS_W
 
mulS≥˘rums
(
I≈utAºay
 
a
, I≈utAºay 
b
, 
OuçutAºay
 
c
,

2555 
Êags
, 
boﬁ
 
c⁄jB
=
Ál£
);

2557 
CV_EXPORTS_W
 
gëO±imÆDFTSize
(
vecsize
);

2564 
	gKMEANS_RANDOM_CENTERS
=0,

2565 
	gKMEANS_PP_CENTERS
=2,

2566 
	gKMEANS_USE_INITIAL_LABELS
=1

2569 
CV_EXPORTS_W
 
kmóns
–
I≈utAºay
 
d©a
, 
K
, 
CV_OUT
 
I≈utOuçutAºay
 
be°Labñs
,

2570 
TîmCrôîü
 
¸ôîü
, 
©ãm±s
,

2571 
Êags
, 
OuçutAºay
 
˚¡îs
=
noAºay
() );

2574 
CV_EXPORTS
 
	gRNG
& 
theRNG
();

2577 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	$øndu
(Ë{  (
_Tp
)
	`theRNG
(); 
	}
}

2580 
CV_EXPORTS_W
 
øndu
(
I≈utOuçutAºay
 
d°
, 
I≈utAºay
 
low
, I≈utAºay 
high
);

2583 
CV_EXPORTS_W
 
øndn
(
I≈utOuçutAºay
 
d°
, 
I≈utAºay
 
món
, I≈utAºay 
°ddev
);

2586 
CV_EXPORTS
 
øndShufÊe
(
I≈utOuçutAºay
 
d°
, 
ôîFa˘‹
=1., 
RNG
* 
∫g
=0);

2587 
	$CV_EXPORTS_AS
(
øndShufÊe
Ë
	`øndShufÊe_
(
I≈utOuçutAºay
 
d°
, 
ôîFa˘‹
=1.);

2590 
CV_EXPORTS_W
 
	`löe
(
CV_IN_OUT
 
M©
& 
img
, 
Poöt
 
±1
, Poöà
±2
, c⁄° 
Sˇœr
& 
cﬁ‹
,

2591 
thick√ss
=1, 
löeTy≥
=8, 
shi·
=0);

2594 
CV_EXPORTS_W
 
	`ª˘™gÀ
(
CV_IN_OUT
 
M©
& 
img
, 
Poöt
 
±1
, Poöà
±2
,

2595 c⁄° 
Sˇœr
& 
cﬁ‹
, 
thick√ss
=1,

2596 
löeTy≥
=8, 
shi·
=0);

2599 
CV_EXPORTS
 
	`ª˘™gÀ
(
CV_IN_OUT
 
M©
& 
img
, 
Re˘
 
ªc
,

2600 c⁄° 
Sˇœr
& 
cﬁ‹
, 
thick√ss
=1,

2601 
löeTy≥
=8, 
shi·
=0);

2604 
CV_EXPORTS_W
 
	`cú˛e
(
CV_IN_OUT
 
M©
& 
img
, 
Poöt
 
˚¡î
, 
ødius
,

2605 c⁄° 
Sˇœr
& 
cﬁ‹
, 
thick√ss
=1,

2606 
löeTy≥
=8, 
shi·
=0);

2609 
CV_EXPORTS_W
 
	`ñlù£
(
CV_IN_OUT
 
M©
& 
img
, 
Poöt
 
˚¡î
, 
Size
 
axes
,

2610 
™gÀ
, 
°¨tAngÀ
, 
ídAngÀ
,

2611 c⁄° 
Sˇœr
& 
cﬁ‹
, 
thick√ss
=1,

2612 
löeTy≥
=8, 
shi·
=0);

2615 
CV_EXPORTS_W
 
	`ñlù£
(
CV_IN_OUT
 
M©
& 
img
, c⁄° 
RŸ©edRe˘
& 
box
, c⁄° 
Sˇœr
& 
cﬁ‹
,

2616 
thick√ss
=1, 
löeTy≥
=8);

2619 
CV_EXPORTS
 
	`fûlC⁄vexPﬁy
(
M©
& 
img
, c⁄° 
Poöt
* 
±s
, 
≈ts
,

2620 c⁄° 
Sˇœr
& 
cﬁ‹
, 
löeTy≥
=8,

2621 
shi·
=0);

2622 
CV_EXPORTS_W
 
	`fûlC⁄vexPﬁy
(
I≈utOuçutAºay
 
img
, 
I≈utAºay
 
poöts
,

2623 c⁄° 
Sˇœr
& 
cﬁ‹
, 
löeTy≥
=8,

2624 
shi·
=0);

2627 
CV_EXPORTS
 
	`fûlPﬁy
(
M©
& 
img
, c⁄° 
Poöt
** 
±s
,

2628 c⁄° * 
≈ts
, 
nc⁄tours
,

2629 c⁄° 
Sˇœr
& 
cﬁ‹
, 
löeTy≥
=8, 
shi·
=0,

2630 
Poöt
 
off£t
=
	`Poöt
() );

2632 
CV_EXPORTS_W
 
	`fûlPﬁy
(
I≈utOuçutAºay
 
img
, 
I≈utAºayOfAºays
 
±s
,

2633 c⁄° 
Sˇœr
& 
cﬁ‹
, 
löeTy≥
=8, 
shi·
=0,

2634 
Poöt
 
off£t
=
	`Poöt
() );

2637 
CV_EXPORTS
 
	`pﬁylöes
(
M©
& 
img
, c⁄° 
Poöt
** 
±s
, c⁄° * 
≈ts
,

2638 
nc⁄tours
, 
boﬁ
 
isClo£d
, c⁄° 
Sˇœr
& 
cﬁ‹
,

2639 
thick√ss
=1, 
löeTy≥
=8, 
shi·
=0 );

2641 
CV_EXPORTS_W
 
	`pﬁylöes
(
I≈utOuçutAºay
 
img
, 
I≈utAºayOfAºays
 
±s
,

2642 
boﬁ
 
isClo£d
, c⁄° 
Sˇœr
& 
cﬁ‹
,

2643 
thick√ss
=1, 
löeTy≥
=8, 
shi·
=0 );

2646 
CV_EXPORTS
 
boﬁ
 
	`˛ùLöe
(
Size
 
imgSize
, 
CV_IN_OUT
 
Poöt
& 
±1
, CV_IN_OUT Poöt& 
±2
);

2649 
CV_EXPORTS_W
 
boﬁ
 
	`˛ùLöe
(
Re˘
 
imgRe˘
, 
CV_OUT
 
CV_IN_OUT
 
Poöt
& 
±1
, CV_OUT CV_IN_OUT Poöt& 
±2
);

2657 ˛as†
	cCV_EXPORTS
 
LöeIãøt‹


2659 
public
:

2661 
	`LöeIãøt‹
–c⁄° 
M©
& 
img
, 
Poöt
 
±1
, Poöà
±2
,

2662 
c⁄√˘ivôy
=8, 
boﬁ
 
À·ToRight
=
Ál£
 );

2664 
uch¨
* 
›î©‹
 *();

2666 
LöeIãøt‹
& 
›î©‹
 ++();

2668 
LöeIãøt‹
 
›î©‹
 ++();

2670 
Poöt
 
	`pos
() const;

2672 
uch¨
* 
±r
;

2673 c⁄° 
uch¨
* 
±r0
;

2674 
°ï
, 
ñemSize
;

2675 
îr
, 
cou¡
;

2676 
möusDñè
, 
∂usDñè
;

2677 
möusSãp
, 
∂usSãp
;

2678 
	}
};

2681 
CV_EXPORTS_W
 
ñlù£2Pﬁy
–
Poöt
 
˚¡î
, 
Size
 
axes
, 
™gÀ
,

2682 
¨cSèπ
, 
¨cEnd
, 
dñè
,

2683 
CV_OUT
 
ve˘‹
<
Poöt
>& 
±s
 );

2687 
	gFONT_HERSHEY_SIMPLEX
 = 0,

2688 
	gFONT_HERSHEY_PLAIN
 = 1,

2689 
	gFONT_HERSHEY_DUPLEX
 = 2,

2690 
	gFONT_HERSHEY_COMPLEX
 = 3,

2691 
	gFONT_HERSHEY_TRIPLEX
 = 4,

2692 
	gFONT_HERSHEY_COMPLEX_SMALL
 = 5,

2693 
	gFONT_HERSHEY_SCRIPT_SIMPLEX
 = 6,

2694 
	gFONT_HERSHEY_SCRIPT_COMPLEX
 = 7,

2695 
	gFONT_ITALIC
 = 16

2699 
CV_EXPORTS_W
 
putText
–
M©
& 
img
, c⁄° 
°rög
& 
ãxt
, 
Poöt
 
‹g
,

2700 
f⁄tFa˚
, 
f⁄tSˇÀ
, 
Sˇœr
 
cﬁ‹
,

2701 
thick√ss
=1, 
löeTy≥
=8,

2702 
boﬁ
 
bŸtomLe·Origö
=
Ál£
 );

2705 
CV_EXPORTS_W
 
Size
 
gëTextSize
(c⁄° 
°rög
& 
ãxt
, 
f⁄tFa˚
,

2706 
f⁄tSˇÀ
, 
thick√ss
,

2707 
CV_OUT
 * 
ba£Löe
);

2756 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cM©_
 : 
public
 
M©


2758 
public
:

2759 
_Tp
 
	tvÆue_ty≥
;

2760 
ty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tch™√l_ty≥
 channel_type;

2761 
	gM©Iãøt‹_
<
	t_Tp
> 
	tôî©‹
;

2762 
	gM©C⁄°Iãøt‹_
<
	t_Tp
> 
	tc⁄°_ôî©‹
;

2765 
M©_
();

2767 
M©_
(
_rows
, 
_cﬁs
);

2769 
M©_
(
_rows
, 
_cﬁs
, c⁄° 
_Tp
& 
vÆue
);

2771 
ex∂icô
 
M©_
(
Size
 
_size
);

2773 
M©_
(
Size
 
_size
, c⁄° 
_Tp
& 
vÆue
);

2775 
M©_
(
_ndims
, c⁄° * 
_sizes
);

2777 
M©_
(
_ndims
, c⁄° * 
_sizes
, c⁄° 
_Tp
& 
vÆue
);

2779 
M©_
(c⁄° 
M©
& 
m
);

2781 
M©_
(c⁄° M©_& 
m
);

2783 
M©_
(
_rows
, 
_cﬁs
, 
_Tp
* 
_d©a
, 
size_t
 
_°ï
=
AUTO_STEP
);

2785 
M©_
(
_ndims
, c⁄° * 
_sizes
, 
_Tp
* 
_d©a
, c⁄° 
size_t
* 
_°ïs
=0);

2787 
M©_
(c⁄° M©_& 
m
, c⁄° 
R™ge
& 
rowR™ge
, c⁄° R™ge& 
cﬁR™ge
=R™ge::
Æl
());

2789 
M©_
(c⁄° M©_& 
m
, c⁄° 
Re˘
& 
roi
);

2791 
M©_
(c⁄° M©_& 
m
, c⁄° 
R™ge
* 
ønges
);

2793 
ex∂icô
 
M©_
(c⁄° 
M©Ex¥
& 
e
);

2795 
ex∂icô
 
M©_
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
, 
boﬁ
 
c›yD©a
=
Ál£
);

2796 
	gãm∂©e
<
	gn
> 
ex∂icô
 
M©_
(c⁄° 
Vec
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
, 
n
>& 
vec
, 
boﬁ
 
c›yD©a
=
åue
);

2797 
	gãm∂©e
<
	gm
, 
	gn
> 
ex∂icô
 
M©_
(c⁄° 
M©x
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
, 
m
, 
n
>& 
mtx
, 
boﬁ
 
c›yD©a
=
åue
);

2798 
ex∂icô
 
M©_
(c⁄° 
Poöt_
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
>& 
±
, 
boﬁ
 
c›yD©a
=
åue
);

2799 
ex∂icô
 
M©_
(c⁄° 
Poöt3_
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
>& 
±
, 
boﬁ
 
c›yD©a
=
åue
);

2800 
ex∂icô
 
M©_
(c⁄° 
M©CommaInôülizî_
<
_Tp
>& 
commaInôülizî
);

2802 
	gM©_
& 
	g›î©‹
 = (c⁄° 
M©
& 
m
);

2803 
	gM©_
& 
	g›î©‹
 = (c⁄° 
M©_
& 
m
);

2805 
	gM©_
& 
	g›î©‹
 = (c⁄° 
_Tp
& 
s
);

2807 
	gM©_
& 
	g›î©‹
 = (c⁄° 
M©Ex¥
& 
e
);

2810 
ôî©‹
 
begö
();

2811 
ôî©‹
 
íd
();

2812 
c⁄°_ôî©‹
 
begö
() const;

2813 
c⁄°_ôî©‹
 
íd
() const;

2816 
¸óã
(
_rows
, 
_cﬁs
);

2818 
¸óã
(
Size
 
_size
);

2820 
¸óã
(
_ndims
, c⁄° * 
_sizes
);

2822 
M©_
 
¸oss
(c⁄° M©_& 
m
) const;

2824 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
›î©‹
 
	gM©_
<T2>() const;

2826 
M©_
 
row
(
y
) const;

2827 
M©_
 
cﬁ
(
x
) const;

2828 
M©_
 
düg
(
d
=0) const;

2829 
M©_
 
˛⁄e
() const;

2832 
size_t
 
ñemSize
() const;

2833 
size_t
 
ñemSize1
() const;

2834 
ty≥
() const;

2835 
dïth
() const;

2836 
ch™√ls
() const;

2837 
size_t
 
°ï1
(
i
=0) const;

2839 
size_t
 
°ïT
(
i
=0) const;

2842 
M©Ex¥
 
zîos
(
rows
, 
cﬁs
);

2843 
M©Ex¥
 
zîos
(
Size
 
size
);

2844 
M©Ex¥
 
zîos
(
_ndims
, c⁄° * 
_sizes
);

2845 
M©Ex¥
 
⁄es
(
rows
, 
cﬁs
);

2846 
M©Ex¥
 
⁄es
(
Size
 
size
);

2847 
M©Ex¥
 
⁄es
(
_ndims
, c⁄° * 
_sizes
);

2848 
M©Ex¥
 
eye
(
rows
, 
cﬁs
);

2849 
M©Ex¥
 
eye
(
Size
 
size
);

2852 
	gM©_
& 
adju°ROI
–
dt›
, 
dbŸtom
, 
dÀ·
, 
dright
 );

2853 
M©_
 
›î©‹
()–c⁄° 
	gR™ge
& 
	growR™ge
, c⁄° R™ge& 
	gcﬁR™ge
 ) const;

2854 
M©_
 
›î©‹
()–c⁄° 
	gRe˘
& 
	groi
 ) const;

2855 
M©_
 
›î©‹
()–c⁄° 
R™ge
* 
	gønges
 ) const;

2858 
_Tp
* 
	g›î©‹
 [](
	gy
);

2859 c⁄° 
_Tp
* 
	g›î©‹
 [](
	gy
) const;

2862 
	g_Tp
& 
›î©‹
 ()(c⁄° * 
	gidx
);

2864 c⁄° 
	g_Tp
& 
›î©‹
 ()(c⁄° * 
	gidx
) const;

2867 
	gãm∂©e
<
	gn
> 
	g_Tp
& 
›î©‹
 ()(c⁄° 
	gVec
<,Ç>& 
	gidx
);

2869 
	gãm∂©e
<
	gn
> c⁄° 
	g_Tp
& 
›î©‹
 ()(c⁄° 
	gVec
<,Ç>& 
	gidx
) const;

2872 
	g_Tp
& 
›î©‹
 ()(
	gidx0
);

2874 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gidx0
) const;

2876 
	g_Tp
& 
›î©‹
 ()(
	gidx0
, 
	gidx1
);

2878 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gidx0
, 
	gidx1
) const;

2880 
	g_Tp
& 
›î©‹
 ()(
	gidx0
, 
	gidx1
, 
	gidx2
);

2882 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gidx0
, 
	gidx1
, 
	gidx2
) const;

2884 
	g_Tp
& 
›î©‹
 ()(
Poöt
 
	g±
);

2885 c⁄° 
	g_Tp
& 
›î©‹
 ()(
Poöt
 
	g±
) const;

2888 
›î©‹
 
	gve˘‹
<
	g_Tp
>() const;

2890 
	gãm∂©e
<
	gn
> 
›î©‹
 
	gVec
<
ty≥«me
 
	gD©aTy≥
<
	g_Tp
>::
ch™√l_ty≥
,Ç>() const;

2892 
	gãm∂©e
<
	gm
, 
	gn
> 
›î©‹
 
	gM©x
<
ty≥«me
 
	gD©aTy≥
<
	g_Tp
>::
ch™√l_ty≥
, m,Ç>() const;

2895 
	gM©_
<
	tuch¨
> 
	tM©1b
;

2896 
	gM©_
<
	tVec2b
> 
	tM©2b
;

2897 
	gM©_
<
	tVec3b
> 
	tM©3b
;

2898 
	gM©_
<
	tVec4b
> 
	tM©4b
;

2900 
	gM©_
<> 
	tM©1s
;

2901 
	gM©_
<
	tVec2s
> 
	tM©2s
;

2902 
	gM©_
<
	tVec3s
> 
	tM©3s
;

2903 
	gM©_
<
	tVec4s
> 
	tM©4s
;

2905 
	gM©_
<
	tush‹t
> 
	tM©1w
;

2906 
	gM©_
<
	tVec2w
> 
	tM©2w
;

2907 
	gM©_
<
	tVec3w
> 
	tM©3w
;

2908 
	gM©_
<
	tVec4w
> 
	tM©4w
;

2910 
	gM©_
<> 
	tM©1i
;

2911 
	gM©_
<
	tVec2i
> 
	tM©2i
;

2912 
	gM©_
<
	tVec3i
> 
	tM©3i
;

2913 
	gM©_
<
	tVec4i
> 
	tM©4i
;

2915 
	gM©_
<> 
	tM©1f
;

2916 
	gM©_
<
	tVec2f
> 
	tM©2f
;

2917 
	gM©_
<
	tVec3f
> 
	tM©3f
;

2918 
	gM©_
<
	tVec4f
> 
	tM©4f
;

2920 
	gM©_
<> 
	tM©1d
;

2921 
	gM©_
<
	tVec2d
> 
	tM©2d
;

2922 
	gM©_
<
	tVec3d
> 
	tM©3d
;

2923 
	gM©_
<
	tVec4d
> 
	tM©4d
;

2927 ˛as†
	cCV_EXPORTS
 
	gM©C⁄°Iãøt‹


2929 
	gpublic
:

2930 
uch¨
* 
	tvÆue_ty≥
;

2931 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

2932 c⁄° 
	tuch¨
** 
	tpoöãr
;

2933 
uch¨
* 
	tª„ªn˚
;

2934 
	g°d
::
	tøndom_ac˚ss_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

2937 
M©C⁄°Iãøt‹
();

2939 
M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
);

2941 
M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
, 
_row
, 
_cﬁ
=0);

2943 
M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
, 
Poöt
 
_±
);

2945 
M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
, c⁄° * 
_idx
);

2947 
M©C⁄°Iãøt‹
(c⁄° M©C⁄°Iãøt‹& 
ô
);

2950 
	gM©C⁄°Iãøt‹
& 
	g›î©‹
 = (c⁄° 
M©C⁄°Iãøt‹
& 
ô
);

2952 
uch¨
* 
	g›î©‹
 *() const;

2954 
uch¨
* 
	g›î©‹
 [](
±rdiff_t
 
	gi
) const;

2957 
	gM©C⁄°Iãøt‹
& 
	g›î©‹
 +(
±rdiff_t
 
ofs
);

2959 
	gM©C⁄°Iãøt‹
& 
	g›î©‹
 -(
±rdiff_t
 
ofs
);

2961 
	gM©C⁄°Iãøt‹
& 
	g›î©‹
 --();

2963 
M©C⁄°Iãøt‹
 
	g›î©‹
 --();

2965 
	gM©C⁄°Iãøt‹
& 
	g›î©‹
 ++();

2967 
M©C⁄°Iãøt‹
 
	g›î©‹
 ++();

2969 
Poöt
 
pos
() const;

2971 
pos
(* 
_idx
) const;

2972 
±rdiff_t
 
Õos
() const;

2973 
£ek
(
±rdiff_t
 
ofs
, 
boﬁ
 
ªœtive
=
Ál£
);

2974 
£ek
(c⁄° * 
_idx
, 
boﬁ
 
ªœtive
=
Ál£
);

2976 c⁄° 
M©
* 
	gm
;

2977 
size_t
 
	gñemSize
;

2978 
uch¨
* 
	g±r
;

2979 
uch¨
* 
	g¶i˚Sèπ
;

2980 
uch¨
* 
	g¶i˚End
;

2987 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

2988 ˛as†
	cM©C⁄°Iãøt‹_
 : 
public
 
M©C⁄°Iãøt‹


2990 
public
:

2991 
_Tp
 
	tvÆue_ty≥
;

2992 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

2993 c⁄° 
	t_Tp
* 
	tpoöãr
;

2994 c⁄° 
	t_Tp
& 
	tª„ªn˚
;

2995 
	g°d
::
	tøndom_ac˚ss_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

2998 
M©C⁄°Iãøt‹_
();

3000 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
);

3002 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
_row
, 
_cﬁ
=0);

3004 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
Poöt
 
_±
);

3006 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, c⁄° * 
_idx
);

3008 
M©C⁄°Iãøt‹_
(c⁄° M©C⁄°Iãøt‹_& 
ô
);

3011 
	gM©C⁄°Iãøt‹_
& 
	g›î©‹
 = (c⁄° 
M©C⁄°Iãøt‹_
& 
ô
);

3013 
_Tp
 
	g›î©‹
 *() const;

3015 
_Tp
 
	g›î©‹
 [](
±rdiff_t
 
	gi
) const;

3018 
	gM©C⁄°Iãøt‹_
& 
	g›î©‹
 +(
±rdiff_t
 
ofs
);

3020 
	gM©C⁄°Iãøt‹_
& 
	g›î©‹
 -(
±rdiff_t
 
ofs
);

3022 
	gM©C⁄°Iãøt‹_
& 
	g›î©‹
 --();

3024 
M©C⁄°Iãøt‹_
 
	g›î©‹
 --();

3026 
	gM©C⁄°Iãøt‹_
& 
	g›î©‹
 ++();

3028 
M©C⁄°Iãøt‹_
 
	g›î©‹
 ++();

3030 
Poöt
 
pos
() const;

3038 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

3039 
˛ass
 
	gM©Iãøt‹_
 : 
public
 
M©C⁄°Iãøt‹_
<
_Tp
>

3041 
public
:

3042 
_Tp
* 
	tpoöãr
;

3043 
	g_Tp
& 
	tª„ªn˚
;

3044 
	g°d
::
	tøndom_ac˚ss_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

3047 
M©Iãøt‹_
();

3049 
M©Iãøt‹_
(
M©_
<
_Tp
>* 
_m
);

3051 
M©Iãøt‹_
(
M©_
<
_Tp
>* 
_m
, 
_row
, 
_cﬁ
=0);

3053 
M©Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
Poöt
 
_±
);

3055 
M©Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, c⁄° * 
_idx
);

3057 
M©Iãøt‹_
(c⁄° M©Iãøt‹_& 
ô
);

3059 
	gM©Iãøt‹_
& 
	g›î©‹
 = (c⁄° 
M©Iãøt‹_
<
_Tp
>& 
ô
 );

3062 
	g_Tp
& 
	g›î©‹
 *() const;

3064 
	g_Tp
& 
	g›î©‹
 [](
±rdiff_t
 
	gi
) const;

3067 
	gM©Iãøt‹_
& 
	g›î©‹
 +(
±rdiff_t
 
ofs
);

3069 
	gM©Iãøt‹_
& 
	g›î©‹
 -(
±rdiff_t
 
ofs
);

3071 
	gM©Iãøt‹_
& 
	g›î©‹
 --();

3073 
M©Iãøt‹_
 
	g›î©‹
 --();

3075 
	gM©Iãøt‹_
& 
	g›î©‹
 ++();

3077 
M©Iãøt‹_
 
	g›î©‹
 ++();

3080 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gM©Op_Iãr_
;

3095 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cM©CommaInôülizî_


3097 
	gpublic
:

3099 
M©CommaInôülizî_
(
M©_
<
_Tp
>* 
_m
);

3101 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
	gM©CommaInôülizî_
<
	g_Tp
>& 
	g›î©‹
 , (
T2
 
	gv
);

3103 
	gM©_
<
	g_Tp
> 
	g›î©‹
 *() const;

3104 
›î©‹
 
	gM©_
<
	g_Tp
>() const;

3105 
	g¥Ÿe˘ed
:

3106 
M©Iãøt‹_
<
_Tp
> 
ô
;

3110 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> cœs†
	cM©xCommaInôülizî


3112 
	gpublic
:

3113 
M©xCommaInôülizî
(
M©x
<
_Tp
, 
m
, 
n
>* 
_mtx
);

3114 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
	gM©xCommaInôülizî
<
	g_Tp
, 
	gm
, 
	gn
>& 
	g›î©‹
 , (
T2
 
	gvÆ
);

3115 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 *() const;

3117 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>* 
	gd°
;

3118 
	gidx
;

3121 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
> 
˛ass
 
	gVecCommaInôülizî
 : 
public
 
M©xCommaInôülizî
<
_Tp
, m, 1>

3123 
	gpublic
:

3124 
VecCommaInôülizî
(
Vec
<
_Tp
, 
m
>* 
_vec
);

3125 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
	gVecCommaInôülizî
<
	g_Tp
, 
	gm
>& 
	g›î©‹
 , (
T2
 
	gvÆ
);

3126 
	gVec
<
	g_Tp
, 
	gm
> 
	g›î©‹
 *() const;

3156 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
=4096/(
_Tp
)+8> cœs†
	cAutoBuf„r


3158 
public
:

3159 
_Tp
 
	tvÆue_ty≥
;

3160 íum { 
	gbuf„r_∑ddög
 = ()((16 + (
_Tp
) - 1)/(_Tp)) };

3163 
AutoBuf„r
();

3165 
AutoBuf„r
(
size_t
 
_size
);

3167 ~
AutoBuf„r
();

3170 
Æloˇã
(
size_t
 
_size
);

3172 
dóŒoˇã
();

3174 
›î©‹
 
	g_Tp
* ();

3176 
›î©‹
 c⁄° 
	g_Tp
* () const;

3178 
	g¥Ÿe˘ed
:

3180 
_Tp
* 
±r
;

3182 
size_t
 
	gsize
;

3184 
_Tp
 
	gbuf
[
fixed_size
+
buf„r_∑ddög
];

3239 ˛as†
	cCV_EXPORTS
 
	gNAryM©Iãøt‹


3241 
	gpublic
:

3243 
NAryM©Iãøt‹
();

3245 
NAryM©Iãøt‹
(c⁄° 
M©
** 
¨øys
, 
uch¨
** 
±rs
, 
«ºays
=-1);

3247 
NAryM©Iãøt‹
(c⁄° 
M©
** 
¨øys
, M©* 
∂™es
, 
«ºays
=-1);

3249 
öô
(c⁄° 
M©
** 
¨øys
, M©* 
∂™es
, 
uch¨
** 
±rs
, 
«ºays
=-1);

3252 
	gNAryM©Iãøt‹
& 
	g›î©‹
 ++();

3254 
NAryM©Iãøt‹
 
	g›î©‹
 ++();

3257 c⁄° 
M©
** 
	g¨øys
;

3259 
M©
* 
	g∂™es
;

3261 
uch¨
** 
	g±rs
;

3263 
	g«ºays
;

3265 
size_t
 
	g≈œ√s
;

3267 
size_t
 
	gsize
;

3268 
	g¥Ÿe˘ed
:

3269 
ôîdïth
;

3270 
size_t
 
	gidx
;

3275 (*
	tC⁄vîtD©a
)(c⁄° * 
	t‰om
, * 
	tto
, 
	t˙
);

3276 (*
	tC⁄vîtSˇÀD©a
)(c⁄° * 
	t‰om
, * 
	tto
, 
	t˙
, 
	tÆpha
, 
	tbëa
);

3279 
CV_EXPORTS
 
C⁄vîtD©a
 
	`gëC⁄vîtEÀm
(
‰omTy≥
, 
toTy≥
);

3281 
CV_EXPORTS
 
C⁄vîtSˇÀD©a
 
	`gëC⁄vîtSˇÀEÀm
(
‰omTy≥
, 
toTy≥
);

3286 
˛ass
 
S∑r£M©Iãøt‹
;

3287 
˛ass
 
S∑r£M©C⁄°Iãøt‹
;

3288 
ãm∂©e
<
ty≥«me
 
_Tp
> 
˛ass
 
S∑r£M©Iãøt‹_
;

3289 
ãm∂©e
<
ty≥«me
 
_Tp
> 
˛ass
 
S∑r£M©C⁄°Iãøt‹_
;

3376 ˛as†
	cCV_EXPORTS
 
S∑r£M©


3378 
public
:

3379 
S∑r£M©Iãøt‹
 
	tôî©‹
;

3380 
S∑r£M©C⁄°Iãøt‹
 
	tc⁄°_ôî©‹
;

3383 
CV_EXPORTS
 
Hdr


3385 
	`Hdr
(
_dims
, c⁄° * 
_sizes
, 
_ty≥
);

3386 
	`˛ór
();

3387 
_Atomic_w‹d
 
ªfcou¡
;

3388 
dims
;

3389 
vÆueOff£t
;

3390 
size_t
 
nodeSize
;

3391 
size_t
 
nodeCou¡
;

3392 
size_t
 
‰ìLi°
;

3393 
ve˘‹
<
uch¨
> 
poﬁ
;

3394 
ve˘‹
<
size_t
> 
hashèb
;

3395 
size
[
CV_MAX_DIM
];

3399 
CV_EXPORTS
 
Node


3402 
size_t
 
hashvÆ
;

3404 
size_t
 
√xt
;

3406 
idx
[
CV_MAX_DIM
];

3410 
	`S∑r£M©
();

3412 
	`S∑r£M©
(
dims
, c⁄° * 
_sizes
, 
_ty≥
);

3414 
	`S∑r£M©
(c⁄° 
S∑r£M©
& 
m
);

3419 
ex∂icô
 
	`S∑r£M©
(c⁄° 
M©
& 
m
);

3421 
	`S∑r£M©
(c⁄° 
CvS∑r£M©
* 
m
);

3423 ~
	`S∑r£M©
();

3426 
S∑r£M©
& 
›î©‹
 = (c⁄° S∑r£M©& 
m
);

3428 
S∑r£M©
& 
›î©‹
 = (c⁄° 
M©
& 
m
);

3431 
S∑r£M©
 
	`˛⁄e
() const;

3434 
	`c›yTo
–
S∑r£M©
& 
m
 ) const;

3436 
	`c›yTo
–
M©
& 
m
 ) const;

3438 
	`c⁄vîtTo
–
S∑r£M©
& 
m
, 
πy≥
, 
Æpha
=1 ) const;

3445 
	`c⁄vîtTo
–
M©
& 
m
, 
πy≥
, 
Æpha
=1, 
bëa
=0 ) const;

3448 
	`assignTo
–
S∑r£M©
& 
m
, 
ty≥
=-1 ) const;

3456 
	`¸óã
(
dims
, c⁄° * 
_sizes
, 
_ty≥
);

3458 
	`˛ór
();

3460 
	`addªf
();

3462 
	`ªÀa£
();

3465 
›î©‹
 
CvS∑r£M©
*() const;

3467 
size_t
 
	`ñemSize
() const;

3469 
size_t
 
	`ñemSize1
() const;

3472 
	`ty≥
() const;

3474 
	`dïth
() const;

3476 
	`ch™√ls
() const;

3479 c⁄° * 
	`size
() const;

3481 
	`size
(
i
) const;

3483 
	`dims
() const;

3485 
size_t
 
	`nzcou¡
() const;

3488 
size_t
 
	`hash
(
i0
) const;

3490 
size_t
 
	`hash
(
i0
, 
i1
) const;

3492 
size_t
 
	`hash
(
i0
, 
i1
, 
i2
) const;

3494 
size_t
 
	`hash
(c⁄° * 
idx
) const;

3511 
uch¨
* 
	`±r
(
i0
, 
boﬁ
 
¸óãMissög
, 
size_t
* 
hashvÆ
=0);

3513 
uch¨
* 
	`±r
(
i0
, 
i1
, 
boﬁ
 
¸óãMissög
, 
size_t
* 
hashvÆ
=0);

3515 
uch¨
* 
	`±r
(
i0
, 
i1
, 
i2
, 
boﬁ
 
¸óãMissög
, 
size_t
* 
hashvÆ
=0);

3517 
uch¨
* 
	`±r
(c⁄° * 
idx
, 
boﬁ
 
¸óãMissög
, 
size_t
* 
hashvÆ
=0);

3529 
ãm∂©e
<
ty≥«me
 
_Tp
> _Tp& 
	`ªf
(
i0
, 
size_t
* 
hashvÆ
=0);

3531 
ãm∂©e
<
ty≥«me
 
_Tp
> _Tp& 
	`ªf
(
i0
, 
i1
, 
size_t
* 
hashvÆ
=0);

3533 
ãm∂©e
<
ty≥«me
 
_Tp
> _Tp& 
	`ªf
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
=0);

3535 
ãm∂©e
<
ty≥«me
 
_Tp
> _Tp& 
	`ªf
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
=0);

3551 
ãm∂©e
<
ty≥«me
 
_Tp
> _T∞
	`vÆue
(
i0
, 
size_t
* 
hashvÆ
=0) const;

3553 
ãm∂©e
<
ty≥«me
 
_Tp
> _T∞
	`vÆue
(
i0
, 
i1
, 
size_t
* 
hashvÆ
=0) const;

3555 
ãm∂©e
<
ty≥«me
 
_Tp
> _T∞
	`vÆue
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
=0) const;

3557 
ãm∂©e
<
ty≥«me
 
_Tp
> _T∞
	`vÆue
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
=0) const;

3569 
ãm∂©e
<
ty≥«me
 
_Tp
> c⁄° _Tp* 
	`föd
(
i0
, 
size_t
* 
hashvÆ
=0) const;

3571 
ãm∂©e
<
ty≥«me
 
_Tp
> c⁄° _Tp* 
	`föd
(
i0
, 
i1
, 
size_t
* 
hashvÆ
=0) const;

3573 
ãm∂©e
<
ty≥«me
 
_Tp
> c⁄° _Tp* 
	`föd
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
=0) const;

3575 
ãm∂©e
<
ty≥«me
 
_Tp
> c⁄° _Tp* 
	`föd
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
=0) const;

3578 
	`îa£
(
i0
, 
i1
, 
size_t
* 
hashvÆ
=0);

3580 
	`îa£
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
=0);

3582 
	`îa£
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
=0);

3589 
S∑r£M©Iãøt‹
 
	`begö
();

3591 
ãm∂©e
<
ty≥«me
 
_Tp
> 
S∑r£M©Iãøt‹_
<_Tp> 
	`begö
();

3593 
S∑r£M©C⁄°Iãøt‹
 
	`begö
() const;

3595 
ãm∂©e
<
ty≥«me
 
_Tp
> 
S∑r£M©C⁄°Iãøt‹_
<_Tp> 
	`begö
() const;

3601 
S∑r£M©Iãøt‹
 
	`íd
();

3603 
S∑r£M©C⁄°Iãøt‹
 
	`íd
() const;

3605 
ãm∂©e
<
ty≥«me
 
_Tp
> 
S∑r£M©Iãøt‹_
<_Tp> 
	`íd
();

3607 
ãm∂©e
<
ty≥«me
 
_Tp
> 
S∑r£M©C⁄°Iãøt‹_
<_Tp> 
	`íd
() const;

3610 
ãm∂©e
<
ty≥«me
 
_Tp
> _Tp& 
	`vÆue
(
Node
* 
n
);

3612 
ãm∂©e
<
ty≥«me
 
_Tp
> c⁄° _Tp& 
	`vÆue
(c⁄° 
Node
* 
n
) const;

3615 
Node
* 
	`node
(
size_t
 
nidx
);

3616 c⁄° 
Node
* 
	`node
(
size_t
 
nidx
) const;

3618 
uch¨
* 
	`√wNode
(c⁄° * 
idx
, 
size_t
 
hashvÆ
);

3619 
	`ªmoveNode
(
size_t
 
hidx
, size_à
nidx
, size_à
¥evidx
);

3620 
	`ªsizeHashTab
(
size_t
 
√wsize
);

3622 íum { 
MAGIC_VAL
=0x42FD0000, 
MAX_DIM
=
CV_MAX_DIM
, 
HASH_SCALE
=0x5bd1e995, 
HASH_BIT
=0x80000000 };

3624 
Êags
;

3625 
Hdr
* 
hdr
;

3626 
	}
};

3629 
CV_EXPORTS
 
möMaxLoc
(c⁄° 
S∑r£M©
& 
a
, * 
möVÆ
,

3630 * 
maxVÆ
, * 
möIdx
=0, * 
maxIdx
=0);

3632 
CV_EXPORTS
 
n‹m
–c⁄° 
S∑r£M©
& 
§c
, 
n‹mTy≥
 );

3634 
CV_EXPORTS
 
n‹mÆize
–c⁄° 
S∑r£M©
& 
§c
, S∑r£M©& 
d°
, 
Æpha
, 
n‹mTy≥
 );

3648 ˛as†
	cCV_EXPORTS
 
	gS∑r£M©C⁄°Iãøt‹


3650 
	gpublic
:

3652 
S∑r£M©C⁄°Iãøt‹
();

3654 
S∑r£M©C⁄°Iãøt‹
(c⁄° 
S∑r£M©
* 
_m
);

3656 
S∑r£M©C⁄°Iãøt‹
(c⁄° S∑r£M©C⁄°Iãøt‹& 
ô
);

3659 
	gS∑r£M©C⁄°Iãøt‹
& 
	g›î©‹
 = (c⁄° 
S∑r£M©C⁄°Iãøt‹
& 
ô
);

3662 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
vÆue
() const;

3664 c⁄° 
	gS∑r£M©
::
Node
* 
node
() const;

3667 
	gS∑r£M©C⁄°Iãøt‹
& 
	g›î©‹
 --();

3669 
S∑r£M©C⁄°Iãøt‹
 
	g›î©‹
 --();

3671 
	gS∑r£M©C⁄°Iãøt‹
& 
	g›î©‹
 ++();

3673 
S∑r£M©C⁄°Iãøt‹
 
	g›î©‹
 ++();

3676 
£ekEnd
();

3678 c⁄° 
S∑r£M©
* 
	gm
;

3679 
size_t
 
	ghashidx
;

3680 
uch¨
* 
	g±r
;

3689 ˛as†
	cCV_EXPORTS
 
	gS∑r£M©Iãøt‹
 : 
public
 
S∑r£M©C⁄°Iãøt‹


3691 
public
:

3693 
S∑r£M©Iãøt‹
();

3695 
S∑r£M©Iãøt‹
(
S∑r£M©
* 
_m
);

3697 
S∑r£M©Iãøt‹
(
S∑r£M©
* 
_m
, c⁄° * 
idx
);

3699 
S∑r£M©Iãøt‹
(c⁄° S∑r£M©Iãøt‹& 
ô
);

3702 
	gS∑r£M©Iãøt‹
& 
	g›î©‹
 = (c⁄° 
S∑r£M©Iãøt‹
& 
ô
);

3704 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
vÆue
() const;

3706 
	gS∑r£M©
::
Node
* 
node
() const;

3709 
	gS∑r£M©Iãøt‹
& 
	g›î©‹
 ++();

3711 
S∑r£M©Iãøt‹
 
	g›î©‹
 ++();

3727 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cS∑r£M©_
 : 
public
 
S∑r£M©


3729 
public
:

3730 
S∑r£M©Iãøt‹_
<
	t_Tp
> 
	tôî©‹
;

3731 
	gS∑r£M©C⁄°Iãøt‹_
<
	t_Tp
> 
	tc⁄°_ôî©‹
;

3734 
S∑r£M©_
();

3736 
S∑r£M©_
(
dims
, c⁄° * 
_sizes
);

3738 
S∑r£M©_
(c⁄° 
S∑r£M©
& 
m
);

3740 
S∑r£M©_
(c⁄° S∑r£M©_& 
m
);

3742 
S∑r£M©_
(c⁄° 
M©
& 
m
);

3744 
S∑r£M©_
(c⁄° 
CvS∑r£M©
* 
m
);

3746 
	gS∑r£M©_
& 
	g›î©‹
 = (c⁄° 
S∑r£M©
& 
m
);

3748 
	gS∑r£M©_
& 
	g›î©‹
 = (c⁄° 
S∑r£M©_
& 
m
);

3750 
	gS∑r£M©_
& 
	g›î©‹
 = (c⁄° 
M©
& 
m
);

3753 
S∑r£M©_
 
˛⁄e
() const;

3755 
¸óã
(
dims
, c⁄° * 
_sizes
);

3757 
›î©‹
 
	gCvS∑r£M©
*() const;

3760 
ty≥
() const;

3762 
dïth
() const;

3764 
ch™√ls
() const;

3767 
	g_Tp
& 
ªf
(
i0
, 
size_t
* 
hashvÆ
=0);

3769 
	g_Tp
& 
ªf
(
i0
, 
i1
, 
size_t
* 
hashvÆ
=0);

3771 
	g_Tp
& 
ªf
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
=0);

3773 
	g_Tp
& 
ªf
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
=0);

3776 
_Tp
 
›î©‹
()(
	gi0
, 
size_t
* 
	ghashvÆ
=0) const;

3778 
_Tp
 
›î©‹
()(
	gi0
, 
	gi1
, 
size_t
* 
	ghashvÆ
=0) const;

3780 
_Tp
 
›î©‹
()(
	gi0
, 
	gi1
, 
	gi2
, 
size_t
* 
	ghashvÆ
=0) const;

3782 
_Tp
 
›î©‹
()(c⁄° * 
	gidx
, 
size_t
* 
	ghashvÆ
=0) const;

3785 
	gS∑r£M©Iãøt‹_
<
	g_Tp
> 
begö
();

3787 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
> 
begö
() const;

3789 
	gS∑r£M©Iãøt‹_
<
	g_Tp
> 
íd
();

3791 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
> 
íd
() const;

3801 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cS∑r£M©C⁄°Iãøt‹_
 : 
public
 
S∑r£M©C⁄°Iãøt‹


3803 
public
:

3804 
°d
::
	tf‹w¨d_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

3807 
S∑r£M©C⁄°Iãøt‹_
();

3809 
S∑r£M©C⁄°Iãøt‹_
(c⁄° 
S∑r£M©_
<
_Tp
>* 
_m
);

3810 
S∑r£M©C⁄°Iãøt‹_
(c⁄° 
S∑r£M©
* 
_m
);

3812 
S∑r£M©C⁄°Iãøt‹_
(c⁄° S∑r£M©C⁄°Iãøt‹_& 
ô
);

3815 
	gS∑r£M©C⁄°Iãøt‹_
& 
	g›î©‹
 = (c⁄° 
S∑r£M©C⁄°Iãøt‹_
& 
ô
);

3817 c⁄° 
	g_Tp
& 
	g›î©‹
 *() const;

3820 
	gS∑r£M©C⁄°Iãøt‹_
& 
	g›î©‹
 ++();

3822 
S∑r£M©C⁄°Iãøt‹_
 
	g›î©‹
 ++();

3831 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gS∑r£M©Iãøt‹_
 : 
public
 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>

3833 
public
:

3834 
°d
::
	tf‹w¨d_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

3837 
S∑r£M©Iãøt‹_
();

3839 
S∑r£M©Iãøt‹_
(
S∑r£M©_
<
_Tp
>* 
_m
);

3840 
S∑r£M©Iãøt‹_
(
S∑r£M©
* 
_m
);

3842 
S∑r£M©Iãøt‹_
(c⁄° S∑r£M©Iãøt‹_& 
ô
);

3845 
	gS∑r£M©Iãøt‹_
& 
	g›î©‹
 = (c⁄° 
S∑r£M©Iãøt‹_
& 
ô
);

3847 
	g_Tp
& 
	g›î©‹
 *() const;

3850 
	gS∑r£M©Iãøt‹_
& 
	g›î©‹
 ++();

3852 
S∑r£M©Iãøt‹_
 
	g›î©‹
 ++();

3881 ˛as†
	cCV_EXPORTS_W
 
	gKDTªe


3883 
	gpublic
:

3887 
	sNode


3889 
Node
(Ë: 
idx
(-1), 
À·
(-1), 
right
(-1), 
bound¨y
(0.f) {}

3890 
Node
(
_idx
, 
_À·
, 
_right
, 
_bound¨y
)

3891 : 
idx
(
_idx
), 
À·
(
_À·
), 
right
(
_right
), 
bound¨y
(
_bound¨y
) {}

3893 
	gidx
;

3895 
	gÀ·
, 
	gright
;

3897 
	gbound¨y
;

3901 
CV_WRAP
 
KDTªe
();

3903 
CV_WRAP
 
KDTªe
(
I≈utAºay
 
poöts
, 
boﬁ
 
c›yAndRe‹dîPoöts
=
Ál£
);

3905 
CV_WRAP
 
KDTªe
(
I≈utAºay
 
poöts
, I≈utAºay 
_œbñs
,

3906 
boﬁ
 
c›yAndRe‹dîPoöts
=
Ál£
);

3908 
CV_WRAP
 
buûd
(
I≈utAºay
 
poöts
, 
boﬁ
 
c›yAndRe‹dîPoöts
=
Ál£
);

3910 
CV_WRAP
 
buûd
(
I≈utAºay
 
poöts
, I≈utAºay 
œbñs
,

3911 
boﬁ
 
c›yAndRe‹dîPoöts
=
Ál£
);

3913 
CV_WRAP
 
födNóª°
(
I≈utAºay
 
vec
, 
K
, 
Emax
,

3914 
OuçutAºay
 
√ighb‹sIdx
,

3915 
OuçutAºay
 
√ighb‹s
=
noAºay
(),

3916 
OuçutAºay
 
di°
=
noAºay
(),

3917 
OuçutAºay
 
œbñs
=
noAºay
()) const;

3919 
CV_WRAP
 
födOπhoR™ge
(
I≈utAºay
 
möBounds
,

3920 
I≈utAºay
 
maxBounds
,

3921 
OuçutAºay
 
√ighb‹sIdx
,

3922 
OuçutAºay
 
√ighb‹s
=
noAºay
(),

3923 
OuçutAºay
 
œbñs
=
noAºay
()) const;

3925 
CV_WRAP
 
gëPoöts
(
I≈utAºay
 
idx
, 
OuçutAºay
 
±s
,

3926 
OuçutAºay
 
œbñs
=
noAºay
()) const;

3928 c⁄° * 
gëPoöt
(
±idx
, * 
œbñ
=0) const;

3930 
CV_WRAP
 
dims
() const;

3932 
	gve˘‹
<
	gNode
> 
	gnodes
;

3933 
CV_PROP
 
M©
 
	gpoöts
;

3934 
CV_PROP
 
	gve˘‹
<> 
	gœbñs
;

3935 
CV_PROP
 
	gmaxDïth
;

3936 
CV_PROP_RW
 
	gn‹mTy≥
;

3941 
˛ass
 
CV_EXPORTS
 
	gFûeNode
;

4040 ˛as†
	cCV_EXPORTS_W
 
	gFûeSt‹age


4042 
	gpublic
:

4046 
READ
=0,

4047 
	gWRITE
=1,

4048 
	gAPPEND
=2,

4049 
	gMEMORY
=4,

4050 
	gFORMAT_MASK
=(7<<3),

4051 
	gFORMAT_AUTO
=0,

4052 
	gFORMAT_XML
=(1<<3),

4053 
	gFORMAT_YAML
=(2<<3)

4057 
	gUNDEFINED
=0,

4058 
	gVALUE_EXPECTED
=1,

4059 
	gNAME_EXPECTED
=2,

4060 
	gINSIDE_MAP
=4

4063 
CV_WRAP
 
FûeSt‹age
();

4065 
CV_WRAP
 
FûeSt‹age
(c⁄° 
°rög
& 
sour˚
, 
Êags
, c⁄° såög& 
ícodög
=string());

4067 
FûeSt‹age
(
CvFûeSt‹age
* 
fs
);

4069 
	gvútuÆ
 ~
FûeSt‹age
();

4072 
CV_WRAP
 
vútuÆ
 
boﬁ
 
›í
(c⁄° 
°rög
& 
fûíame
, 
Êags
, c⁄° såög& 
ícodög
=string());

4074 
CV_WRAP
 
vútuÆ
 
boﬁ
 
isO≥√d
() const;

4076 
CV_WRAP
 
vútuÆ
 
ªÀa£
();

4078 
CV_WRAP
 
°rög
 
ªÀa£AndGëSåög
();

4081 
CV_WRAP
 
FûeNode
 
gëFú°T›LevñNode
() const;

4083 
CV_WRAP
 
FûeNode
 
roŸ
(
°ªamidx
=0) const;

4085 
FûeNode
 
	g›î©‹
[](c⁄° 
	g°rög
& 
	gnodíame
) const;

4087 
CV_WRAP
 
FûeNode
 
	g›î©‹
[](c⁄° * 
	gnodíame
) const;

4090 
CvFûeSt‹age
* 
	g›î©‹
 *(Ë{  
	gfs
; }

4092 c⁄° 
CvFûeSt‹age
* 
	g›î©‹
 *(Ëc⁄° {  
	gfs
; }

4094 
wrôeRaw
–c⁄° 
°rög
& 
fmt
, c⁄° 
uch¨
* 
vec
, 
size_t
 
Àn
 );

4096 
wrôeObj
–c⁄° 
°rög
& 
«me
, c⁄° * 
obj
 );

4099 
°rög
 
gëDeÁu…Obje˘Name
(c⁄° såög& 
fûíame
);

4101 
	gPå
<
	gCvFûeSt‹age
> 
	gfs
;

4102 
°rög
 
	gñ«me
;

4103 
	gve˘‹
<> 
	g°ru˘s
;

4104 
	g°©e
;

4107 
˛ass
 
CV_EXPORTS
 
	gFûeNodeIãøt‹
;

4119 ˛as†
	cCV_EXPORTS_W_SIMPLE
 
	gFûeNode


4121 
	gpublic
:

4125 
NONE
=0,

4126 
	gINT
=1,

4127 
	gREAL
=2,

4128 
	gFLOAT
=
REAL
,

4129 
	gSTR
=3,

4130 
	gSTRING
=
STR
,

4131 
	gREF
=4,

4132 
	gSEQ
=5,

4133 
	gMAP
=6,

4134 
	gTYPE_MASK
=7,

4135 
	gFLOW
=8,

4136 
	gUSER
=16,

4137 
	gEMPTY
=32,

4138 
	gNAMED
=64

4141 
CV_WRAP
 
FûeNode
();

4143 
FûeNode
(c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
node
);

4145 
FûeNode
(c⁄° FûeNode& 
node
);

4147 
FûeNode
 
	g›î©‹
[](c⁄° 
	g°rög
& 
	gnodíame
) const;

4149 
CV_WRAP
 
FûeNode
 
	g›î©‹
[](c⁄° * 
	gnodíame
) const;

4151 
CV_WRAP
 
FûeNode
 
	g›î©‹
[](
	gi
) const;

4153 
CV_WRAP
 
ty≥
() const;

4156 
CV_WRAP
 
boﬁ
 
em±y
() const;

4158 
CV_WRAP
 
boﬁ
 
isN⁄e
() const;

4160 
CV_WRAP
 
boﬁ
 
isSeq
() const;

4162 
CV_WRAP
 
boﬁ
 
isM≠
() const;

4164 
CV_WRAP
 
boﬁ
 
isI¡
() const;

4166 
CV_WRAP
 
boﬁ
 
isRól
() const;

4168 
CV_WRAP
 
boﬁ
 
isSåög
() const;

4170 
CV_WRAP
 
boﬁ
 
isNamed
() const;

4172 
CV_WRAP
 
°rög
 
«me
() const;

4174 
CV_WRAP
 
size_t
 
size
() const;

4176 
›î©‹
 () const;

4178 
›î©‹
 () const;

4180 
›î©‹
 () const;

4182 
›î©‹
 
°rög
() const;

4185 
CvFûeNode
* 
	g›î©‹
 *();

4187 c⁄° 
CvFûeNode
* 
	g›î©‹
* () const;

4190 
FûeNodeIãøt‹
 
begö
() const;

4192 
FûeNodeIãøt‹
 
íd
() const;

4195 
ªadRaw
–c⁄° 
°rög
& 
fmt
, 
uch¨
* 
vec
, 
size_t
 
Àn
 ) const;

4197 * 
ªadObj
() const;

4200 c⁄° 
CvFûeSt‹age
* 
	gfs
;

4201 c⁄° 
CvFûeNode
* 
	gnode
;

4210 ˛as†
	cCV_EXPORTS
 
	gFûeNodeIãøt‹


4212 
	gpublic
:

4214 
FûeNodeIãøt‹
();

4216 
FûeNodeIãøt‹
(c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
node
, 
size_t
 
ofs
=0);

4218 
FûeNodeIãøt‹
(c⁄° FûeNodeIãøt‹& 
ô
);

4220 
FûeNode
 
	g›î©‹
 *() const;

4222 
FûeNode
 
	g›î©‹
 ->() const;

4225 
	gFûeNodeIãøt‹
& 
	g›î©‹
 ++ ();

4227 
FûeNodeIãøt‹
 
	g›î©‹
 ++ ();

4229 
	gFûeNodeIãøt‹
& 
	g›î©‹
 -- ();

4231 
FûeNodeIãøt‹
 
	g›î©‹
 -- ();

4233 
	gFûeNodeIãøt‹
& 
	g›î©‹
 +(
ofs
);

4235 
	gFûeNodeIãøt‹
& 
	g›î©‹
 -(
ofs
);

4238 
	gFûeNodeIãøt‹
& 
ªadRaw
–c⁄° 
°rög
& 
fmt
, 
uch¨
* 
vec
,

4239 
size_t
 
maxCou¡
=(size_t)
INT_MAX
 );

4241 c⁄° 
CvFûeSt‹age
* 
	gfs
;

4242 c⁄° 
CvFûeNode
* 
	gc⁄èöî
;

4243 
CvSeqRódî
 
	gªadî
;

4244 
size_t
 
	gªmaöög
;

4249 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gSeqIãøt‹
;

4251 
	gPå
<
	tCvMemSt‹age
> 
	tMemSt‹age
;

4263 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cSeq


4265 
	gpublic
:

4266 
SeqIãøt‹
<
	t_Tp
> 
	tôî©‹
;

4267 
	gSeqIãøt‹
<
	t_Tp
> 
	tc⁄°_ôî©‹
;

4270 
Seq
();

4272 
Seq
(c⁄° 
CvSeq
* 
£q
);

4274 
Seq
(
MemSt‹age
& 
°‹age
, 
hódîSize
 = (
CvSeq
));

4276 
	g_Tp
& 
	g›î©‹
 [](
	gidx
);

4278 c⁄° 
	g_Tp
& 
	g›î©‹
[](
	gidx
) const;

4280 
	gSeqIãøt‹
<
	g_Tp
> 
begö
() const;

4282 
	gSeqIãøt‹
<
	g_Tp
> 
íd
() const;

4284 
size_t
 
size
() const;

4286 
ty≥
() const;

4288 
dïth
() const;

4290 
ch™√ls
() const;

4292 
size_t
 
ñemSize
() const;

4294 
size_t
 
ödex
(c⁄° 
_Tp
& 
ñem
) const;

4296 
push_back
(c⁄° 
_Tp
& 
ñem
);

4298 
push_‰⁄t
(c⁄° 
_Tp
& 
ñem
);

4300 
push_back
(c⁄° 
_Tp
* 
ñems
, 
size_t
 
cou¡
);

4302 
push_‰⁄t
(c⁄° 
_Tp
* 
ñems
, 
size_t
 
cou¡
);

4304 
ö£π
(
idx
, c⁄° 
_Tp
& 
ñem
);

4306 
ö£π
(
idx
, c⁄° 
_Tp
* 
ñems
, 
size_t
 
cou¡
);

4308 
ªmove
(
idx
);

4310 
ªmove
(c⁄° 
R™ge
& 
r
);

4313 
	g_Tp
& 
‰⁄t
();

4315 c⁄° 
	g_Tp
& 
‰⁄t
() const;

4317 
	g_Tp
& 
back
();

4319 c⁄° 
	g_Tp
& 
back
() const;

4321 
boﬁ
 
em±y
() const;

4324 
˛ór
();

4326 
p›_‰⁄t
();

4328 
p›_back
();

4330 
p›_‰⁄t
(
_Tp
* 
ñems
, 
size_t
 
cou¡
);

4332 
p›_back
(
_Tp
* 
ñems
, 
size_t
 
cou¡
);

4335 
c›yTo
(
ve˘‹
<
_Tp
>& 
vec
, c⁄° 
R™ge
& 
ønge
=R™ge::
Æl
()) const;

4337 
›î©‹
 
	gve˘‹
<
	g_Tp
>() const;

4339 
CvSeq
* 
	g£q
;

4346 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cSeqIãøt‹
 : 
public
 
CvSeqRódî


4348 
public
:

4350 
SeqIãøt‹
();

4352 
SeqIãøt‹
(c⁄° 
Seq
<
_Tp
>& 
£q
, 
boﬁ
 
£ekEnd
=
Ál£
);

4354 
£ek
(
size_t
 
pos
);

4356 
size_t
 
ãŒ
() const;

4358 
	g_Tp
& 
	g›î©‹
 *();

4360 c⁄° 
	g_Tp
& 
	g›î©‹
 *() const;

4362 
	gSeqIãøt‹
& 
	g›î©‹
 ++();

4364 
SeqIãøt‹
 
	g›î©‹
 ++() const;

4366 
	gSeqIãøt‹
& 
	g›î©‹
 --();

4368 
SeqIãøt‹
 
	g›î©‹
 --() const;

4371 
	gSeqIãøt‹
& 
	g›î©‹
 +=();

4373 
	gSeqIãøt‹
& 
	g›î©‹
 -=();

4377 
	gödex
;

4381 
˛ass
 
CV_EXPORTS
 
	gAlg‹ôhm
;

4382 
˛ass
 
CV_EXPORTS
 
	gAlg‹ôhmInfo
;

4383 
CV_EXPORTS
 
	gAlg‹ôhmInfoD©a
;

4385 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	sP¨amTy≥
 {};

4390 ˛as†
	cCV_EXPORTS_W
 
	gAlg‹ôhm


4392 
	gpublic
:

4393 
Alg‹ôhm
();

4394 
	gvútuÆ
 ~
Alg‹ôhm
();

4395 
°rög
 
«me
() const;

4397 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åy≥«mê
	gP¨amTy≥
<_Tp>::
membî_ty≥
 
gë
(c⁄° 
°rög
& 
«me
) const;

4398 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åy≥«mê
	gP¨amTy≥
<_Tp>::
membî_ty≥
 
gë
(c⁄° * 
«me
) const;

4400 
CV_WRAP
 
gëI¡
(c⁄° 
°rög
& 
«me
) const;

4401 
CV_WRAP
 
gëDoubÀ
(c⁄° 
°rög
& 
«me
) const;

4402 
CV_WRAP
 
boﬁ
 
gëBoﬁ
(c⁄° 
°rög
& 
«me
) const;

4403 
CV_WRAP
 
°rög
 
gëSåög
(c⁄° såög& 
«me
) const;

4404 
CV_WRAP
 
M©
 
gëM©
(c⁄° 
°rög
& 
«me
) const;

4405 
CV_WRAP
 
	gve˘‹
<
	gM©
> 
gëM©Ve˘‹
(c⁄° 
°rög
& 
«me
) const;

4406 
CV_WRAP
 
	gPå
<
	gAlg‹ôhm
> 
gëAlg‹ôhm
(c⁄° 
°rög
& 
«me
) const;

4408 
£t
(c⁄° 
°rög
& 
«me
, 
vÆue
);

4409 
£t
(c⁄° 
°rög
& 
«me
, 
vÆue
);

4410 
£t
(c⁄° 
°rög
& 
«me
, 
boﬁ
 
vÆue
);

4411 
£t
(c⁄° 
°rög
& 
«me
, c⁄° såög& 
vÆue
);

4412 
£t
(c⁄° 
°rög
& 
«me
, c⁄° 
M©
& 
vÆue
);

4413 
£t
(c⁄° 
°rög
& 
«me
, c⁄° 
ve˘‹
<
M©
>& 
vÆue
);

4414 
£t
(c⁄° 
°rög
& 
«me
, c⁄° 
På
<
Alg‹ôhm
>& 
vÆue
);

4415 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
£t
(c⁄° 
°rög
& 
«me
, c⁄° 
På
<
_Tp
>& 
vÆue
);

4417 
CV_WRAP
 
£tI¡
(c⁄° 
°rög
& 
«me
, 
vÆue
);

4418 
CV_WRAP
 
£tDoubÀ
(c⁄° 
°rög
& 
«me
, 
vÆue
);

4419 
CV_WRAP
 
£tBoﬁ
(c⁄° 
°rög
& 
«me
, 
boﬁ
 
vÆue
);

4420 
CV_WRAP
 
£tSåög
(c⁄° 
°rög
& 
«me
, c⁄° såög& 
vÆue
);

4421 
CV_WRAP
 
£tM©
(c⁄° 
°rög
& 
«me
, c⁄° 
M©
& 
vÆue
);

4422 
CV_WRAP
 
£tM©Ve˘‹
(c⁄° 
°rög
& 
«me
, c⁄° 
ve˘‹
<
M©
>& 
vÆue
);

4423 
CV_WRAP
 
£tAlg‹ôhm
(c⁄° 
°rög
& 
«me
, c⁄° 
På
<
Alg‹ôhm
>& 
vÆue
);

4424 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
£tAlg‹ôhm
(c⁄° 
°rög
& 
«me
, c⁄° 
På
<
_Tp
>& 
vÆue
);

4426 
£t
(c⁄° * 
«me
, 
vÆue
);

4427 
£t
(c⁄° * 
«me
, 
vÆue
);

4428 
£t
(c⁄° * 
«me
, 
boﬁ
 
vÆue
);

4429 
£t
(c⁄° * 
«me
, c⁄° 
°rög
& 
vÆue
);

4430 
£t
(c⁄° * 
«me
, c⁄° 
M©
& 
vÆue
);

4431 
£t
(c⁄° * 
«me
, c⁄° 
ve˘‹
<
M©
>& 
vÆue
);

4432 
£t
(c⁄° * 
«me
, c⁄° 
På
<
Alg‹ôhm
>& 
vÆue
);

4433 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
£t
(c⁄° * 
«me
, c⁄° 
På
<
_Tp
>& 
vÆue
);

4435 
£tI¡
(c⁄° * 
«me
, 
vÆue
);

4436 
£tDoubÀ
(c⁄° * 
«me
, 
vÆue
);

4437 
£tBoﬁ
(c⁄° * 
«me
, 
boﬁ
 
vÆue
);

4438 
£tSåög
(c⁄° * 
«me
, c⁄° 
°rög
& 
vÆue
);

4439 
£tM©
(c⁄° * 
«me
, c⁄° 
M©
& 
vÆue
);

4440 
£tM©Ve˘‹
(c⁄° * 
«me
, c⁄° 
ve˘‹
<
M©
>& 
vÆue
);

4441 
£tAlg‹ôhm
(c⁄° * 
«me
, c⁄° 
På
<
Alg‹ôhm
>& 
vÆue
);

4442 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
£tAlg‹ôhm
(c⁄° * 
«me
, c⁄° 
På
<
_Tp
>& 
vÆue
);

4444 
CV_WRAP
 
°rög
 
∑ømHñp
(c⁄° såög& 
«me
) const;

4445 
∑ømTy≥
(c⁄° * 
«me
) const;

4446 
CV_WRAP
 
∑ømTy≥
(c⁄° 
°rög
& 
«me
) const;

4447 
CV_WRAP
 
gëP¨ams
(
CV_OUT
 
ve˘‹
<
°rög
>& 
«mes
) const;

4450 
vútuÆ
 
wrôe
(
FûeSt‹age
& 
fs
) const;

4451 
vútuÆ
 
ªad
(c⁄° 
FûeNode
& 
‚
);

4453 
	gAlg‹ôhm
* (*
	tC⁄°ru˘‹
)();

4454 (
	gAlg‹ôhm
::*
	tGëãr
)() const;

4455 (
	gAlg‹ôhm
::*
	tSëãr
)();

4457 
CV_WRAP
 
gëLi°
(
CV_OUT
 
ve˘‹
<
°rög
>& 
Æg‹ôhms
);

4458 
CV_WRAP
 
	gPå
<
	gAlg‹ôhm
> 
_¸óã
(c⁄° 
°rög
& 
«me
);

4459 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gPå
<_Tp> 
¸óã
(c⁄° 
°rög
& 
«me
);

4461 
vútuÆ
 
Alg‹ôhmInfo
* 
öfo
() const {  0; }

4465 ˛as†
	cCV_EXPORTS
 
	gAlg‹ôhmInfo


4467 
	gpublic
:

4468 
‰õnd
 
˛ass
 
Alg‹ôhm
;

4469 
Alg‹ôhmInfo
(c⁄° 
°rög
& 
«me
, 
Alg‹ôhm
::
C⁄°ru˘‹
 
¸óã
);

4470 ~
Alg‹ôhmInfo
();

4471 
gë
(c⁄° 
Alg‹ôhm
* 
Ægo
, c⁄° * 
«me
, 
¨gTy≥
, * 
vÆue
) const;

4472 
addP¨am_
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
, 
¨gTy≥
,

4473 * 
vÆue
, 
boﬁ
 
ªadO∆y
,

4474 
Alg‹ôhm
::
Gëãr
 
gëãr
, Alg‹ôhm::
Sëãr
 
£âî
,

4475 c⁄° 
°rög
& 
hñp
=string());

4476 
°rög
 
∑ømHñp
(c⁄° * 
«me
) const;

4477 
∑ømTy≥
(c⁄° * 
«me
) const;

4478 
gëP¨ams
(
ve˘‹
<
°rög
>& 
«mes
) const;

4480 
wrôe
(c⁄° 
Alg‹ôhm
* 
Ægo
, 
FûeSt‹age
& 
fs
) const;

4481 
ªad
(
Alg‹ôhm
* 
Ægo
, c⁄° 
FûeNode
& 
‚
) const;

4482 
°rög
 
«me
() const;

4484 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4485 & 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4486 (
Alg‹ôhm
::*
gëãr
)()=0,

4487 (
Alg‹ôhm
::*
£âî
)()=0,

4488 c⁄° 
°rög
& 
hñp
=string());

4489 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4490 & 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4491 (
Alg‹ôhm
::*
gëãr
)()=0,

4492 (
Alg‹ôhm
::*
£âî
)()=0,

4493 c⁄° 
°rög
& 
hñp
=string());

4494 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4495 
boﬁ
& 
vÆue
, boﬁ 
ªadO∆y
=
Ál£
,

4496 (
Alg‹ôhm
::*
gëãr
)()=0,

4497 (
Alg‹ôhm
::*
£âî
)()=0,

4498 c⁄° 
°rög
& 
hñp
=string());

4499 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4500 & 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4501 (
Alg‹ôhm
::*
gëãr
)()=0,

4502 (
Alg‹ôhm
::*
£âî
)()=0,

4503 c⁄° 
°rög
& 
hñp
=string());

4504 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4505 
°rög
& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4506 
°rög
 (
Alg‹ôhm
::*
gëãr
)()=0,

4507 (
Alg‹ôhm
::*
£âî
)(c⁄° 
°rög
&)=0,

4508 c⁄° 
°rög
& 
hñp
=string());

4509 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4510 
M©
& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4511 
M©
 (
Alg‹ôhm
::*
gëãr
)()=0,

4512 (
Alg‹ôhm
::*
£âî
)(c⁄° 
M©
&)=0,

4513 c⁄° 
°rög
& 
hñp
=string());

4514 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4515 
ve˘‹
<
M©
>& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4516 
ve˘‹
<
M©
> (
Alg‹ôhm
::*
gëãr
)()=0,

4517 (
Alg‹ôhm
::*
£âî
)(c⁄° 
ve˘‹
<
M©
>&)=0,

4518 c⁄° 
°rög
& 
hñp
=string());

4519 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4520 
På
<
Alg‹ôhm
>& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4521 
På
<
Alg‹ôhm
> (Alg‹ôhm::*
gëãr
)()=0,

4522 (
Alg‹ôhm
::*
£âî
)(c⁄° 
På
<Algorithm>&)=0,

4523 c⁄° 
°rög
& 
hñp
=string());

4524 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4525 & 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4526 (
Alg‹ôhm
::*
gëãr
)()=0,

4527 (
Alg‹ôhm
::*
£âî
)()=0,

4528 c⁄° 
°rög
& 
hñp
=string());

4529 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4530 & 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4531 (
Alg‹ôhm
::*
gëãr
)()=0,

4532 (
Alg‹ôhm
::*
£âî
)()=0,

4533 c⁄° 
°rög
& 
hñp
=string());

4534 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4535 
uöt64
& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4536 
uöt64
 (
Alg‹ôhm
::*
gëãr
)()=0,

4537 (
Alg‹ôhm
::*
£âî
)(
uöt64
)=0,

4538 c⁄° 
°rög
& 
hñp
=string());

4539 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4540 
uch¨
& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4541 
uch¨
 (
Alg‹ôhm
::*
gëãr
)()=0,

4542 (
Alg‹ôhm
::*
£âî
)(
uch¨
)=0,

4543 c⁄° 
°rög
& 
hñp
=string());

4544 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_Ba£
> 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4545 
På
<
_Tp
>& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4546 
På
<
_Tp
> (
Alg‹ôhm
::*
gëãr
)()=0,

4547 (
Alg‹ôhm
::*
£âî
)(c⁄° 
På
<
_Tp
>&)=0,

4548 c⁄° 
°rög
& 
hñp
=string());

4549 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4550 
På
<
_Tp
>& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4551 
På
<
_Tp
> (
Alg‹ôhm
::*
gëãr
)()=0,

4552 (
Alg‹ôhm
::*
£âî
)(c⁄° 
På
<
_Tp
>&)=0,

4553 c⁄° 
°rög
& 
hñp
=string());

4554 
	g¥Ÿe˘ed
:

4555 
Alg‹ôhmInfoD©a
* 
d©a
;

4556 
£t
(
Alg‹ôhm
* 
Ægo
, c⁄° * 
«me
, 
¨gTy≥
,

4557 c⁄° * 
vÆue
, 
boﬁ
 
f‹˚
=
Ál£
) const;

4561 
CV_EXPORTS
 
	gP¨am


4563 íum { 
	gINT
=0, 
	gBOOLEAN
=1, 
	gREAL
=2, 
	gSTRING
=3, 
	gMAT
=4, 
	gMAT_VECTOR
=5, 
	gALGORITHM
=6, 
	gFLOAT
=7, 
	gUNSIGNED_INT
=8, 
	gUINT64
=9, 
	gSHORT
=10, 
	gUCHAR
=11 };

4565 
P¨am
();

4566 
P¨am
(
_ty≥
, 
boﬁ
 
_ªad⁄ly
, 
_off£t
,

4567 
Alg‹ôhm
::
Gëãr
 
_gëãr
=0,

4568 
Alg‹ôhm
::
Sëãr
 
_£âî
=0,

4569 c⁄° 
°rög
& 
_hñp
=string());

4570 
	gty≥
;

4571 
	goff£t
;

4572 
boﬁ
 
	gªad⁄ly
;

4573 
	gAlg‹ôhm
::
Gëãr
 
gëãr
;

4574 
	gAlg‹ôhm
::
Sëãr
 
£âî
;

4575 
°rög
 
	ghñp
;

4578 
	gãm∂©e
<> 
	gP¨amTy≥
<
	gboﬁ
>

4580 
boﬁ
 
	tc⁄°_∑øm_ty≥
;

4581 
boﬁ
 
	tmembî_ty≥
;

4583 íum { 
	gty≥
 = 
P¨am
::
BOOLEAN
 };

4586 
	gãm∂©e
<> 
	gP¨amTy≥
<>

4588 
	tc⁄°_∑øm_ty≥
;

4589 
	tmembî_ty≥
;

4591 íum { 
	gty≥
 = 
P¨am
::
INT
 };

4594 
	gãm∂©e
<> 
	gP¨amTy≥
<>

4596 
	tc⁄°_∑øm_ty≥
;

4597 
	tmembî_ty≥
;

4599 íum { 
	gty≥
 = 
P¨am
::
SHORT
 };

4602 
	gãm∂©e
<> 
	gP¨amTy≥
<>

4604 
	tc⁄°_∑øm_ty≥
;

4605 
	tmembî_ty≥
;

4607 íum { 
	gty≥
 = 
P¨am
::
REAL
 };

4610 
	gãm∂©e
<> 
	gP¨amTy≥
<
	g°rög
>

4612 c⁄° 
	t°rög
& 
	tc⁄°_∑øm_ty≥
;

4613 
°rög
 
	tmembî_ty≥
;

4615 íum { 
	gty≥
 = 
P¨am
::
STRING
 };

4618 
	gãm∂©e
<> 
	gP¨amTy≥
<
	gM©
>

4620 c⁄° 
	tM©
& 
	tc⁄°_∑øm_ty≥
;

4621 
M©
 
	tmembî_ty≥
;

4623 íum { 
	gty≥
 = 
P¨am
::
MAT
 };

4626 
	gãm∂©e
<> 
	gP¨amTy≥
<
	gve˘‹
<
	gM©
> >

4628 c⁄° 
	tve˘‹
<
	tM©
>& 
	tc⁄°_∑øm_ty≥
;

4629 
	gve˘‹
<
	tM©
> 
	tmembî_ty≥
;

4631 íum { 
	gty≥
 = 
P¨am
::
MAT_VECTOR
 };

4634 
	gãm∂©e
<> 
	gP¨amTy≥
<
	gAlg‹ôhm
>

4636 c⁄° 
	tPå
<
	tAlg‹ôhm
>& 
	tc⁄°_∑øm_ty≥
;

4637 
	gPå
<
	tAlg‹ôhm
> 
	tmembî_ty≥
;

4639 íum { 
	gty≥
 = 
P¨am
::
ALGORITHM
 };

4642 
	gãm∂©e
<> 
	gP¨amTy≥
<>

4644 
	tc⁄°_∑øm_ty≥
;

4645 
	tmembî_ty≥
;

4647 íum { 
	gty≥
 = 
P¨am
::
FLOAT
 };

4650 
	gãm∂©e
<> 
	gP¨amTy≥
<>

4652 
	tc⁄°_∑øm_ty≥
;

4653 
	tmembî_ty≥
;

4655 íum { 
	gty≥
 = 
P¨am
::
UNSIGNED_INT
 };

4658 
	gãm∂©e
<> 
	gP¨amTy≥
<
	guöt64
>

4660 
uöt64
 
	tc⁄°_∑øm_ty≥
;

4661 
uöt64
 
	tmembî_ty≥
;

4663 íum { 
	gty≥
 = 
P¨am
::
UINT64
 };

4666 
	gãm∂©e
<> 
	gP¨amTy≥
<
	guch¨
>

4668 
uch¨
 
	tc⁄°_∑øm_ty≥
;

4669 
uch¨
 
	tmembî_ty≥
;

4671 íum { 
	gty≥
 = 
P¨am
::
UCHAR
 };

4715 ˛as†
	cCV_EXPORTS
 
	gComm™dLöeP¨£r


4717 
	gpublic
:

4720 
Comm™dLöeP¨£r
(
¨gc
, c⁄° * c⁄° 
¨gv
[], c⁄° * 
key_m≠
);

4723 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

4724 
_Tp
 
gë
(c⁄° 
°d
::
°rög
& 
«me
, 
boﬁ
 
•a˚_dñëe
=
åue
)

4726 i‡(!
has
(
«me
))

4728  
_Tp
();

4730 
	g°d
::
°rög
 
°r
 = 
gëSåög
(
«me
);

4731  
	g™ÆyzeVÆue
<
	g_Tp
>(
	g°r
, 
	g•a˚_dñëe
);

4735 
¥ötP¨ams
();

4737 
	g¥Ÿe˘ed
:

4738 
°d
::
m≠
<°d::
°rög
, 
	g°d
::
ve˘‹
<°d::°rög> > 
d©a
;

4739 
	g°d
::
°rög
 
gëSåög
(c⁄° 
°d
::°rög& 
«me
);

4741 
boﬁ
 
has
(c⁄° 
°d
::
°rög
& 
keys
);

4743 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

4744 
_Tp
 
™ÆyzeVÆue
(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
•a˚_dñëe
=
Ál£
);

4746 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

4747 
_Tp
 
gëD©a
(c⁄° 
°d
::
°rög
& 
°r
)

4749 
_Tp
 
ªs
 = _Tp();

4750 
	g°d
::
°rög°ªam
 
s1
(
°r
);

4751 
	gs1
 >> 
	gªs
;

4752  
	gªs
;

4755 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

4756 
_Tp
 
‰omSåögNumbî
(c⁄° 
°d
::
°rög
& 
°r
);

4760 
	gãm∂©e
<> 
CV_EXPORTS


4761 
boﬁ
 
	gComm™dLöeP¨£r
::
gë
<boﬁ>(c⁄° 
°d
::
°rög
& 
«me
, boﬁ 
	g•a˚_dñëe
);

4763 
	gãm∂©e
<> 
CV_EXPORTS


4764 
	g°d
::
°rög
 
Comm™dLöeP¨£r
::
™ÆyzeVÆue
<
°d
::°rög>(c⁄° std::°rög& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4766 
	gãm∂©e
<> 
CV_EXPORTS


4767 
	gComm™dLöeP¨£r
::
™ÆyzeVÆue
<>(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4769 
	gãm∂©e
<> 
CV_EXPORTS


4770 
	gComm™dLöeP¨£r
::
™ÆyzeVÆue
<>(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4772 
	gãm∂©e
<> 
CV_EXPORTS


4773 
uöt64
 
	gComm™dLöeP¨£r
::
™ÆyzeVÆue
<uöt64>(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4775 
	gãm∂©e
<> 
CV_EXPORTS


4776 
	gComm™dLöeP¨£r
::
™ÆyzeVÆue
<>(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4778 
	gãm∂©e
<> 
CV_EXPORTS


4779 
	gComm™dLöeP¨£r
::
™ÆyzeVÆue
<>(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4785 ˛as†
	cCV_EXPORTS
 
	gP¨ÆÀlLo›Body


4787 
	gpublic
:

4788 
vútuÆ
 ~
P¨ÆÀlLo›Body
();

4789 
vútuÆ
 
›î©‹
(Ë(c⁄° 
	gR™ge
& 
	gønge
) const = 0;

4792 
CV_EXPORTS
 
∑øŒñ_f‹_
(c⁄° 
R™ge
& 
ønge
, c⁄° 
P¨ÆÀlLo›Body
& 
body
, 
n°rùes
=-1.);

4796 ˛as†
	cCV_EXPORTS
 
	gMuãx


4798 
	gpublic
:

4799 
Muãx
();

4800 ~
Muãx
();

4801 
Muãx
(c⁄° Muãx& 
m
);

4802 
	gMuãx
& 
	g›î©‹
 = (c⁄° 
Muãx
& 
m
);

4804 
lock
();

4805 
boﬁ
 
åylock
();

4806 
u∆ock
();

4808 
	gIm∂
;

4809 
	g¥Ÿe˘ed
:

4810 
Im∂
* 
im∂
;

4813 ˛as†
	cCV_EXPORTS
 
	gAutoLock


4815 
	gpublic
:

4816 
AutoLock
(
Muãx
& 
m
Ë: 
muãx
(&mË{ muãx->
lock
(); }

4817 ~
AutoLock
(Ë{ 
	gmuãx
->
u∆ock
(); }

4818 
	g¥Ÿe˘ed
:

4819 
Muãx
* 
muãx
;

4820 
	g¥iv©e
:

4821 
AutoLock
(const AutoLock&);

4822 
	gAutoLock
& 
	g›î©‹
 = (c⁄° 
AutoLock
&);

4825 ˛as†
	cTLSD©aC⁄èöî


4827 
	g¥iv©e
:

4828 
key_
;

4829 
	g¥Ÿe˘ed
:

4830 
CV_EXPORTS
 
TLSD©aC⁄èöî
();

4831 
	gCV_EXPORTS
 ~
TLSD©aC⁄èöî
();

4832 
	gpublic
:

4833 
vútuÆ
 * 
¸óãD©aIn°™˚
() const = 0;

4834 
vútuÆ
 
dñëeD©aIn°™˚
(* 
d©a
) const = 0;

4836 
CV_EXPORTS
 * 
gëD©a
() const;

4839 
	gãm∂©e
 <
ty≥«me
 
	gT
>

4840 ˛as†
	cTLSD©a
 : 
¥Ÿe˘ed
 
TLSD©aC⁄èöî


4842 
public
:

4843 
ölöe
 
TLSD©a
() {}

4844 
ölöe
 ~
TLSD©a
() {}

4845 
ölöe
 
T
* 
gë
(Ëc⁄° {  (T*)
gëD©a
(); }

4846 
	g¥iv©e
:

4847 
vútuÆ
 * 
¸óãD©aIn°™˚
(Ëc⁄° {  
√w
 
T
; }

4848 
vútuÆ
 
dñëeD©aIn°™˚
(* 
d©a
Ëc⁄° { 
dñëe
 (
T
*)
	gd©a
; }

4855 
	~"›ícv2/c‹e/›î©i⁄s.hµ
"

4856 
	~"›ícv2/c‹e/m©.hµ
"

	@/usr/include/opencv2/highgui/highgui_c.h

42 #i‚de‡
__OPENCV_HIGHGUI_H__


43 
	#__OPENCV_HIGHGUI_H__


	)

45 
	~"›ícv2/c‹e/c‹e_c.h
"

47 #ifde‡
__˝lu•lus


57 íum { 
CV_FONT_LIGHT
 = 25,

58 
CV_FONT_NORMAL
 = 50,

59 
CV_FONT_DEMIBOLD
 = 63,

60 
CV_FONT_BOLD
 = 75,

61 
CV_FONT_BLACK
 = 87

64 íum { 
CV_STYLE_NORMAL
 = 0,

65 
CV_STYLE_ITALIC
 = 1,

66 
CV_STYLE_OBLIQUE
 = 2

72 
CVAPI
(
CvF⁄t
Ë
cvF⁄tQt
(c⁄° * 
«meF⁄t
, 
poötSize
 
CV_DEFAULT
(-1), 
CvSˇœr
 
cﬁ‹
 CV_DEFAULT(
cvSˇœrAŒ
(0)), 
weight
 CV_DEFAULT(
CV_FONT_NORMAL
), 
°yÀ
 CV_DEFAULT(
CV_STYLE_NORMAL
), 
•acög
 CV_DEFAULT(0));

74 
CVAPI
(Ë
cvAddText
(c⁄° 
CvAº
* 
img
, c⁄° * 
ãxt
, 
CvPoöt
 
‹g
, 
CvF⁄t
 *
¨g2
);

76 
CVAPI
(Ë
cvDi•œyOvîœy
(c⁄° * 
«me
, c⁄° * 
ãxt
, 
dñayms
 
CV_DEFAULT
(0));

77 
CVAPI
(Ë
cvDi•œySètusB¨
(c⁄° * 
«me
, c⁄° * 
ãxt
, 
dñayms
 
CV_DEFAULT
(0));

79 
CVAPI
(Ë
cvSaveWödowP¨amëîs
(c⁄° * 
«me
);

80 
CVAPI
(Ë
cvLﬂdWödowP¨amëîs
(c⁄° * 
«me
);

81 
CVAPI
(Ë
cvSèπLo›
((*
±2Func
)(
¨gc
, *
¨gv
[]), argc, *árgv[]);

82 
CVAPI
(Ë
cvSt›Lo›
( );

84 (
CV_CDECL
 *
	tCvBuâ⁄CÆlback
)(
	t°©e
, * 
	tu£rd©a
);

85 íum {
CV_PUSH_BUTTON
 = 0, 
CV_CHECKBOX
 = 1, 
CV_RADIOBOX
 = 2};

86 
CVAPI
(Ë
cvCª©eBuâ⁄
–c⁄° * 
buâ⁄_«me
 
CV_DEFAULT
(
NULL
),
CvBuâ⁄CÆlback
 
⁄_ch™ge
 CV_DEFAULT(NULL), * 
u£rd©a
 CV_DEFAULT(NULLË, 
buâ⁄_ty≥
 CV_DEFAULT(
CV_PUSH_BUTTON
), 
öôül_buâ⁄_°©e
 CV_DEFAULT(0));

91 
CVAPI
(Ë
cvInôSy°em
–
¨gc
, ** 
¨gv
 );

93 
CVAPI
(Ë
cvSèπWödowThªad
( );

99 
CV_WND_PROP_FULLSCREEN
 = 0,

100 
CV_WND_PROP_AUTOSIZE
 = 1,

101 
CV_WND_PROP_ASPECTRATIO
= 2,

102 
CV_WND_PROP_OPENGL
 = 3,

105 
CV_WINDOW_NORMAL
 = 0x00000000,

106 
CV_WINDOW_AUTOSIZE
 = 0x00000001,

107 
CV_WINDOW_OPENGL
 = 0x00001000,

110 
CV_GUI_EXPANDED
 = 0x00000000,

111 
CV_GUI_NORMAL
 = 0x00000010,

114 
CV_WINDOW_FULLSCREEN
 = 1,

115 
CV_WINDOW_FREERATIO
 = 0x00000100,

116 
CV_WINDOW_KEEPRATIO
 = 0x00000000

120 
CVAPI
(Ë
cvNamedWödow
–c⁄° * 
«me
, 
Êags
 
CV_DEFAULT
(
CV_WINDOW_AUTOSIZE
) );

123 
CVAPI
(Ë
cvSëWödowPr›îty
(c⁄° * 
«me
, 
¥›_id
, 
¥›_vÆue
);

124 
CVAPI
(Ë
cvGëWödowPr›îty
(c⁄° * 
«me
, 
¥›_id
);

127 
CVAPI
(Ë
cvShowImage
–c⁄° * 
«me
, c⁄° 
CvAº
* 
image
 );

130 
CVAPI
(Ë
cvResizeWödow
–c⁄° * 
«me
, 
width
, 
height
 );

131 
CVAPI
(Ë
cvMoveWödow
–c⁄° * 
«me
, 
x
, 
y
 );

135 
CVAPI
(Ë
cvDe°royWödow
–c⁄° * 
«me
 );

137 
CVAPI
(Ë
cvDe°royAŒWödows
();

140 
CVAPI
(*Ë
cvGëWödowH™dÀ
–c⁄° * 
«me
 );

143 
CVAPI
(c⁄° *Ë
cvGëWödowName
–* 
wödow_h™dÀ
 );

146 (
CV_CDECL
 *
	tCvTøckb¨CÆlback
)(
	tpos
);

149 
CVAPI
(Ë
cvCª©eTøckb¨
–c⁄° * 
åackb¨_«me
, c⁄° * 
wödow_«me
,

150 * 
vÆue
, 
cou¡
, 
CvTøckb¨CÆlback
 
⁄_ch™ge
 
CV_DEFAULT
(
NULL
));

152 (
CV_CDECL
 *
	tCvTøckb¨CÆlback2
)(
	tpos
, * 
	tu£rd©a
);

154 
CVAPI
(Ë
cvCª©eTøckb¨2
–c⁄° * 
åackb¨_«me
, c⁄° * 
wödow_«me
,

155 * 
vÆue
, 
cou¡
, 
CvTøckb¨CÆlback2
 
⁄_ch™ge
,

156 * 
u£rd©a
 
CV_DEFAULT
(0));

159 
CVAPI
(Ë
cvGëTøckb¨Pos
–c⁄° * 
åackb¨_«me
, c⁄° * 
wödow_«me
 );

160 
CVAPI
(Ë
cvSëTøckb¨Pos
–c⁄° * 
åackb¨_«me
, c⁄° * 
wödow_«me
, 
pos
 );

164 
CV_EVENT_MOUSEMOVE
 =0,

165 
CV_EVENT_LBUTTONDOWN
 =1,

166 
CV_EVENT_RBUTTONDOWN
 =2,

167 
CV_EVENT_MBUTTONDOWN
 =3,

168 
CV_EVENT_LBUTTONUP
 =4,

169 
CV_EVENT_RBUTTONUP
 =5,

170 
CV_EVENT_MBUTTONUP
 =6,

171 
CV_EVENT_LBUTTONDBLCLK
 =7,

172 
CV_EVENT_RBUTTONDBLCLK
 =8,

173 
CV_EVENT_MBUTTONDBLCLK
 =9

178 
CV_EVENT_FLAG_LBUTTON
 =1,

179 
CV_EVENT_FLAG_RBUTTON
 =2,

180 
CV_EVENT_FLAG_MBUTTON
 =4,

181 
CV_EVENT_FLAG_CTRLKEY
 =8,

182 
CV_EVENT_FLAG_SHIFTKEY
 =16,

183 
CV_EVENT_FLAG_ALTKEY
 =32

186 (
CV_CDECL
 *
	tCvMou£CÆlback
 )(
	tevít
, 
	tx
, 
	ty
, 
	tÊags
, * 
	t∑øm
);

189 
CVAPI
(Ë
cvSëMou£CÆlback
–c⁄° * 
wödow_«me
, 
CvMou£CÆlback
 
⁄_mou£
,

190 * 
∑øm
 
CV_DEFAULT
(
NULL
));

195 
CV_LOAD_IMAGE_UNCHANGED
 =-1,

197 
CV_LOAD_IMAGE_GRAYSCALE
 =0,

199 
CV_LOAD_IMAGE_COLOR
 =1,

201 
CV_LOAD_IMAGE_ANYDEPTH
 =2,

203 
CV_LOAD_IMAGE_ANYCOLOR
 =4

212 
CVAPI
(
I∂Image
*Ë
cvLﬂdImage
–c⁄° * 
fûíame
, 
iscﬁ‹
 
CV_DEFAULT
(
CV_LOAD_IMAGE_COLOR
));

213 
CVAPI
(
CvM©
*Ë
cvLﬂdImageM
–c⁄° * 
fûíame
, 
iscﬁ‹
 
CV_DEFAULT
(
CV_LOAD_IMAGE_COLOR
));

217 
CV_IMWRITE_JPEG_QUALITY
 =1,

218 
CV_IMWRITE_PNG_COMPRESSION
 =16,

219 
CV_IMWRITE_PNG_STRATEGY
 =17,

220 
CV_IMWRITE_PNG_BILEVEL
 =18,

221 
CV_IMWRITE_PNG_STRATEGY_DEFAULT
 =0,

222 
CV_IMWRITE_PNG_STRATEGY_FILTERED
 =1,

223 
CV_IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY
 =2,

224 
CV_IMWRITE_PNG_STRATEGY_RLE
 =3,

225 
CV_IMWRITE_PNG_STRATEGY_FIXED
 =4,

226 
CV_IMWRITE_PXM_BINARY
 =32

230 
CVAPI
(Ë
cvSaveImage
–c⁄° * 
fûíame
, c⁄° 
CvAº
* 
image
,

231 c⁄° * 
∑øms
 
CV_DEFAULT
(0) );

234 
CVAPI
(
I∂Image
*Ë
cvDecodeImage
–c⁄° 
CvM©
* 
buf
, 
iscﬁ‹
 
CV_DEFAULT
(
CV_LOAD_IMAGE_COLOR
));

235 
CVAPI
(
CvM©
*Ë
cvDecodeImageM
–c⁄° CvM©* 
buf
, 
iscﬁ‹
 
CV_DEFAULT
(
CV_LOAD_IMAGE_COLOR
));

238 
CVAPI
(
CvM©
*Ë
cvEncodeImage
–c⁄° * 
ext
, c⁄° 
CvAº
* 
image
,

239 c⁄° * 
∑øms
 
CV_DEFAULT
(0) );

243 
CV_CVTIMG_FLIP
 =1,

244 
CV_CVTIMG_SWAP_RB
 =2

248 
CVAPI
(Ë
cvC⁄vîtImage
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
Êags
 
CV_DEFAULT
(0));

251 
CVAPI
(Ë
cvWaôKey
(
dñay
 
CV_DEFAULT
(0));

255 (
CV_CDECL
 *
	tCvO≥nGlDøwCÆlback
)(* 
	tu£rd©a
);

256 
CVAPI
(Ë
cvSëO≥nGlDøwCÆlback
(c⁄° * 
wödow_«me
, 
CvO≥nGlDøwCÆlback
 
ˇŒback
, * 
u£rd©a
 
CV_DEFAULT
(
NULL
));

258 
CVAPI
(Ë
cvSëO≥nGlC⁄ãxt
(c⁄° * 
wödow_«me
);

259 
CVAPI
(Ë
cvUpd©eWödow
(c⁄° * 
wödow_«me
);

267 
CvC≠tuª
 
	tCvC≠tuª
;

270 
CVAPI
(
CvC≠tuª
*Ë
cvCª©eFûeC≠tuª
–c⁄° * 
fûíame
 );

274 
CV_CAP_ANY
 =0,

276 
CV_CAP_MIL
 =100,

278 
CV_CAP_VFW
 =200,

279 
CV_CAP_V4L
 =200,

280 
CV_CAP_V4L2
 =200,

282 
CV_CAP_FIREWARE
 =300,

283 
CV_CAP_FIREWIRE
 =300,

284 
CV_CAP_IEEE1394
 =300,

285 
CV_CAP_DC1394
 =300,

286 
CV_CAP_CMU1394
 =300,

288 
CV_CAP_STEREO
 =400,

289 
CV_CAP_TYZX
 =400,

290 
CV_TYZX_LEFT
 =400,

291 
CV_TYZX_RIGHT
 =401,

292 
CV_TYZX_COLOR
 =402,

293 
CV_TYZX_Z
 =403,

295 
CV_CAP_QT
 =500,

297 
CV_CAP_UNICAP
 =600,

299 
CV_CAP_DSHOW
 =700,

300 
CV_CAP_MSMF
 =1400,

302 
CV_CAP_PVAPI
 =800,

304 
CV_CAP_OPENNI
 =900,

305 
CV_CAP_OPENNI_ASUS
 =910,

307 
CV_CAP_ANDROID
 =1000,

308 
CV_CAP_ANDROID_BACK
 =
CV_CAP_ANDROID
+99,

309 
CV_CAP_ANDROID_FRONT
 =
CV_CAP_ANDROID
+98,

311 
CV_CAP_XIAPI
 =1100,

313 
CV_CAP_AVFOUNDATION
 = 1200,

315 
CV_CAP_GIGANETIX
 = 1300,

317 
CV_CAP_INTELPERC
 = 1500

321 
CVAPI
(
CvC≠tuª
*Ë
cvCª©eCamîaC≠tuª
–
ödex
 );

325 
CVAPI
(Ë
cvGøbFøme
–
CvC≠tuª
* 
ˇ±uª
 );

331 
CVAPI
(
I∂Image
*Ë
cvRërõveFøme
–
CvC≠tuª
* 
ˇ±uª
, 
°ªamIdx
 
CV_DEFAULT
(0) );

335 
CVAPI
(
I∂Image
*Ë
cvQuîyFøme
–
CvC≠tuª
* 
ˇ±uª
 );

338 
CVAPI
(Ë
cvRñó£C≠tuª
–
CvC≠tuª
** 
ˇ±uª
 );

344 
CV_CAP_PROP_DC1394_OFF
 = -4,

345 
CV_CAP_PROP_DC1394_MODE_MANUAL
 = -3,

346 
CV_CAP_PROP_DC1394_MODE_AUTO
 = -2,

347 
CV_CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO
 = -1,

348 
CV_CAP_PROP_POS_MSEC
 =0,

349 
CV_CAP_PROP_POS_FRAMES
 =1,

350 
CV_CAP_PROP_POS_AVI_RATIO
 =2,

351 
CV_CAP_PROP_FRAME_WIDTH
 =3,

352 
CV_CAP_PROP_FRAME_HEIGHT
 =4,

353 
CV_CAP_PROP_FPS
 =5,

354 
CV_CAP_PROP_FOURCC
 =6,

355 
CV_CAP_PROP_FRAME_COUNT
 =7,

356 
CV_CAP_PROP_FORMAT
 =8,

357 
CV_CAP_PROP_MODE
 =9,

358 
CV_CAP_PROP_BRIGHTNESS
 =10,

359 
CV_CAP_PROP_CONTRAST
 =11,

360 
CV_CAP_PROP_SATURATION
 =12,

361 
CV_CAP_PROP_HUE
 =13,

362 
CV_CAP_PROP_GAIN
 =14,

363 
CV_CAP_PROP_EXPOSURE
 =15,

364 
CV_CAP_PROP_CONVERT_RGB
 =16,

365 
CV_CAP_PROP_WHITE_BALANCE_BLUE_U
 =17,

366 
CV_CAP_PROP_RECTIFICATION
 =18,

367 
CV_CAP_PROP_MONOCROME
 =19,

368 
CV_CAP_PROP_SHARPNESS
 =20,

369 
CV_CAP_PROP_AUTO_EXPOSURE
 =21,

372 
CV_CAP_PROP_GAMMA
 =22,

373 
CV_CAP_PROP_TEMPERATURE
 =23,

374 
CV_CAP_PROP_TRIGGER
 =24,

375 
CV_CAP_PROP_TRIGGER_DELAY
 =25,

376 
CV_CAP_PROP_WHITE_BALANCE_RED_V
 =26,

377 
CV_CAP_PROP_ZOOM
 =27,

378 
CV_CAP_PROP_FOCUS
 =28,

379 
CV_CAP_PROP_GUID
 =29,

380 
CV_CAP_PROP_ISO_SPEED
 =30,

381 
CV_CAP_PROP_MAX_DC1394
 =31,

382 
CV_CAP_PROP_BACKLIGHT
 =32,

383 
CV_CAP_PROP_PAN
 =33,

384 
CV_CAP_PROP_TILT
 =34,

385 
CV_CAP_PROP_ROLL
 =35,

386 
CV_CAP_PROP_IRIS
 =36,

387 
CV_CAP_PROP_SETTINGS
 =37,

389 
CV_CAP_PROP_AUTOGRAB
 =1024,

390 
CV_CAP_PROP_SUPPORTED_PREVIEW_SIZES_STRING
=1025,

391 
CV_CAP_PROP_PREVIEW_FORMAT
=1026,

394 
CV_CAP_OPENNI_DEPTH_GENERATOR
 = 1 << 31,

395 
CV_CAP_OPENNI_IMAGE_GENERATOR
 = 1 << 30,

396 
CV_CAP_OPENNI_GENERATORS_MASK
 = 
CV_CAP_OPENNI_DEPTH_GENERATOR
 + 
CV_CAP_OPENNI_IMAGE_GENERATOR
,

399 
CV_CAP_PROP_OPENNI_OUTPUT_MODE
 = 100,

400 
CV_CAP_PROP_OPENNI_FRAME_MAX_DEPTH
 = 101,

401 
CV_CAP_PROP_OPENNI_BASELINE
 = 102,

402 
CV_CAP_PROP_OPENNI_FOCAL_LENGTH
 = 103,

403 
CV_CAP_PROP_OPENNI_REGISTRATION
 = 104,

404 
CV_CAP_PROP_OPENNI_REGISTRATION_ON
 = 
CV_CAP_PROP_OPENNI_REGISTRATION
,

407 
CV_CAP_PROP_OPENNI_APPROX_FRAME_SYNC
 = 105,

408 
CV_CAP_PROP_OPENNI_MAX_BUFFER_SIZE
 = 106,

409 
CV_CAP_PROP_OPENNI_CIRCLE_BUFFER
 = 107,

410 
CV_CAP_PROP_OPENNI_MAX_TIME_DURATION
 = 108,

412 
CV_CAP_PROP_OPENNI_GENERATOR_PRESENT
 = 109,

414 
CV_CAP_OPENNI_IMAGE_GENERATOR_PRESENT
 = 
CV_CAP_OPENNI_IMAGE_GENERATOR
 + 
CV_CAP_PROP_OPENNI_GENERATOR_PRESENT
,

415 
CV_CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE
 = 
CV_CAP_OPENNI_IMAGE_GENERATOR
 + 
CV_CAP_PROP_OPENNI_OUTPUT_MODE
,

416 
CV_CAP_OPENNI_DEPTH_GENERATOR_BASELINE
 = 
CV_CAP_OPENNI_DEPTH_GENERATOR
 + 
CV_CAP_PROP_OPENNI_BASELINE
,

417 
CV_CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH
 = 
CV_CAP_OPENNI_DEPTH_GENERATOR
 + 
CV_CAP_PROP_OPENNI_FOCAL_LENGTH
,

418 
CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION
 = 
CV_CAP_OPENNI_DEPTH_GENERATOR
 + 
CV_CAP_PROP_OPENNI_REGISTRATION
,

419 
CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON
 = 
CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION
,

422 
CV_CAP_GSTREAMER_QUEUE_LENGTH
 = 200,

423 
CV_CAP_PROP_PVAPI_MULTICASTIP
 = 300,

426 
CV_CAP_PROP_XI_DOWNSAMPLING
 = 400,

427 
CV_CAP_PROP_XI_DATA_FORMAT
 = 401,

428 
CV_CAP_PROP_XI_OFFSET_X
 = 402,

429 
CV_CAP_PROP_XI_OFFSET_Y
 = 403,

430 
CV_CAP_PROP_XI_TRG_SOURCE
 = 404,

431 
CV_CAP_PROP_XI_TRG_SOFTWARE
 = 405,

432 
CV_CAP_PROP_XI_GPI_SELECTOR
 = 406,

433 
CV_CAP_PROP_XI_GPI_MODE
 = 407,

434 
CV_CAP_PROP_XI_GPI_LEVEL
 = 408,

435 
CV_CAP_PROP_XI_GPO_SELECTOR
 = 409,

436 
CV_CAP_PROP_XI_GPO_MODE
 = 410,

437 
CV_CAP_PROP_XI_LED_SELECTOR
 = 411,

438 
CV_CAP_PROP_XI_LED_MODE
 = 412,

439 
CV_CAP_PROP_XI_MANUAL_WB
 = 413,

440 
CV_CAP_PROP_XI_AUTO_WB
 = 414,

441 
CV_CAP_PROP_XI_AEAG
 = 415,

442 
CV_CAP_PROP_XI_EXP_PRIORITY
 = 416,

443 
CV_CAP_PROP_XI_AE_MAX_LIMIT
 = 417,

444 
CV_CAP_PROP_XI_AG_MAX_LIMIT
 = 418,

445 
CV_CAP_PROP_XI_AEAG_LEVEL
 = 419,

446 
CV_CAP_PROP_XI_TIMEOUT
 = 420,

449 
CV_CAP_PROP_ANDROID_FLASH_MODE
 = 8001,

450 
CV_CAP_PROP_ANDROID_FOCUS_MODE
 = 8002,

451 
CV_CAP_PROP_ANDROID_WHITE_BALANCE
 = 8003,

452 
CV_CAP_PROP_ANDROID_ANTIBANDING
 = 8004,

453 
CV_CAP_PROP_ANDROID_FOCAL_LENGTH
 = 8005,

454 
CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_NEAR
 = 8006,

455 
CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_OPTIMAL
 = 8007,

456 
CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_FAR
 = 8008,

457 
CV_CAP_PROP_ANDROID_EXPOSE_LOCK
 = 8009,

458 
CV_CAP_PROP_ANDROID_WHITEBALANCE_LOCK
 = 8010,

461 
CV_CAP_PROP_IOS_DEVICE_FOCUS
 = 9001,

462 
CV_CAP_PROP_IOS_DEVICE_EXPOSURE
 = 9002,

463 
CV_CAP_PROP_IOS_DEVICE_FLASH
 = 9003,

464 
CV_CAP_PROP_IOS_DEVICE_WHITEBALANCE
 = 9004,

465 
CV_CAP_PROP_IOS_DEVICE_TORCH
 = 9005,

469 
CV_CAP_PROP_GIGA_FRAME_OFFSET_X
 = 10001,

470 
CV_CAP_PROP_GIGA_FRAME_OFFSET_Y
 = 10002,

471 
CV_CAP_PROP_GIGA_FRAME_WIDTH_MAX
 = 10003,

472 
CV_CAP_PROP_GIGA_FRAME_HEIGH_MAX
 = 10004,

473 
CV_CAP_PROP_GIGA_FRAME_SENS_WIDTH
 = 10005,

474 
CV_CAP_PROP_GIGA_FRAME_SENS_HEIGH
 = 10006,

476 
CV_CAP_PROP_INTELPERC_PROFILE_COUNT
 = 11001,

477 
CV_CAP_PROP_INTELPERC_PROFILE_IDX
 = 11002,

478 
CV_CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE
 = 11003,

479 
CV_CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE
 = 11004,

480 
CV_CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD
 = 11005,

481 
CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ
 = 11006,

482 
CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT
 = 11007,

485 
CV_CAP_INTELPERC_DEPTH_GENERATOR
 = 1 << 29,

486 
CV_CAP_INTELPERC_IMAGE_GENERATOR
 = 1 << 28,

487 
CV_CAP_INTELPERC_GENERATORS_MASK
 = 
CV_CAP_INTELPERC_DEPTH_GENERATOR
 + 
CV_CAP_INTELPERC_IMAGE_GENERATOR


493 
CV_CAP_OPENNI_DEPTH_MAP
 = 0,

494 
CV_CAP_OPENNI_POINT_CLOUD_MAP
 = 1,

495 
CV_CAP_OPENNI_DISPARITY_MAP
 = 2,

496 
CV_CAP_OPENNI_DISPARITY_MAP_32F
 = 3,

497 
CV_CAP_OPENNI_VALID_DEPTH_MASK
 = 4,

500 
CV_CAP_OPENNI_BGR_IMAGE
 = 5,

501 
CV_CAP_OPENNI_GRAY_IMAGE
 = 6

507 
CV_CAP_OPENNI_VGA_30HZ
 = 0,

508 
CV_CAP_OPENNI_SXGA_15HZ
 = 1,

509 
CV_CAP_OPENNI_SXGA_30HZ
 = 2,

510 
CV_CAP_OPENNI_QVGA_30HZ
 = 3,

511 
CV_CAP_OPENNI_QVGA_60HZ
 = 4

517 
CV_CAP_ANDROID_COLOR_FRAME_BGR
 = 0,

518 
CV_CAP_ANDROID_COLOR_FRAME
 = 
CV_CAP_ANDROID_COLOR_FRAME_BGR
,

519 
CV_CAP_ANDROID_GREY_FRAME
 = 1,

520 
CV_CAP_ANDROID_COLOR_FRAME_RGB
 = 2,

521 
CV_CAP_ANDROID_COLOR_FRAME_BGRA
 = 3,

522 
CV_CAP_ANDROID_COLOR_FRAME_RGBA
 = 4

528 
CV_CAP_ANDROID_FLASH_MODE_AUTO
 = 0,

529 
CV_CAP_ANDROID_FLASH_MODE_OFF
,

530 
CV_CAP_ANDROID_FLASH_MODE_ON
,

531 
CV_CAP_ANDROID_FLASH_MODE_RED_EYE
,

532 
CV_CAP_ANDROID_FLASH_MODE_TORCH


538 
CV_CAP_ANDROID_FOCUS_MODE_AUTO
 = 0,

539 
CV_CAP_ANDROID_FOCUS_MODE_CONTINUOUS_PICTURE
,

540 
CV_CAP_ANDROID_FOCUS_MODE_CONTINUOUS_VIDEO
,

541 
CV_CAP_ANDROID_FOCUS_MODE_EDOF
,

542 
CV_CAP_ANDROID_FOCUS_MODE_FIXED
,

543 
CV_CAP_ANDROID_FOCUS_MODE_INFINITY
,

544 
CV_CAP_ANDROID_FOCUS_MODE_MACRO


550 
CV_CAP_ANDROID_WHITE_BALANCE_AUTO
 = 0,

551 
CV_CAP_ANDROID_WHITE_BALANCE_CLOUDY_DAYLIGHT
,

552 
CV_CAP_ANDROID_WHITE_BALANCE_DAYLIGHT
,

553 
CV_CAP_ANDROID_WHITE_BALANCE_FLUORESCENT
,

554 
CV_CAP_ANDROID_WHITE_BALANCE_INCANDESCENT
,

555 
CV_CAP_ANDROID_WHITE_BALANCE_SHADE
,

556 
CV_CAP_ANDROID_WHITE_BALANCE_TWILIGHT
,

557 
CV_CAP_ANDROID_WHITE_BALANCE_WARM_FLUORESCENT


563 
CV_CAP_ANDROID_ANTIBANDING_50HZ
 = 0,

564 
CV_CAP_ANDROID_ANTIBANDING_60HZ
,

565 
CV_CAP_ANDROID_ANTIBANDING_AUTO
,

566 
CV_CAP_ANDROID_ANTIBANDING_OFF


571 
CV_CAP_INTELPERC_DEPTH_MAP
 = 0,

572 
CV_CAP_INTELPERC_UVDEPTH_MAP
 = 1,

573 
CV_CAP_INTELPERC_IR_MAP
 = 2,

574 
CV_CAP_INTELPERC_IMAGE
 = 3

578 
CVAPI
(Ë
cvGëC≠tuªPr›îty
–
CvC≠tuª
* 
ˇ±uª
, 
¥›îty_id
 );

579 
CVAPI
(Ë
cvSëC≠tuªPr›îty
–
CvC≠tuª
* 
ˇ±uª
, 
¥›îty_id
, 
vÆue
 );

582 
CVAPI
(Ë
cvGëC≠tuªDomaö
–
CvC≠tuª
* 
ˇ±uª
);

585 
CvVideoWrôî
 
	tCvVideoWrôî
;

587 
	#CV_FOURCC_MACRO
(
c1
, 
c2
, 
c3
, 
c4
Ë(((c1Ë& 255Ë+ (((c2Ë& 255Ë<< 8Ë+ (((c3Ë& 255Ë<< 16Ë+ (((c4Ë& 255Ë<< 24))

	)

589 
CV_INLINE
 
CV_FOURCC
(
c1
, 
c2
, 
c3
, 
c4
)

591  
CV_FOURCC_MACRO
(
c1
, 
c2
, 
c3
, 
c4
);

594 
	#CV_FOURCC_PROMPT
 -1

	)

595 
	#CV_FOURCC_DEFAULT
 
	`CV_FOURCC
('I', 'Y', 'U', 'V'Ë

	)

598 
CVAPI
(
CvVideoWrôî
*Ë
cvCª©eVideoWrôî
–c⁄° * 
fûíame
, 
fourcc
,

599 
Âs
, 
CvSize
 
‰ame_size
,

600 
is_cﬁ‹
 
CV_DEFAULT
(1));

606 
CVAPI
(Ë
cvWrôeFøme
–
CvVideoWrôî
* 
wrôî
, c⁄° 
I∂Image
* 
image
 );

609 
CVAPI
(Ë
cvRñó£VideoWrôî
–
CvVideoWrôî
** 
wrôî
 );

615 
	#cvC≠tuªFromFûe
 
cvCª©eFûeC≠tuª


	)

616 
	#cvC≠tuªFromCAM
 
cvCª©eCamîaC≠tuª


	)

617 
	#cvC≠tuªFromAVI
 
cvC≠tuªFromFûe


	)

618 
	#cvCª©eAVIWrôî
 
cvCª©eVideoWrôî


	)

619 
	#cvWrôeToAVI
 
cvWrôeFøme


	)

620 
	#cvAddSórchP©h
(
∑th
)

	)

621 
	#cvvInôSy°em
 
cvInôSy°em


	)

622 
	#cvvNamedWödow
 
cvNamedWödow


	)

623 
	#cvvShowImage
 
cvShowImage


	)

624 
	#cvvResizeWödow
 
cvResizeWödow


	)

625 
	#cvvDe°royWödow
 
cvDe°royWödow


	)

626 
	#cvvCª©eTøckb¨
 
cvCª©eTøckb¨


	)

627 
	#cvvLﬂdImage
(
«me
Ë
	`cvLﬂdImage
(“ame),1)

	)

628 
	#cvvSaveImage
 
cvSaveImage


	)

629 
	#cvvAddSórchP©h
 
cvAddSórchP©h


	)

630 
	#cvvWaôKey
(
«me
Ë
	`cvWaôKey
(0)

	)

631 
	#cvvWaôKeyEx
(
«me
,
dñay
Ë
	`cvWaôKey
(dñay)

	)

632 
	#cvvC⁄vîtImage
 
cvC⁄vîtImage


	)

633 
	#HG_AUTOSIZE
 
CV_WINDOW_AUTOSIZE


	)

634 
	#£t_¥ïro˚ss_func
 
cvSëPª¥o˚ssFuncWö32


	)

635 
	#£t_po°¥o˚ss_func
 
cvSëPo°¥o˚ssFuncWö32


	)

637 #i‡
deföed
 
WIN32
 || deföed 
_WIN32


639 
CVAPI
(Ë
cvSëPª¥o˚ssFuncWö32_
(c⁄° * 
ˇŒback
);

640 
CVAPI
(Ë
cvSëPo°¥o˚ssFuncWö32_
(c⁄° * 
ˇŒback
);

641 
	#cvSëPª¥o˚ssFuncWö32
(
ˇŒback
Ë
	`cvSëPª¥o˚ssFuncWö32_
((c⁄° *)(ˇŒback))

	)

642 
	#cvSëPo°¥o˚ssFuncWö32
(
ˇŒback
Ë
	`cvSëPo°¥o˚ssFuncWö32_
((c⁄° *)(ˇŒback))

	)

646 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/opencv2/core/core_c.h

44 #i‚de‡
__OPENCV_CORE_C_H__


45 
	#__OPENCV_CORE_C_H__


	)

47 
	~"›ícv2/c‹e/ty≥s_c.h
"

49 #ifde‡
__˝lu•lus


61 
CVAPI
(*Ë
cvAŒoc
–
size_t
 
size
 );

69 
CVAPI
(Ë
cvFªe_
–* 
±r
 );

70 
	#cvFªe
(
±r
Ë(
	`cvFªe_
(*’å)), *’å)=0)

	)

73 
CVAPI
(
I∂Image
*Ë
cvCª©eImageHódî
–
CvSize
 
size
, 
dïth
, 
ch™√ls
 );

76 
CVAPI
(
I∂Image
*Ë
cvInôImageHódî
–I∂Image* 
image
, 
CvSize
 
size
, 
dïth
,

77 
ch™√ls
, 
‹igö
 
CV_DEFAULT
(0),

78 
Æign
 
CV_DEFAULT
(4));

81 
CVAPI
(
I∂Image
*Ë
cvCª©eImage
–
CvSize
 
size
, 
dïth
, 
ch™√ls
 );

84 
CVAPI
(Ë
cvRñó£ImageHódî
–
I∂Image
** 
image
 );

87 
CVAPI
(Ë
cvRñó£Image
–
I∂Image
** 
image
 );

90 
CVAPI
(
I∂Image
*Ë
cvCl⁄eImage
–c⁄° I∂Image* 
image
 );

94 
CVAPI
(Ë
cvSëImageCOI
–
I∂Image
* 
image
, 
coi
 );

97 
CVAPI
(Ë
cvGëImageCOI
–c⁄° 
I∂Image
* 
image
 );

100 
CVAPI
(Ë
cvSëImageROI
–
I∂Image
* 
image
, 
CvRe˘
 
ª˘
 );

103 
CVAPI
(Ë
cvRe£tImageROI
–
I∂Image
* 
image
 );

106 
CVAPI
(
CvRe˘
Ë
cvGëImageROI
–c⁄° 
I∂Image
* 
image
 );

109 
CVAPI
(
CvM©
*Ë
cvCª©eM©Hódî
–
rows
, 
cﬁs
, 
ty≥
 );

111 
	#CV_AUTOSTEP
 0x7fffffff

	)

114 
CVAPI
(
CvM©
*Ë
cvInôM©Hódî
–CvM©* 
m©
, 
rows
, 
cﬁs
,

115 
ty≥
, * 
d©a
 
CV_DEFAULT
(
NULL
),

116 
°ï
 
CV_DEFAULT
(
CV_AUTOSTEP
) );

119 
CVAPI
(
CvM©
*Ë
cvCª©eM©
–
rows
, 
cﬁs
, 
ty≥
 );

123 
CVAPI
(Ë
cvRñó£M©
–
CvM©
** 
m©
 );

127 
CV_INLINE
 
cvDecRefD©a
–
CvAº
* 
¨r
 )

129 if–
CV_IS_MAT
–
¨r
 ))

131 
CvM©
* 
m©
 = (CvM©*)
¨r
;

132 
m©
->
d©a
.
±r
 = 
NULL
;

133 if–
m©
->
ªfcou¡
 !
NULL
 && --*mat->refcount == 0 )

134 
cvFªe
–&
m©
->
ªfcou¡
 );

135 
m©
->
ªfcou¡
 = 
NULL
;

137 if–
CV_IS_MATND
–
¨r
 ))

139 
CvM©ND
* 
m©
 = (CvM©ND*)
¨r
;

140 
m©
->
d©a
.
±r
 = 
NULL
;

141 if–
m©
->
ªfcou¡
 !
NULL
 && --*mat->refcount == 0 )

142 
cvFªe
–&
m©
->
ªfcou¡
 );

143 
m©
->
ªfcou¡
 = 
NULL
;

148 
CV_INLINE
 
cvIncRefD©a
–
CvAº
* 
¨r
 )

150 
ªfcou¡
 = 0;

151 if–
CV_IS_MAT
–
¨r
 ))

153 
CvM©
* 
m©
 = (CvM©*)
¨r
;

154 if–
m©
->
ªfcou¡
 !
NULL
 )

155 
ªfcou¡
 = ++*
m©
->refcount;

157 if–
CV_IS_MATND
–
¨r
 ))

159 
CvM©ND
* 
m©
 = (CvM©ND*)
¨r
;

160 if–
m©
->
ªfcou¡
 !
NULL
 )

161 
ªfcou¡
 = ++*
m©
->refcount;

163  
ªfcou¡
;

168 
CVAPI
(
CvM©
*Ë
cvCl⁄eM©
–c⁄° CvM©* 
m©
 );

173 
CVAPI
(
CvM©
*Ë
cvGëSubRe˘
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
, 
CvRe˘
 
ª˘
 );

174 
	#cvGëSubAº
 
cvGëSubRe˘


	)

178 
CVAPI
(
CvM©
*Ë
cvGëRows
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
,

179 
°¨t_row
, 
íd_row
,

180 
dñè_row
 
CV_DEFAULT
(1));

182 
CV_INLINE
 
CvM©
* 
cvGëRow
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
, 
row
 )

184  
cvGëRows
–
¨r
, 
subm©
, 
row
,Ñow + 1, 1 );

190 
CVAPI
(
CvM©
*Ë
cvGëCﬁs
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
,

191 
°¨t_cﬁ
, 
íd_cﬁ
 );

193 
CV_INLINE
 
CvM©
* 
cvGëCﬁ
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
, 
cﬁ
 )

195  
cvGëCﬁs
–
¨r
, 
subm©
, 
cﬁ
, col + 1 );

202 
CVAPI
(
CvM©
*Ë
cvGëDüg
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
,

203 
düg
 
CV_DEFAULT
(0));

206 
CVAPI
(Ë
cvSˇœrToRawD©a
–c⁄° 
CvSˇœr
* 
sˇœr
, * 
d©a
, 
ty≥
,

207 
exãnd_to_12
 
CV_DEFAULT
(0) );

209 
CVAPI
(Ë
cvRawD©aToSˇœr
–c⁄° * 
d©a
, 
ty≥
, 
CvSˇœr
* 
sˇœr
 );

212 
CVAPI
(
CvM©ND
*Ë
cvCª©eM©NDHódî
–
dims
, c⁄° * 
sizes
, 
ty≥
 );

215 
CVAPI
(
CvM©ND
*Ë
cvCª©eM©ND
–
dims
, c⁄° * 
sizes
, 
ty≥
 );

218 
CVAPI
(
CvM©ND
*Ë
cvInôM©NDHódî
–CvM©ND* 
m©
, 
dims
, c⁄° * 
sizes
,

219 
ty≥
, * 
d©a
 
CV_DEFAULT
(
NULL
) );

222 
CV_INLINE
 
cvRñó£M©ND
–
CvM©ND
** 
m©
 )

224 
cvRñó£M©
–(
CvM©
**)
m©
 );

228 
CVAPI
(
CvM©ND
*Ë
cvCl⁄eM©ND
–c⁄° CvM©ND* 
m©
 );

231 
CVAPI
(
CvS∑r£M©
*Ë
cvCª©eS∑r£M©
–
dims
, c⁄° * 
sizes
, 
ty≥
 );

234 
CVAPI
(Ë
cvRñó£S∑r£M©
–
CvS∑r£M©
** 
m©
 );

237 
CVAPI
(
CvS∑r£M©
*Ë
cvCl⁄eS∑r£M©
–c⁄° CvS∑r£M©* 
m©
 );

241 
CVAPI
(
CvS∑r£Node
*Ë
cvInôS∑r£M©Iãøt‹
–c⁄° 
CvS∑r£M©
* 
m©
,

242 
CvS∑r£M©Iãøt‹
* 
m©_ôî©‹
 );

245 
CV_INLINE
 
CvS∑r£Node
* 
cvGëNextS∑r£Node
–
CvS∑r£M©Iãøt‹
* 
m©_ôî©‹
 )

247 if–
m©_ôî©‹
->
node
->
√xt
 )

248  
m©_ôî©‹
->
node
 = m©_ôî©‹->node->
√xt
;

251 
idx
;

252  
idx
 = ++
m©_ôî©‹
->
curidx
; idx < m©_ôî©‹->
m©
->
hashsize
; idx++ )

254 
CvS∑r£Node
* 
node
 = (CvS∑r£Node*)
m©_ôî©‹
->
m©
->
hashèbÀ
[
idx
];

255 if–
node
 )

257 
m©_ôî©‹
->
curidx
 = 
idx
;

258  
m©_ôî©‹
->
node
 =Çode;

261  
NULL
;

267 
	#CV_MAX_ARR
 10

	)

269 
	sCvNAºayIãøt‹


271 
cou¡
;

272 
dims
;

273 
CvSize
 
size
;

274 
uch¨
* 
±r
[
CV_MAX_ARR
];

275 
°ack
[
CV_MAX_DIM
];

276 
CvM©ND
* 
hdr
[
CV_MAX_ARR
];

279 
	tCvNAºayIãøt‹
;

281 
	#CV_NO_DEPTH_CHECK
 1

	)

282 
	#CV_NO_CN_CHECK
 2

	)

283 
	#CV_NO_SIZE_CHECK
 4

	)

288 
CVAPI
(Ë
cvInôNAºayIãøt‹
–
cou¡
, 
CvAº
** 
¨rs
,

289 c⁄° 
CvAº
* 
mask
, 
CvM©ND
* 
°ubs
,

290 
CvNAºayIãøt‹
* 
¨øy_ôî©‹
,

291 
Êags
 
CV_DEFAULT
(0) );

294 
CVAPI
(Ë
cvNextNAºaySli˚
–
CvNAºayIãøt‹
* 
¨øy_ôî©‹
 );

299 
CVAPI
(Ë
cvGëEÀmTy≥
–c⁄° 
CvAº
* 
¨r
 );

303 
CVAPI
(Ë
cvGëDims
–c⁄° 
CvAº
* 
¨r
, * 
sizes
 
CV_DEFAULT
(
NULL
) );

309 
CVAPI
(Ë
cvGëDimSize
–c⁄° 
CvAº
* 
¨r
, 
ödex
 );

314 
CVAPI
(
uch¨
*Ë
cvPå1D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, * 
ty≥
 
CV_DEFAULT
(
NULL
));

315 
CVAPI
(
uch¨
*Ë
cvPå2D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
, * 
ty≥
 
CV_DEFAULT
(
NULL
) );

316 
CVAPI
(
uch¨
*Ë
cvPå3D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
idx2
,

317 * 
ty≥
 
CV_DEFAULT
(
NULL
));

323 
CVAPI
(
uch¨
*Ë
cvPåND
–c⁄° 
CvAº
* 
¨r
, c⁄° * 
idx
, * 
ty≥
 
CV_DEFAULT
(
NULL
),

324 
¸óã_node
 
CV_DEFAULT
(1),

325 * 
¥eˇlc_hashvÆ
 
CV_DEFAULT
(
NULL
));

328 
CVAPI
(
CvSˇœr
Ë
cvGë1D
–c⁄° 
CvAº
* 
¨r
, 
idx0
 );

329 
CVAPI
(
CvSˇœr
Ë
cvGë2D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
 );

330 
CVAPI
(
CvSˇœr
Ë
cvGë3D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
idx2
 );

331 
CVAPI
(
CvSˇœr
Ë
cvGëND
–c⁄° 
CvAº
* 
¨r
, c⁄° * 
idx
 );

334 
CVAPI
(Ë
cvGëRól1D
–c⁄° 
CvAº
* 
¨r
, 
idx0
 );

335 
CVAPI
(Ë
cvGëRól2D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
 );

336 
CVAPI
(Ë
cvGëRól3D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
idx2
 );

337 
CVAPI
(Ë
cvGëRólND
–c⁄° 
CvAº
* 
¨r
, c⁄° * 
idx
 );

340 
CVAPI
(Ë
cvSë1D
–
CvAº
* 
¨r
, 
idx0
, 
CvSˇœr
 
vÆue
 );

341 
CVAPI
(Ë
cvSë2D
–
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
CvSˇœr
 
vÆue
 );

342 
CVAPI
(Ë
cvSë3D
–
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
idx2
, 
CvSˇœr
 
vÆue
 );

343 
CVAPI
(Ë
cvSëND
–
CvAº
* 
¨r
, c⁄° * 
idx
, 
CvSˇœr
 
vÆue
 );

346 
CVAPI
(Ë
cvSëRól1D
–
CvAº
* 
¨r
, 
idx0
, 
vÆue
 );

347 
CVAPI
(Ë
cvSëRól2D
–
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
vÆue
 );

348 
CVAPI
(Ë
cvSëRól3D
–
CvAº
* 
¨r
, 
idx0
,

349 
idx1
, 
idx2
, 
vÆue
 );

350 
CVAPI
(Ë
cvSëRólND
–
CvAº
* 
¨r
, c⁄° * 
idx
, 
vÆue
 );

354 
CVAPI
(Ë
cvCÀ¨ND
–
CvAº
* 
¨r
, c⁄° * 
idx
 );

361 
CVAPI
(
CvM©
*Ë
cvGëM©
–c⁄° 
CvAº
* 
¨r
, CvM©* 
hódî
,

362 * 
coi
 
CV_DEFAULT
(
NULL
),

363 
ÆlowND
 
CV_DEFAULT
(0));

366 
CVAPI
(
I∂Image
*Ë
cvGëImage
–c⁄° 
CvAº
* 
¨r
, I∂Image* 
image_hódî
 );

379 
CVAPI
(
CvAº
*Ë
cvResh≠eM©ND
–c⁄° CvAº* 
¨r
,

380 
sizeof_hódî
, 
CvAº
* 
hódî
,

381 
√w_˙
, 
√w_dims
, * 
√w_sizes
 );

383 
	#cvResh≠eND
–
¨r
, 
hódî
, 
√w_˙
, 
√w_dims
, 
√w_sizes
 ) \

384 
	`cvResh≠eM©ND
–(
¨r
), (*(
hódî
)), (header), \

385 (
√w_˙
), (
√w_dims
), (
√w_sizes
))

	)

387 
CVAPI
(
CvM©
*Ë
cvResh≠e
–c⁄° 
CvAº
* 
¨r
, CvM©* 
hódî
,

388 
√w_˙
, 
√w_rows
 
CV_DEFAULT
(0) );

392 
CVAPI
(Ë
cvRïót
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 );

395 
CVAPI
(Ë
cvCª©eD©a
–
CvAº
* 
¨r
 );

398 
CVAPI
(Ë
cvRñó£D©a
–
CvAº
* 
¨r
 );

403 
CVAPI
(Ë
cvSëD©a
–
CvAº
* 
¨r
, * 
d©a
, 
°ï
 );

408 
CVAPI
(Ë
cvGëRawD©a
–c⁄° 
CvAº
* 
¨r
, 
uch¨
** 
d©a
,

409 * 
°ï
 
CV_DEFAULT
(
NULL
),

410 
CvSize
* 
roi_size
 
CV_DEFAULT
(
NULL
));

413 
CVAPI
(
CvSize
Ë
cvGëSize
–c⁄° 
CvAº
* 
¨r
 );

416 
CVAPI
(Ë
cvC›y
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

417 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

421 
CVAPI
(Ë
cvSë
–
CvAº
* 
¨r
, 
CvSˇœr
 
vÆue
,

422 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

425 
CVAPI
(Ë
cvSëZîo
–
CvAº
* 
¨r
 );

426 
	#cvZîo
 
cvSëZîo


	)

431 
CVAPI
(Ë
cvS∂ô
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°0
, CvAº* 
d°1
,

432 
CvAº
* 
d°2
, CvAº* 
d°3
 );

436 
CVAPI
(Ë
cvMîge
–c⁄° 
CvAº
* 
§c0
, c⁄° CvAº* 
§c1
,

437 c⁄° 
CvAº
* 
§c2
, c⁄° CvAº* 
§c3
,

438 
CvAº
* 
d°
 );

442 
CVAPI
(Ë
cvMixCh™√ls
–c⁄° 
CvAº
** 
§c
, 
§c_cou¡
,

443 
CvAº
** 
d°
, 
d°_cou¡
,

444 c⁄° * 
‰om_to
, 
∑ú_cou¡
 );

451 
CVAPI
(Ë
cvC⁄vîtSˇÀ
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

452 
sˇÀ
 
CV_DEFAULT
(1),

453 
shi·
 
CV_DEFAULT
(0) );

454 
	#cvCvtSˇÀ
 
cvC⁄vîtSˇÀ


	)

455 
	#cvSˇÀ
 
cvC⁄vîtSˇÀ


	)

456 
	#cvC⁄vît
–
§c
, 
d°
 ) 
	`cvC⁄vîtSˇÀ
–(§c), (d°), 1, 0 )

	)

464 
CVAPI
(Ë
cvC⁄vîtSˇÀAbs
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

465 
sˇÀ
 
CV_DEFAULT
(1),

466 
shi·
 
CV_DEFAULT
(0) );

467 
	#cvCvtSˇÀAbs
 
cvC⁄vîtSˇÀAbs


	)

474 
CVAPI
(
CvTîmCrôîü
Ë
cvCheckTîmCrôîü
–CvTîmCrôîü 
¸ôîü
,

475 
deÁu…_ïs
,

476 
deÁu…_max_ôîs
 );

483 
CVAPI
(Ë
cvAdd
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
,

484 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
));

487 
CVAPI
(Ë
cvAddS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
, CvAº* 
d°
,

488 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
));

491 
CVAPI
(Ë
cvSub
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
,

492 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
));

495 
CV_INLINE
 
cvSubS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
, CvAº* 
d°
,

496 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
))

498 
cvAddS
–
§c
, 
cvSˇœr
–-
vÆue
.
vÆ
[0], -value.val[1], -value.val[2], -value.val[3]),

499 
d°
, 
mask
 );

503 
CVAPI
(Ë
cvSubRS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
, CvAº* 
d°
,

504 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
));

508 
CVAPI
(Ë
cvMul
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

509 
CvAº
* 
d°
, 
sˇÀ
 
CV_DEFAULT
(1) );

514 
CVAPI
(Ë
cvDiv
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

515 
CvAº
* 
d°
, 
sˇÀ
 
CV_DEFAULT
(1));

518 
CVAPI
(Ë
cvSˇÀAdd
–c⁄° 
CvAº
* 
§c1
, 
CvSˇœr
 
sˇÀ
,

519 c⁄° 
CvAº
* 
§c2
, CvAº* 
d°
 );

520 
	#cvAXPY
–
A
, 
ªÆ_sˇœr
, 
B
, 
C
 ) 
	`cvSˇÀAdd
(A, 
	`cvRólSˇœr
‘ól_sˇœr), B, C)

	)

523 
CVAPI
(Ë
cvAddWeighãd
–c⁄° 
CvAº
* 
§c1
, 
Æpha
,

524 c⁄° 
CvAº
* 
§c2
, 
bëa
,

525 
gamma
, 
CvAº
* 
d°
 );

528 
CVAPI
(Ë
cvDŸProdu˘
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
 );

531 
CVAPI
(Ë
cvAnd
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

532 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

535 
CVAPI
(Ë
cvAndS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
,

536 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

539 
CVAPI
(Ë
cvOr
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

540 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

543 
CVAPI
(Ë
cvOrS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
,

544 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

547 
CVAPI
(Ë
cvX‹
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

548 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

551 
CVAPI
(Ë
cvX‹S
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
,

552 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

555 
CVAPI
(Ë
cvNŸ
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 );

558 
CVAPI
(Ë
cvInR™ge
–c⁄° 
CvAº
* 
§c
, c⁄° CvAº* 
lowî
,

559 c⁄° 
CvAº
* 
uµî
, CvAº* 
d°
 );

562 
CVAPI
(Ë
cvInR™geS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
lowî
,

563 
CvSˇœr
 
uµî
, 
CvAº
* 
d°
 );

565 
	#CV_CMP_EQ
 0

	)

566 
	#CV_CMP_GT
 1

	)

567 
	#CV_CMP_GE
 2

	)

568 
	#CV_CMP_LT
 3

	)

569 
	#CV_CMP_LE
 4

	)

570 
	#CV_CMP_NE
 5

	)

576 
CVAPI
(Ë
cvCmp
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
, 
cmp_›
 );

579 
CVAPI
(Ë
cvCmpS
–c⁄° 
CvAº
* 
§c
, 
vÆue
, CvAº* 
d°
, 
cmp_›
 );

582 
CVAPI
(Ë
cvMö
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
 );

585 
CVAPI
(Ë
cvMax
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
 );

588 
CVAPI
(Ë
cvMöS
–c⁄° 
CvAº
* 
§c
, 
vÆue
, CvAº* 
d°
 );

591 
CVAPI
(Ë
cvMaxS
–c⁄° 
CvAº
* 
§c
, 
vÆue
, CvAº* 
d°
 );

594 
CVAPI
(Ë
cvAbsDiff
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
 );

597 
CVAPI
(Ë
cvAbsDiffS
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
CvSˇœr
 
vÆue
 );

598 
	#cvAbs
–
§c
, 
d°
 ) 
	`cvAbsDiffS
–(§c), (d°), 
	`cvSˇœrAŒ
(0))

	)

606 
CVAPI
(Ë
cvC¨tToPﬁ¨
–c⁄° 
CvAº
* 
x
, c⁄° CvAº* 
y
,

607 
CvAº
* 
magnôude
, CvAº* 
™gÀ
 
CV_DEFAULT
(
NULL
),

608 
™gÀ_ö_degªes
 
CV_DEFAULT
(0));

613 
CVAPI
(Ë
cvPﬁ¨ToC¨t
–c⁄° 
CvAº
* 
magnôude
, c⁄° CvAº* 
™gÀ
,

614 
CvAº
* 
x
, CvAº* 
y
,

615 
™gÀ_ö_degªes
 
CV_DEFAULT
(0));

618 
CVAPI
(Ë
cvPow
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
powî
 );

623 
CVAPI
(Ë
cvExp
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 );

629 
CVAPI
(Ë
cvLog
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 );

632 
CVAPI
(Ë
cvFa°Ar˘™
–
y
, 
x
 );

635 
CVAPI
(Ë
cvCbπ
–
vÆue
 );

641 
	#CV_CHECK_RANGE
 1

	)

642 
	#CV_CHECK_QUIET
 2

	)

643 
CVAPI
(Ë
cvCheckAº
–c⁄° 
CvAº
* 
¨r
, 
Êags
 
CV_DEFAULT
(0),

644 
mö_vÆ
 
CV_DEFAULT
(0), 
max_vÆ
 CV_DEFAULT(0));

645 
	#cvCheckAºay
 
cvCheckAº


	)

647 
	#CV_RAND_UNI
 0

	)

648 
	#CV_RAND_NORMAL
 1

	)

649 
CVAPI
(Ë
cvR™dAº
–
CvRNG
* 
∫g
, 
CvAº
* 
¨r
, 
di°_ty≥
,

650 
CvSˇœr
 
∑øm1
, CvSˇœ∏
∑øm2
 );

652 
CVAPI
(Ë
cvR™dShufÊe
–
CvAº
* 
m©
, 
CvRNG
* 
∫g
,

653 
ôî_Á˘‹
 
CV_DEFAULT
(1.));

655 
	#CV_SORT_EVERY_ROW
 0

	)

656 
	#CV_SORT_EVERY_COLUMN
 1

	)

657 
	#CV_SORT_ASCENDING
 0

	)

658 
	#CV_SORT_DESCENDING
 16

	)

660 
CVAPI
(Ë
cvS‹t
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 
CV_DEFAULT
(
NULL
),

661 
CvAº
* 
idxm©
 
CV_DEFAULT
(
NULL
),

662 
Êags
 
CV_DEFAULT
(0));

665 
CVAPI
(Ë
cvSﬁveCubic
–c⁄° 
CvM©
* 
c€ffs
, CvM©* 
roŸs
 );

668 
CVAPI
(Ë
cvSﬁvePﬁy
(c⁄° 
CvM©
* 
c€ffs
, CvM© *
roŸs2
,

669 
maxôî
 
CV_DEFAULT
(20), 
fig
 CV_DEFAULT(100));

676 
CVAPI
(Ë
cvCrossProdu˘
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
 );

679 
	#cvM©MulAdd
–
§c1
, 
§c2
, 
§c3
, 
d°
 ) 
	`cvGEMM
–(§c1), (§c2), 1., (§c3), 1., (d°), 0 )

	)

680 
	#cvM©Mul
–
§c1
, 
§c2
, 
d°
 ) 
	`cvM©MulAdd
–(§c1), (§c2), 
NULL
, (d°))

	)

682 
	#CV_GEMM_A_T
 1

	)

683 
	#CV_GEMM_B_T
 2

	)

684 
	#CV_GEMM_C_T
 4

	)

687 
CVAPI
(Ë
cvGEMM
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, 
Æpha
,

688 c⁄° 
CvAº
* 
§c3
, 
bëa
, CvAº* 
d°
,

689 
tABC
 
CV_DEFAULT
(0));

690 
	#cvM©MulAddEx
 
cvGEMM


	)

694 
CVAPI
(Ë
cvTønsf‹m
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

695 c⁄° 
CvM©
* 
å™sm©
,

696 c⁄° 
CvM©
* 
shi·vec
 
CV_DEFAULT
(
NULL
));

697 
	#cvM©MulAddS
 
cvTønsf‹m


	)

700 
CVAPI
(Ë
cvPî•e˘iveTønsf‹m
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

701 c⁄° 
CvM©
* 
m©
 );

704 
CVAPI
(Ë
cvMulTøn•o£d
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
‹dî
,

705 c⁄° 
CvAº
* 
dñè
 
CV_DEFAULT
(
NULL
),

706 
sˇÀ
 
CV_DEFAULT
(1.) );

709 
CVAPI
(Ë
cvTøn•o£
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 );

710 
	#cvT
 
cvTøn•o£


	)

713 
CVAPI
(Ë
cvCom∂ëeSymm
–
CvM©
* 
m©rix
, 
LtoR
 
CV_DEFAULT
(0) );

718 
CVAPI
(Ë
cvFlù
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 
CV_DEFAULT
(
NULL
),

719 
Êù_mode
 
CV_DEFAULT
(0));

720 
	#cvMúr‹
 
cvFlù


	)

723 
	#CV_SVD_MODIFY_A
 1

	)

724 
	#CV_SVD_U_T
 2

	)

725 
	#CV_SVD_V_T
 4

	)

728 
CVAPI
(Ë
cvSVD
–
CvAº
* 
A
, CvAº* 
W
, CvAº* 
U
 
CV_DEFAULT
(
NULL
),

729 
CvAº
* 
V
 
CV_DEFAULT
(
NULL
), 
Êags
 CV_DEFAULT(0));

733 
CVAPI
(Ë
cvSVBkSb
–c⁄° 
CvAº
* 
W
, c⁄° CvAº* 
U
,

734 c⁄° 
CvAº
* 
V
, c⁄° CvAº* 
B
,

735 
CvAº
* 
X
, 
Êags
 );

737 
	#CV_LU
 0

	)

738 
	#CV_SVD
 1

	)

739 
	#CV_SVD_SYM
 2

	)

740 
	#CV_CHOLESKY
 3

	)

741 
	#CV_QR
 4

	)

742 
	#CV_NORMAL
 16

	)

745 
CVAPI
(Ë
cvInvît
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

746 
mëhod
 
CV_DEFAULT
(
CV_LU
));

747 
	#cvInv
 
cvInvît


	)

751 
CVAPI
(Ë
cvSﬁve
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
,

752 
mëhod
 
CV_DEFAULT
(
CV_LU
));

755 
CVAPI
(Ë
cvDë
–c⁄° 
CvAº
* 
m©
 );

758 
CVAPI
(
CvSˇœr
Ë
cvTø˚
–c⁄° 
CvAº
* 
m©
 );

761 
CVAPI
(Ë
cvEigíVV
–
CvAº
* 
m©
, CvAº* 
eve˘s
, CvAº* 
evÆs
,

762 
ïs
 
CV_DEFAULT
(0),

763 
lowödex
 
CV_DEFAULT
(-1),

764 
highödex
 
CV_DEFAULT
(-1));

771 
CVAPI
(Ë
cvSëIdítôy
–
CvAº
* 
m©
, 
CvSˇœr
 
vÆue
 
CV_DEFAULT
(
cvRólSˇœr
(1)) );

774 
CVAPI
(
CvAº
*Ë
cvR™ge
–CvAº* 
m©
, 
°¨t
, 
íd
 );

778 
	#CV_COVAR_SCRAMBLED
 0

	)

781 
	#CV_COVAR_NORMAL
 1

	)

785 
	#CV_COVAR_USE_AVG
 2

	)

788 
	#CV_COVAR_SCALE
 4

	)

791 
	#CV_COVAR_ROWS
 8

	)

794 
	#CV_COVAR_COLS
 16

	)

796 
CVAPI
(Ë
cvCÆcCov¨M©rix
–c⁄° 
CvAº
** 
ve˘s
, 
cou¡
,

797 
CvAº
* 
cov_m©
, CvAº* 
avg
, 
Êags
 );

799 
	#CV_PCA_DATA_AS_ROW
 0

	)

800 
	#CV_PCA_DATA_AS_COL
 1

	)

801 
	#CV_PCA_USE_AVG
 2

	)

802 
CVAPI
(Ë
cvCÆcPCA
–c⁄° 
CvAº
* 
d©a
, CvAº* 
món
,

803 
CvAº
* 
eigívÆs
, CvAº* 
eigíve˘s
, 
Êags
 );

805 
CVAPI
(Ë
cvProje˘PCA
–c⁄° 
CvAº
* 
d©a
, c⁄° CvAº* 
món
,

806 c⁄° 
CvAº
* 
eigíve˘s
, CvAº* 
ªsu…
 );

808 
CVAPI
(Ë
cvBackProje˘PCA
–c⁄° 
CvAº
* 
¥oj
, c⁄° CvAº* 
món
,

809 c⁄° 
CvAº
* 
eigíve˘s
, CvAº* 
ªsu…
 );

812 
CVAPI
(Ë
cvMahÆ™obis
–c⁄° 
CvAº
* 
vec1
, c⁄° CvAº* 
vec2
, c⁄° CvAº* 
m©
 );

813 
	#cvMahÆ⁄obis
 
cvMahÆ™obis


	)

820 
CVAPI
(
CvSˇœr
Ë
cvSum
–c⁄° 
CvAº
* 
¨r
 );

823 
CVAPI
(Ë
cvCou¡N⁄Zîo
–c⁄° 
CvAº
* 
¨r
 );

826 
CVAPI
(
CvSˇœr
Ë
cvAvg
–c⁄° 
CvAº
* 
¨r
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
) );

829 
CVAPI
(Ë
cvAvgSdv
–c⁄° 
CvAº
* 
¨r
, 
CvSˇœr
* 
món
, CvSˇœr* 
°d_dev
,

830 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

833 
CVAPI
(Ë
cvMöMaxLoc
–c⁄° 
CvAº
* 
¨r
, * 
mö_vÆ
, * 
max_vÆ
,

834 
CvPoöt
* 
mö_loc
 
CV_DEFAULT
(
NULL
),

835 
CvPoöt
* 
max_loc
 
CV_DEFAULT
(
NULL
),

836 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

839 
	#CV_C
 1

	)

840 
	#CV_L1
 2

	)

841 
	#CV_L2
 4

	)

842 
	#CV_NORM_MASK
 7

	)

843 
	#CV_RELATIVE
 8

	)

844 
	#CV_DIFF
 16

	)

845 
	#CV_MINMAX
 32

	)

847 
	#CV_DIFF_C
 (
CV_DIFF
 | 
CV_C
)

	)

848 
	#CV_DIFF_L1
 (
CV_DIFF
 | 
CV_L1
)

	)

849 
	#CV_DIFF_L2
 (
CV_DIFF
 | 
CV_L2
)

	)

850 
	#CV_RELATIVE_C
 (
CV_RELATIVE
 | 
CV_C
)

	)

851 
	#CV_RELATIVE_L1
 (
CV_RELATIVE
 | 
CV_L1
)

	)

852 
	#CV_RELATIVE_L2
 (
CV_RELATIVE
 | 
CV_L2
)

	)

855 
CVAPI
(Ë
cvN‹m
–c⁄° 
CvAº
* 
¨r1
, c⁄° CvAº* 
¨r2
 
CV_DEFAULT
(
NULL
),

856 
n‹m_ty≥
 
CV_DEFAULT
(
CV_L2
),

857 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

859 
CVAPI
(Ë
cvN‹mÆize
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

860 
a
 
CV_DEFAULT
(1.), 
b
 CV_DEFAULT(0.),

861 
n‹m_ty≥
 
CV_DEFAULT
(
CV_L2
),

862 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

865 
	#CV_REDUCE_SUM
 0

	)

866 
	#CV_REDUCE_AVG
 1

	)

867 
	#CV_REDUCE_MAX
 2

	)

868 
	#CV_REDUCE_MIN
 3

	)

870 
CVAPI
(Ë
cvRedu˚
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
dim
 
CV_DEFAULT
(-1),

871 
›
 
CV_DEFAULT
(
CV_REDUCE_SUM
) );

877 
	#CV_DXT_FORWARD
 0

	)

878 
	#CV_DXT_INVERSE
 1

	)

879 
	#CV_DXT_SCALE
 2

	)

880 
	#CV_DXT_INV_SCALE
 (
CV_DXT_INVERSE
 + 
CV_DXT_SCALE
)

	)

881 
	#CV_DXT_INVERSE_SCALE
 
CV_DXT_INV_SCALE


	)

882 
	#CV_DXT_ROWS
 4

	)

883 
	#CV_DXT_MUL_CONJ
 8

	)

889 
CVAPI
(Ë
cvDFT
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
Êags
,

890 
n⁄zîo_rows
 
CV_DEFAULT
(0) );

891 
	#cvFFT
 
cvDFT


	)

894 
CVAPI
(Ë
cvMulS≥˘rums
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

895 
CvAº
* 
d°
, 
Êags
 );

898 
CVAPI
(Ë
cvGëO±imÆDFTSize
–
size0
 );

901 
CVAPI
(Ë
cvDCT
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
Êags
 );

908 
CVAPI
(Ë
cvSli˚Lígth
–
CvSli˚
 
¶i˚
, c⁄° 
CvSeq
* 
£q
 );

914 
CVAPI
(
CvMemSt‹age
*Ë
cvCª©eMemSt‹age
–
block_size
 
CV_DEFAULT
(0));

918 
CVAPI
(
CvMemSt‹age
*Ë
cvCª©eChûdMemSt‹age
–CvMemSt‹age* 
∑ª¡
 );

923 
CVAPI
(Ë
cvRñó£MemSt‹age
–
CvMemSt‹age
** 
°‹age
 );

930 
CVAPI
(Ë
cvCÀ¨MemSt‹age
–
CvMemSt‹age
* 
°‹age
 );

933 
CVAPI
(Ë
cvSaveMemSt‹agePos
–c⁄° 
CvMemSt‹age
* 
°‹age
, 
CvMemSt‹agePos
* 
pos
 );

936 
CVAPI
(Ë
cvRe°‹eMemSt‹agePos
–
CvMemSt‹age
* 
°‹age
, 
CvMemSt‹agePos
* 
pos
 );

939 
CVAPI
(*Ë
cvMemSt‹ageAŒoc
–
CvMemSt‹age
* 
°‹age
, 
size_t
 
size
 );

942 
CVAPI
(
CvSåög
Ë
cvMemSt‹ageAŒocSåög
–
CvMemSt‹age
* 
°‹age
, c⁄° * 
±r
,

943 
Àn
 
CV_DEFAULT
(-1) );

946 
CVAPI
(
CvSeq
*Ë
cvCª©eSeq
–
£q_Êags
, 
size_t
 
hódî_size
,

947 
size_t
 
ñem_size
, 
CvMemSt‹age
* 
°‹age
 );

951 
CVAPI
(Ë
cvSëSeqBlockSize
–
CvSeq
* 
£q
, 
dñè_ñems
 );

955 
CVAPI
(
sch¨
*Ë
cvSeqPush
–
CvSeq
* 
£q
, c⁄° * 
ñemít
 
CV_DEFAULT
(
NULL
));

959 
CVAPI
(
sch¨
*Ë
cvSeqPushFr⁄t
–
CvSeq
* 
£q
, c⁄° * 
ñemít
 
CV_DEFAULT
(
NULL
));

963 
CVAPI
(Ë
cvSeqP›
–
CvSeq
* 
£q
, * 
ñemít
 
CV_DEFAULT
(
NULL
));

967 
CVAPI
(Ë
cvSeqP›Fr⁄t
–
CvSeq
* 
£q
, * 
ñemít
 
CV_DEFAULT
(
NULL
));

970 
	#CV_FRONT
 1

	)

971 
	#CV_BACK
 0

	)

973 
CVAPI
(Ë
cvSeqPushMu…i
–
CvSeq
* 
£q
, c⁄° * 
ñemíts
,

974 
cou¡
, 
ö_‰⁄t
 
CV_DEFAULT
(0) );

977 
CVAPI
(Ë
cvSeqP›Mu…i
–
CvSeq
* 
£q
, * 
ñemíts
,

978 
cou¡
, 
ö_‰⁄t
 
CV_DEFAULT
(0) );

982 
CVAPI
(
sch¨
*Ë
cvSeqIn£π
–
CvSeq
* 
£q
, 
bef‹e_ödex
,

983 c⁄° * 
ñemít
 
CV_DEFAULT
(
NULL
));

986 
CVAPI
(Ë
cvSeqRemove
–
CvSeq
* 
£q
, 
ödex
 );

992 
CVAPI
(Ë
cvCÀ¨Seq
–
CvSeq
* 
£q
 );

998 
CVAPI
(
sch¨
*Ë
cvGëSeqEÀm
–c⁄° 
CvSeq
* 
£q
, 
ödex
 );

1002 
CVAPI
(Ë
cvSeqEÀmIdx
–c⁄° 
CvSeq
* 
£q
, c⁄° * 
ñemít
,

1003 
CvSeqBlock
** 
block
 
CV_DEFAULT
(
NULL
) );

1006 
CVAPI
(Ë
cvSèπAµídToSeq
–
CvSeq
* 
£q
, 
CvSeqWrôî
* 
wrôî
 );

1010 
CVAPI
(Ë
cvSèπWrôeSeq
–
£q_Êags
, 
hódî_size
,

1011 
ñem_size
, 
CvMemSt‹age
* 
°‹age
,

1012 
CvSeqWrôî
* 
wrôî
 );

1018 
CVAPI
(
CvSeq
*Ë
cvEndWrôeSeq
–
CvSeqWrôî
* 
wrôî
 );

1023 
CVAPI
(Ë
cvFlushSeqWrôî
–
CvSeqWrôî
* 
wrôî
 );

1028 
CVAPI
(Ë
cvSèπRódSeq
–c⁄° 
CvSeq
* 
£q
, 
CvSeqRódî
* 
ªadî
,

1029 
ªvî£
 
CV_DEFAULT
(0) );

1033 
CVAPI
(Ë
cvGëSeqRódîPos
–
CvSeqRódî
* 
ªadî
 );

1038 
CVAPI
(Ë
cvSëSeqRódîPos
–
CvSeqRódî
* 
ªadî
, 
ödex
,

1039 
is_ªœtive
 
CV_DEFAULT
(0));

1042 
CVAPI
(*Ë
cvCvtSeqToAºay
–c⁄° 
CvSeq
* 
£q
, * 
ñemíts
,

1043 
CvSli˚
 
¶i˚
 
CV_DEFAULT
(
CV_WHOLE_SEQ
) );

1048 
CVAPI
(
CvSeq
*Ë
cvMakeSeqHódîF‹Aºay
–
£q_ty≥
, 
hódî_size
,

1049 
ñem_size
, * 
ñemíts
, 
tŸÆ
,

1050 
CvSeq
* 
£q
, 
CvSeqBlock
* 
block
 );

1053 
CVAPI
(
CvSeq
*Ë
cvSeqSli˚
–c⁄° CvSeq* 
£q
, 
CvSli˚
 
¶i˚
,

1054 
CvMemSt‹age
* 
°‹age
 
CV_DEFAULT
(
NULL
),

1055 
c›y_d©a
 
CV_DEFAULT
(0));

1057 
CV_INLINE
 
CvSeq
* 
cvCl⁄eSeq
–c⁄° CvSeq* 
£q
, 
CvMemSt‹age
* 
°‹age
 
CV_DEFAULT
(
NULL
))

1059  
cvSeqSli˚
–
£q
, 
CV_WHOLE_SEQ
, 
°‹age
, 1 );

1063 
CVAPI
(Ë
cvSeqRemoveSli˚
–
CvSeq
* 
£q
, 
CvSli˚
 
¶i˚
 );

1066 
CVAPI
(Ë
cvSeqIn£πSli˚
–
CvSeq
* 
£q
, 
bef‹e_ödex
, c⁄° 
CvAº
* 
‰om_¨r
 );

1069 (
CV_CDECL
* 
	tCvCmpFunc
)(c⁄° * 
	ta
, c⁄° * 
	tb
, * 
	tu£rd©a
 );

1072 
CVAPI
(Ë
cvSeqS‹t
–
CvSeq
* 
£q
, 
CvCmpFunc
 
func
, * 
u£rd©a
 
CV_DEFAULT
(
NULL
) );

1075 
CVAPI
(
sch¨
*Ë
cvSeqSórch
–
CvSeq
* 
£q
, c⁄° * 
ñem
, 
CvCmpFunc
 
func
,

1076 
is_s‹ãd
, * 
ñem_idx
,

1077 * 
u£rd©a
 
CV_DEFAULT
(
NULL
) );

1080 
CVAPI
(Ë
cvSeqInvît
–
CvSeq
* 
£q
 );

1083 
CVAPI
(Ë
cvSeqP¨tôi⁄
–c⁄° 
CvSeq
* 
£q
, 
CvMemSt‹age
* 
°‹age
,

1084 
CvSeq
** 
œbñs
, 
CvCmpFunc
 
is_equÆ
, * 
u£rd©a
 );

1087 
CVAPI
(Ë
cvCh™geSeqBlock
–* 
ªadî
, 
dúe˘i⁄
 );

1088 
CVAPI
(Ë
cvCª©eSeqBlock
–
CvSeqWrôî
* 
wrôî
 );

1092 
CVAPI
(
CvSë
*Ë
cvCª©eSë
–
£t_Êags
, 
hódî_size
,

1093 
ñem_size
, 
CvMemSt‹age
* 
°‹age
 );

1096 
CVAPI
(Ë
cvSëAdd
–
CvSë
* 
£t_hódî
, 
CvSëEÀm
* 
ñem
 
CV_DEFAULT
(
NULL
),

1097 
CvSëEÀm
** 
ö£πed_ñem
 
CV_DEFAULT
(
NULL
) );

1100 
CV_INLINE
 
CvSëEÀm
* 
cvSëNew
–
CvSë
* 
£t_hódî
 )

1102 
CvSëEÀm
* 
ñem
 = 
£t_hódî
->
‰ì_ñems
;

1103 if–
ñem
 )

1105 
£t_hódî
->
‰ì_ñems
 = 
ñem
->
√xt_‰ì
;

1106 
ñem
->
Êags
 =ÉÀm->Êag†& 
CV_SET_ELEM_IDX_MASK
;

1107 
£t_hódî
->
a˘ive_cou¡
++;

1110 
cvSëAdd
–
£t_hódî
, 
NULL
, (
CvSëEÀm
**)&
ñem
 );

1111  
ñem
;

1115 
CV_INLINE
 
cvSëRemoveByPå
–
CvSë
* 
£t_hódî
, * 
ñem
 )

1117 
CvSëEÀm
* 
_ñem
 = (CvSëEÀm*)
ñem
;

1118 
as£π
–
_ñem
->
Êags
 >= 0 );

1119 
_ñem
->
√xt_‰ì
 = 
£t_hódî
->
‰ì_ñems
;

1120 
_ñem
->
Êags
 = (_ñem->Êag†& 
CV_SET_ELEM_IDX_MASK
Ë| 
CV_SET_ELEM_FREE_FLAG
;

1121 
£t_hódî
->
‰ì_ñems
 = 
_ñem
;

1122 
£t_hódî
->
a˘ive_cou¡
--;

1126 
CVAPI
(Ë
cvSëRemove
–
CvSë
* 
£t_hódî
, 
ödex
 );

1130 
CV_INLINE
 
CvSëEÀm
* 
cvGëSëEÀm
–c⁄° 
CvSë
* 
£t_hódî
, 
idx
 )

1132 
CvSëEÀm
* 
ñem
 = (CvSëEÀm*)(*)
cvGëSeqEÀm
–(
CvSeq
*)
£t_hódî
, 
idx
 );

1133  
ñem
 && 
CV_IS_SET_ELEM
(Élem ) ?Élem : 0;

1137 
CVAPI
(Ë
cvCÀ¨Së
–
CvSë
* 
£t_hódî
 );

1140 
CVAPI
(
CvGøph
*Ë
cvCª©eGøph
–
gøph_Êags
, 
hódî_size
,

1141 
vtx_size
, 
edge_size
,

1142 
CvMemSt‹age
* 
°‹age
 );

1145 
CVAPI
(Ë
cvGøphAddVtx
–
CvGøph
* 
gøph
, c⁄° 
CvGøphVtx
* 
vtx
 
CV_DEFAULT
(
NULL
),

1146 
CvGøphVtx
** 
ö£πed_vtx
 
CV_DEFAULT
(
NULL
) );

1150 
CVAPI
(Ë
cvGøphRemoveVtx
–
CvGøph
* 
gøph
, 
ödex
 );

1151 
CVAPI
(Ë
cvGøphRemoveVtxByPå
–
CvGøph
* 
gøph
, 
CvGøphVtx
* 
vtx
 );

1158 
CVAPI
(Ë
cvGøphAddEdge
–
CvGøph
* 
gøph
,

1159 
°¨t_idx
, 
íd_idx
,

1160 c⁄° 
CvGøphEdge
* 
edge
 
CV_DEFAULT
(
NULL
),

1161 
CvGøphEdge
** 
ö£πed_edge
 
CV_DEFAULT
(
NULL
) );

1163 
CVAPI
(Ë
cvGøphAddEdgeByPå
–
CvGøph
* 
gøph
,

1164 
CvGøphVtx
* 
°¨t_vtx
, CvGøphVtx* 
íd_vtx
,

1165 c⁄° 
CvGøphEdge
* 
edge
 
CV_DEFAULT
(
NULL
),

1166 
CvGøphEdge
** 
ö£πed_edge
 
CV_DEFAULT
(
NULL
) );

1169 
CVAPI
(Ë
cvGøphRemoveEdge
–
CvGøph
* 
gøph
, 
°¨t_idx
, 
íd_idx
 );

1170 
CVAPI
(Ë
cvGøphRemoveEdgeByPå
–
CvGøph
* 
gøph
, 
CvGøphVtx
* 
°¨t_vtx
,

1171 
CvGøphVtx
* 
íd_vtx
 );

1174 
CVAPI
(
CvGøphEdge
*Ë
cvFödGøphEdge
–c⁄° 
CvGøph
* 
gøph
, 
°¨t_idx
, 
íd_idx
 );

1175 
CVAPI
(
CvGøphEdge
*Ë
cvFödGøphEdgeByPå
–c⁄° 
CvGøph
* 
gøph
,

1176 c⁄° 
CvGøphVtx
* 
°¨t_vtx
,

1177 c⁄° 
CvGøphVtx
* 
íd_vtx
 );

1178 
	#cvGøphFödEdge
 
cvFödGøphEdge


	)

1179 
	#cvGøphFödEdgeByPå
 
cvFödGøphEdgeByPå


	)

1182 
CVAPI
(Ë
cvCÀ¨Gøph
–
CvGøph
* 
gøph
 );

1186 
CVAPI
(Ë
cvGøphVtxDegªe
–c⁄° 
CvGøph
* 
gøph
, 
vtx_idx
 );

1187 
CVAPI
(Ë
cvGøphVtxDegªeByPå
–c⁄° 
CvGøph
* 
gøph
, c⁄° 
CvGøphVtx
* 
vtx
 );

1191 
	#cvGëGøphVtx
–
gøph
, 
idx
 ) (
CvGøphVtx
*)
	`cvGëSëEÀm
((
CvSë
*)(gøph), (idx))

	)

1194 
	#cvGøphVtxIdx
–
gøph
, 
vtx
 ) ((vtx)->
Êags
 & 
CV_SET_ELEM_IDX_MASK
)

	)

1197 
	#cvGøphEdgeIdx
–
gøph
, 
edge
 ) (”dge)->
Êags
 & 
CV_SET_ELEM_IDX_MASK
)

	)

1199 
	#cvGøphGëVtxCou¡
–
gøph
 ) ((gøph)->
a˘ive_cou¡
)

	)

1200 
	#cvGøphGëEdgeCou¡
–
gøph
 ) ((gøph)->
edges
->
a˘ive_cou¡
)

	)

1202 
	#CV_GRAPH_VERTEX
 1

	)

1203 
	#CV_GRAPH_TREE_EDGE
 2

	)

1204 
	#CV_GRAPH_BACK_EDGE
 4

	)

1205 
	#CV_GRAPH_FORWARD_EDGE
 8

	)

1206 
	#CV_GRAPH_CROSS_EDGE
 16

	)

1207 
	#CV_GRAPH_ANY_EDGE
 30

	)

1208 
	#CV_GRAPH_NEW_TREE
 32

	)

1209 
	#CV_GRAPH_BACKTRACKING
 64

	)

1210 
	#CV_GRAPH_OVER
 -1

	)

1212 
	#CV_GRAPH_ALL_ITEMS
 -1

	)

1215 
	#CV_GRAPH_ITEM_VISITED_FLAG
 (1 << 30)

	)

1216 
	#CV_IS_GRAPH_VERTEX_VISITED
(
vtx
) \

1217 (((
CvGøphVtx
*)(
vtx
))->
Êags
 & 
CV_GRAPH_ITEM_VISITED_FLAG
)

	)

1218 
	#CV_IS_GRAPH_EDGE_VISITED
(
edge
) \

1219 (((
CvGøphEdge
*)(
edge
))->
Êags
 & 
CV_GRAPH_ITEM_VISITED_FLAG
)

	)

1220 
	#CV_GRAPH_SEARCH_TREE_NODE_FLAG
 (1 << 29)

	)

1221 
	#CV_GRAPH_FORWARD_EDGE_FLAG
 (1 << 28)

	)

1223 
	sCvGøphSˇ¬î


1225 
CvGøphVtx
* 
vtx
;

1226 
CvGøphVtx
* 
d°
;

1227 
CvGøphEdge
* 
edge
;

1229 
CvGøph
* 
gøph
;

1230 
CvSeq
* 
°ack
;

1231 
ödex
;

1232 
mask
;

1234 
	tCvGøphSˇ¬î
;

1237 
CVAPI
(
CvGøphSˇ¬î
*Ë
cvCª©eGøphSˇ¬î
–
CvGøph
* 
gøph
,

1238 
CvGøphVtx
* 
vtx
 
CV_DEFAULT
(
NULL
),

1239 
mask
 
CV_DEFAULT
(
CV_GRAPH_ALL_ITEMS
));

1242 
CVAPI
(Ë
cvRñó£GøphSˇ¬î
–
CvGøphSˇ¬î
** 
sˇ¬î
 );

1245 
CVAPI
(Ë
cvNextGøphIãm
–
CvGøphSˇ¬î
* 
sˇ¬î
 );

1248 
CVAPI
(
CvGøph
*Ë
cvCl⁄eGøph
–c⁄° CvGøph* 
gøph
, 
CvMemSt‹age
* 
°‹age
 );

1264 
	#CV_RGB
–
r
, 
g
, 
b
 ) 
	`cvSˇœr
–(b), (g), (r), 0 )

	)

1265 
	#CV_FILLED
 -1

	)

1267 
	#CV_AA
 16

	)

1270 
CVAPI
(Ë
cvLöe
–
CvAº
* 
img
, 
CvPoöt
 
±1
, CvPoöà
±2
,

1271 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1272 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0) );

1276 
CVAPI
(Ë
cvRe˘™gÀ
–
CvAº
* 
img
, 
CvPoöt
 
±1
, CvPoöà
±2
,

1277 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1278 
löe_ty≥
 
CV_DEFAULT
(8),

1279 
shi·
 
CV_DEFAULT
(0));

1282 
CVAPI
(Ë
cvRe˘™gÀR
–
CvAº
* 
img
, 
CvRe˘
 
r
,

1283 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1284 
löe_ty≥
 
CV_DEFAULT
(8),

1285 
shi·
 
CV_DEFAULT
(0));

1290 
CVAPI
(Ë
cvCú˛e
–
CvAº
* 
img
, 
CvPoöt
 
˚¡î
, 
ødius
,

1291 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1292 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0));

1297 
CVAPI
(Ë
cvEŒù£
–
CvAº
* 
img
, 
CvPoöt
 
˚¡î
, 
CvSize
 
axes
,

1298 
™gÀ
, 
°¨t_™gÀ
, 
íd_™gÀ
,

1299 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1300 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0));

1302 
CV_INLINE
 
cvEŒù£Box
–
CvAº
* 
img
, 
CvBox2D
 
box
, 
CvSˇœr
 
cﬁ‹
,

1303 
thick√ss
 
CV_DEFAULT
(1),

1304 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0) )

1306 
CvSize
 
axes
;

1307 
axes
.
width
 = 
cvRound
(
box
.
size
.width*0.5);

1308 
axes
.
height
 = 
cvRound
(
box
.
size
.height*0.5);

1310 
cvEŒù£
–
img
, 
cvPoötFrom32f
–
box
.
˚¡î
 ), 
axes
, box.
™gÀ
,

1311 0, 360, 
cﬁ‹
, 
thick√ss
, 
löe_ty≥
, 
shi·
 );

1315 
CVAPI
(Ë
cvFûlC⁄vexPﬁy
–
CvAº
* 
img
, c⁄° 
CvPoöt
* 
±s
, 
≈ts
, 
CvSˇœr
 
cﬁ‹
,

1316 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0));

1319 
CVAPI
(Ë
cvFûlPﬁy
–
CvAº
* 
img
, 
CvPoöt
** 
±s
, c⁄° * 
≈ts
,

1320 
c⁄tours
, 
CvSˇœr
 
cﬁ‹
,

1321 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0) );

1324 
CVAPI
(Ë
cvPﬁyLöe
–
CvAº
* 
img
, 
CvPoöt
** 
±s
, c⁄° * 
≈ts
, 
c⁄tours
,

1325 
is_˛o£d
, 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1326 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0) );

1328 
	#cvDøwRe˘
 
cvRe˘™gÀ


	)

1329 
	#cvDøwLöe
 
cvLöe


	)

1330 
	#cvDøwCú˛e
 
cvCú˛e


	)

1331 
	#cvDøwEŒù£
 
cvEŒù£


	)

1332 
	#cvDøwPﬁyLöe
 
cvPﬁyLöe


	)

1337 
CVAPI
(Ë
cvClùLöe
–
CvSize
 
img_size
, 
CvPoöt
* 
±1
, CvPoöt* 
±2
 );

1342 
CVAPI
(Ë
cvInôLöeIãøt‹
–c⁄° 
CvAº
* 
image
, 
CvPoöt
 
±1
, CvPoöà
±2
,

1343 
CvLöeIãøt‹
* 
löe_ôî©‹
,

1344 
c⁄√˘ivôy
 
CV_DEFAULT
(8),

1345 
À·_to_right
 
CV_DEFAULT
(0));

1348 
	#CV_NEXT_LINE_POINT
–
löe_ôî©‹
 ) \

1350 
_löe_ôî©‹_mask
 = (
löe_ôî©‹
).
îr
 < 0 ? -1 : 0; \

1351 (
löe_ôî©‹
).
îr
 +÷öe_ôî©‹).
möus_dñè
 + \

1352 ((
löe_ôî©‹
).
∂us_dñè
 & 
_löe_ôî©‹_mask
); \

1353 (
löe_ôî©‹
).
±r
 +÷öe_ôî©‹).
möus_°ï
 + \

1354 ((
löe_ôî©‹
).
∂us_°ï
 & 
_löe_ôî©‹_mask
); \

1355 }

	)

1359 
	#CV_FONT_HERSHEY_SIMPLEX
 0

	)

1360 
	#CV_FONT_HERSHEY_PLAIN
 1

	)

1361 
	#CV_FONT_HERSHEY_DUPLEX
 2

	)

1362 
	#CV_FONT_HERSHEY_COMPLEX
 3

	)

1363 
	#CV_FONT_HERSHEY_TRIPLEX
 4

	)

1364 
	#CV_FONT_HERSHEY_COMPLEX_SMALL
 5

	)

1365 
	#CV_FONT_HERSHEY_SCRIPT_SIMPLEX
 6

	)

1366 
	#CV_FONT_HERSHEY_SCRIPT_COMPLEX
 7

	)

1369 
	#CV_FONT_ITALIC
 16

	)

1371 
	#CV_FONT_VECTOR0
 
CV_FONT_HERSHEY_SIMPLEX


	)

1375 
	sCvF⁄t


1377 c⁄° * 
«meF⁄t
;

1378 
CvSˇœr
 
cﬁ‹
;

1379 
f⁄t_Á˚
;

1380 c⁄° * 
ascii
;

1381 c⁄° * 
gªek
;

1382 c⁄° * 
cyrûlic
;

1383 
hsˇÀ
, 
vsˇÀ
;

1384 
shór
;

1385 
thick√ss
;

1386 
dx
;

1387 
löe_ty≥
;

1389 
	tCvF⁄t
;

1392 
CVAPI
(Ë
cvInôF⁄t
–
CvF⁄t
* 
f⁄t
, 
f⁄t_Á˚
,

1393 
hsˇÀ
, 
vsˇÀ
,

1394 
shór
 
CV_DEFAULT
(0),

1395 
thick√ss
 
CV_DEFAULT
(1),

1396 
löe_ty≥
 
CV_DEFAULT
(8));

1398 
CV_INLINE
 
CvF⁄t
 
cvF⁄t
–
sˇÀ
, 
thick√ss
 
CV_DEFAULT
(1) )

1400 
CvF⁄t
 
f⁄t
;

1401 
cvInôF⁄t
–&
f⁄t
, 
CV_FONT_HERSHEY_PLAIN
, 
sˇÀ
, sˇÀ, 0, 
thick√ss
, 
CV_AA
 );

1402  
f⁄t
;

1407 
CVAPI
(Ë
cvPutText
–
CvAº
* 
img
, c⁄° * 
ãxt
, 
CvPoöt
 
‹g
,

1408 c⁄° 
CvF⁄t
* 
f⁄t
, 
CvSˇœr
 
cﬁ‹
 );

1411 
CVAPI
(Ë
cvGëTextSize
–c⁄° * 
ãxt_°rög
, c⁄° 
CvF⁄t
* 
f⁄t
,

1412 
CvSize
* 
ãxt_size
, * 
ba£löe
 );

1419 
CVAPI
(
CvSˇœr
Ë
cvCﬁ‹ToSˇœr
–
∑cked_cﬁ‹
, 
¨πy≥
 );

1427 
CVAPI
(Ë
cvEŒù£2Pﬁy
–
CvPoöt
 
˚¡î
, 
CvSize
 
axes
,

1428 
™gÀ
, 
¨c_°¨t
, 
¨c_íd
, 
CvPoöt
 * 
±s
, 
dñè
 );

1431 
CVAPI
(Ë
cvDøwC⁄tours
–
CvAº
 *
img
, 
CvSeq
* 
c⁄tour
,

1432 
CvSˇœr
 
exã∫Æ_cﬁ‹
, CvSˇœ∏
hﬁe_cﬁ‹
,

1433 
max_Àvñ
, 
thick√ss
 
CV_DEFAULT
(1),

1434 
löe_ty≥
 
CV_DEFAULT
(8),

1435 
CvPoöt
 
off£t
 
CV_DEFAULT
(
cvPoöt
(0,0)));

1439 
CVAPI
(Ë
cvLUT
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, c⁄° CvAº* 
lut
 );

1443 
	sCvTªeNodeIãøt‹


1445 c⁄° * 
node
;

1446 
Àvñ
;

1447 
max_Àvñ
;

1449 
	tCvTªeNodeIãøt‹
;

1451 
CVAPI
(Ë
cvInôTªeNodeIãøt‹
–
CvTªeNodeIãøt‹
* 
åì_ôî©‹
,

1452 c⁄° * 
fú°
, 
max_Àvñ
 );

1453 
CVAPI
(*Ë
cvNextTªeNode
–
CvTªeNodeIãøt‹
* 
åì_ôî©‹
 );

1454 
CVAPI
(*Ë
cvPªvTªeNode
–
CvTªeNodeIãøt‹
* 
åì_ôî©‹
 );

1459 
CVAPI
(Ë
cvIn£πNodeI¡oTªe
–* 
node
, * 
∑ª¡
, * 
‰ame
 );

1462 
CVAPI
(Ë
cvRemoveNodeFromTªe
–* 
node
, * 
‰ame
 );

1466 
CVAPI
(
CvSeq
*Ë
cvTªeToNodeSeq
–c⁄° * 
fú°
, 
hódî_size
,

1467 
CvMemSt‹age
* 
°‹age
 );

1471 
	#CV_KMEANS_USE_INITIAL_LABELS
 1

	)

1472 
CVAPI
(Ë
cvKMóns2
–c⁄° 
CvAº
* 
ßm∂es
, 
˛u°î_cou¡
, CvAº* 
œbñs
,

1473 
CvTîmCrôîü
 
ãrm¸ô
, 
©ãm±s
 
CV_DEFAULT
(1),

1474 
CvRNG
* 
∫g
 
CV_DEFAULT
(0), 
Êags
 CV_DEFAULT(0),

1475 
CvAº
* 
_˚¡îs
 
CV_DEFAULT
(0), * 
com∑˘√ss
 CV_DEFAULT(0) );

1482 
CVAPI
(Ë
cvRegi°îModuÀ
–c⁄° 
CvModuÀInfo
* 
moduÀ_öfo
 );

1485 
CVAPI
(Ë
cvU£O±imized
–
⁄_off
 );

1488 
CVAPI
(Ë
cvGëModuÀInfo
–c⁄° * 
moduÀ_«me
,

1489 c⁄° ** 
vîsi⁄
,

1490 c⁄° ** 
lﬂded_add⁄_∂ugös
 );

1492 * (
	tCV_CDECL
 *
	tCvAŒocFunc
)(
	tsize_t
 
	tsize
, * 
	tu£rd©a
);

1493 (
CV_CDECL
 *
	tCvFªeFunc
)(* 
	tµå
, * 
	tu£rd©a
);

1497 
CVAPI
(Ë
cvSëMem‹yM™agî
–
CvAŒocFunc
 
Æloc_func
 
CV_DEFAULT
(
NULL
),

1498 
CvFªeFunc
 
‰ì_func
 
CV_DEFAULT
(
NULL
),

1499 * 
u£rd©a
 
CV_DEFAULT
(
NULL
));

1502 
I∂Image
* (
	tCV_STDCALL
* 
	tCv_ùlCª©eImageHódî
)

1504 
	tI∂ROI
*,
	tI∂Image
*,*,
	tI∂TûeInfo
*);

1505 (
CV_STDCALL
* 
	tCv_ùlAŒoˇãImageD©a
)(
	tI∂Image
*,,);

1506 (
CV_STDCALL
* 
	tCv_ùlDóŒoˇã
)(
	tI∂Image
*,);

1507 
I∂ROI
* (
	tCV_STDCALL
* 
	tCv_ùlCª©eROI
)(,,,,);

1508 
I∂Image
* (
	tCV_STDCALL
* 
	tCv_ùlCl⁄eImage
)(c⁄° 
	tI∂Image
*);

1511 
CVAPI
(Ë
cvSëIPLAŒoˇt‹s
–
Cv_ùlCª©eImageHódî
 
¸óã_hódî
,

1512 
Cv_ùlAŒoˇãImageD©a
 
Æloˇã_d©a
,

1513 
Cv_ùlDóŒoˇã
 
dóŒoˇã
,

1514 
Cv_ùlCª©eROI
 
¸óã_roi
,

1515 
Cv_ùlCl⁄eImage
 
˛⁄e_image
 );

1517 
	#CV_TURN_ON_IPL_COMPATIBILITY
() \

1518 
	`cvSëIPLAŒoˇt‹s
–
ùlCª©eImageHódî
, 
ùlAŒoˇãImage
, \

1519 
ùlDóŒoˇã
, 
ùlCª©eROI
, 
ùlCl⁄eImage
 )

	)

1528 
CVAPI
(
CvFûeSt‹age
*Ë
cvO≥nFûeSt‹age
–c⁄° * 
fûíame
, 
CvMemSt‹age
* 
mem°‹age
,

1529 
Êags
, c⁄° * 
ícodög
 
CV_DEFAULT
(
NULL
) );

1532 
CVAPI
(Ë
cvRñó£FûeSt‹age
–
CvFûeSt‹age
** 
fs
 );

1535 
CVAPI
(c⁄° *Ë
cvAârVÆue
–c⁄° 
CvAârLi°
* 
©å
, c⁄° * 
©å_«me
 );

1538 
CVAPI
(Ë
cvSèπWrôeSåu˘
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
,

1539 
°ru˘_Êags
, c⁄° * 
ty≥_«me
 
CV_DEFAULT
(
NULL
),

1540 
CvAârLi°
 
©åibuãs
 
CV_DEFAULT
(
cvAârLi°
()));

1543 
CVAPI
(Ë
cvEndWrôeSåu˘
–
CvFûeSt‹age
* 
fs
 );

1546 
CVAPI
(Ë
cvWrôeI¡
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
, 
vÆue
 );

1549 
CVAPI
(Ë
cvWrôeRól
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
, 
vÆue
 );

1552 
CVAPI
(Ë
cvWrôeSåög
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
,

1553 c⁄° * 
°r
, 
quŸe
 
CV_DEFAULT
(0) );

1556 
CVAPI
(Ë
cvWrôeCommít
–
CvFûeSt‹age
* 
fs
, c⁄° * 
commít
,

1557 
eﬁ_commít
 );

1561 
CVAPI
(Ë
cvWrôe
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
, c⁄° * 
±r
,

1562 
CvAârLi°
 
©åibuãs
 
CV_DEFAULT
(
cvAârLi°
()));

1565 
CVAPI
(Ë
cvSèπNextSåóm
–
CvFûeSt‹age
* 
fs
 );

1568 
CVAPI
(Ë
cvWrôeRawD©a
–
CvFûeSt‹age
* 
fs
, c⁄° * 
§c
,

1569 
Àn
, c⁄° * 
dt
 );

1573 
CVAPI
(
CvSåögHashNode
*Ë
cvGëHashedKey
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
,

1574 
Àn
 
CV_DEFAULT
(-1),

1575 
¸óã_missög
 
CV_DEFAULT
(0));

1579 
CVAPI
(
CvFûeNode
*Ë
cvGëRoŸFûeNode
–c⁄° 
CvFûeSt‹age
* 
fs
,

1580 
°ªam_ödex
 
CV_DEFAULT
(0) );

1584 
CVAPI
(
CvFûeNode
*Ë
cvGëFûeNode
–
CvFûeSt‹age
* 
fs
, CvFûeNode* 
m≠
,

1585 c⁄° 
CvSåögHashNode
* 
key
,

1586 
¸óã_missög
 
CV_DEFAULT
(0) );

1589 
CVAPI
(
CvFûeNode
*Ë
cvGëFûeNodeByName
–c⁄° 
CvFûeSt‹age
* 
fs
,

1590 c⁄° 
CvFûeNode
* 
m≠
,

1591 c⁄° * 
«me
 );

1593 
CV_INLINE
 
cvRódI¡
–c⁄° 
CvFûeNode
* 
node
, 
deÁu…_vÆue
 
CV_DEFAULT
(0) )

1595  !
node
 ? 
deÁu…_vÆue
 :

1596 
CV_NODE_IS_INT
(
node
->
èg
Ë?Çode->
d©a
.
i
 :

1597 
CV_NODE_IS_REAL
(
node
->
èg
Ë? 
cvRound
“ode->
d©a
.
f
) : 0x7fffffff;

1601 
CV_INLINE
 
cvRódI¡ByName
–c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
m≠
,

1602 c⁄° * 
«me
, 
deÁu…_vÆue
 
CV_DEFAULT
(0) )

1604  
cvRódI¡
–
cvGëFûeNodeByName
–
fs
, 
m≠
, 
«me
 ), 
deÁu…_vÆue
 );

1608 
CV_INLINE
 
cvRódRól
–c⁄° 
CvFûeNode
* 
node
, 
deÁu…_vÆue
 
CV_DEFAULT
(0.) )

1610  !
node
 ? 
deÁu…_vÆue
 :

1611 
CV_NODE_IS_INT
(
node
->
èg
Ë? (Íode->
d©a
.
i
 :

1612 
CV_NODE_IS_REAL
(
node
->
èg
Ë?Çode->
d©a
.
f
 : 1e300;

1616 
CV_INLINE
 
cvRódRólByName
–c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
m≠
,

1617 c⁄° * 
«me
, 
deÁu…_vÆue
 
CV_DEFAULT
(0.) )

1619  
cvRódRól
–
cvGëFûeNodeByName
–
fs
, 
m≠
, 
«me
 ), 
deÁu…_vÆue
 );

1623 
CV_INLINE
 c⁄° * 
cvRódSåög
–c⁄° 
CvFûeNode
* 
node
,

1624 c⁄° * 
deÁu…_vÆue
 
CV_DEFAULT
(
NULL
) )

1626  !
node
 ? 
deÁu…_vÆue
 : 
CV_NODE_IS_STRING
“ode->
èg
Ë?Çode->
d©a
.
°r
.
±r
 : 0;

1630 
CV_INLINE
 c⁄° * 
cvRódSåögByName
–c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
m≠
,

1631 c⁄° * 
«me
, c⁄° * 
deÁu…_vÆue
 
CV_DEFAULT
(
NULL
) )

1633  
cvRódSåög
–
cvGëFûeNodeByName
–
fs
, 
m≠
, 
«me
 ), 
deÁu…_vÆue
 );

1638 
CVAPI
(*Ë
cvRód
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
,

1639 
CvAârLi°
* 
©åibuãs
 
CV_DEFAULT
(
NULL
));

1642 
CV_INLINE
 * 
cvRódByName
–
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
m≠
,

1643 c⁄° * 
«me
, 
CvAârLi°
* 
©åibuãs
 
CV_DEFAULT
(
NULL
) )

1645  
cvRód
–
fs
, 
cvGëFûeNodeByName
–fs, 
m≠
, 
«me
 ), 
©åibuãs
 );

1650 
CVAPI
(Ë
cvSèπRódRawD©a
–c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
§c
,

1651 
CvSeqRódî
* 
ªadî
 );

1654 
CVAPI
(Ë
cvRódRawD©aSli˚
–c⁄° 
CvFûeSt‹age
* 
fs
, 
CvSeqRódî
* 
ªadî
,

1655 
cou¡
, * 
d°
, c⁄° * 
dt
 );

1658 
CVAPI
(Ë
cvRódRawD©a
–c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
§c
,

1659 * 
d°
, c⁄° * 
dt
 );

1662 
CVAPI
(Ë
cvWrôeFûeNode
–
CvFûeSt‹age
* 
fs
, c⁄° * 
√w_node_«me
,

1663 c⁄° 
CvFûeNode
* 
node
, 
embed
 );

1666 
CVAPI
(c⁄° *Ë
cvGëFûeNodeName
–c⁄° 
CvFûeNode
* 
node
 );

1670 
CVAPI
(Ë
cvRegi°îTy≥
–c⁄° 
CvTy≥Info
* 
öfo
 );

1671 
CVAPI
(Ë
cvUƒegi°îTy≥
–c⁄° * 
ty≥_«me
 );

1672 
CVAPI
(
CvTy≥Info
*Ë
cvFú°Ty≥
();

1673 
CVAPI
(
CvTy≥Info
*Ë
cvFödTy≥
–c⁄° * 
ty≥_«me
 );

1674 
CVAPI
(
CvTy≥Info
*Ë
cvTy≥Of
–c⁄° * 
°ru˘_±r
 );

1677 
CVAPI
(Ë
cvRñó£
–** 
°ru˘_±r
 );

1678 
CVAPI
(*Ë
cvCl⁄e
–c⁄° * 
°ru˘_±r
 );

1681 
CVAPI
(Ë
cvSave
–c⁄° * 
fûíame
, c⁄° * 
°ru˘_±r
,

1682 c⁄° * 
«me
 
CV_DEFAULT
(
NULL
),

1683 c⁄° * 
commít
 
CV_DEFAULT
(
NULL
),

1684 
CvAârLi°
 
©åibuãs
 
CV_DEFAULT
(
cvAârLi°
()));

1685 
CVAPI
(*Ë
cvLﬂd
–c⁄° * 
fûíame
,

1686 
CvMemSt‹age
* 
mem°‹age
 
CV_DEFAULT
(
NULL
),

1687 c⁄° * 
«me
 
CV_DEFAULT
(
NULL
),

1688 c⁄° ** 
ªÆ_«me
 
CV_DEFAULT
(
NULL
) );

1694 
CVAPI
(
öt64
Ë
cvGëTickCou¡
( );

1695 
CVAPI
(Ë
cvGëTickFªquícy
( );

1699 
	#CV_CPU_NONE
 0

	)

1700 
	#CV_CPU_MMX
 1

	)

1701 
	#CV_CPU_SSE
 2

	)

1702 
	#CV_CPU_SSE2
 3

	)

1703 
	#CV_CPU_SSE3
 4

	)

1704 
	#CV_CPU_SSSE3
 5

	)

1705 
	#CV_CPU_SSE4_1
 6

	)

1706 
	#CV_CPU_SSE4_2
 7

	)

1707 
	#CV_CPU_POPCNT
 8

	)

1708 
	#CV_CPU_AVX
 10

	)

1709 
	#CV_HARDWARE_MAX_FEATURE
 255

	)

1711 
CVAPI
(Ë
cvCheckH¨dw¨eSuµ‹t
(
„©uª
);

1716 
CVAPI
(Ë
cvGëNumThªads
( );

1717 
CVAPI
(Ë
cvSëNumThªads
–
thªads
 
CV_DEFAULT
(0) );

1719 
CVAPI
(Ë
cvGëThªadNum
( );

1725 
CVAPI
(Ë
cvGëEºSètus
( );

1728 
CVAPI
(Ë
cvSëEºSètus
–
°©us
 );

1730 
	#CV_EºModeLóf
 0

	)

1731 
	#CV_EºModeP¨ít
 1

	)

1732 
	#CV_EºModeSûít
 2

	)

1735 
CVAPI
(Ë
cvGëEºMode
( );

1738 
CVAPI
(Ë
cvSëEºMode
–
mode
 );

1743 
CVAPI
(Ë
cvEº‹
–
°©us
, c⁄° * 
func_«me
,

1744 c⁄° * 
îr_msg
, c⁄° * 
fûe_«me
, 
löe
 );

1747 
CVAPI
(c⁄° *Ë
cvEº‹Så
–
°©us
 );

1750 
CVAPI
(Ë
cvGëEºInfo
–c⁄° ** 
îrcode_desc
, c⁄° ** 
des¸ùti⁄
,

1751 c⁄° ** 
fûíame
, * 
löe
 );

1754 
CVAPI
(Ë
cvEº‹FromIµSètus
–
ùp_°©us
 );

1756 (
CV_CDECL
 *
	tCvEº‹CÆlback
)–
	t°©us
, c⁄° * 
	tfunc_«me
,

1757 c⁄° * 
	tîr_msg
, c⁄° * 
	tfûe_«me
, 
	tlöe
, * 
	tu£rd©a
 );

1760 
CVAPI
(
CvEº‹CÆlback
Ë
cvRedúe˘Eº‹
–CvEº‹CÆlback 
îr‹_h™dÀr
,

1761 * 
u£rd©a
 
CV_DEFAULT
(
NULL
),

1762 ** 
¥ev_u£rd©a
 
CV_DEFAULT
(
NULL
) );

1770 
CVAPI
(Ë
cvNulDevRï‹t
–
°©us
, c⁄° * 
func_«me
, c⁄° * 
îr_msg
,

1771 c⁄° * 
fûe_«me
, 
löe
, * 
u£rd©a
 );

1773 
CVAPI
(Ë
cvStdEºRï‹t
–
°©us
, c⁄° * 
func_«me
, c⁄° * 
îr_msg
,

1774 c⁄° * 
fûe_«me
, 
löe
, * 
u£rd©a
 );

1776 
CVAPI
(Ë
cvGuiBoxRï‹t
–
°©us
, c⁄° * 
func_«me
, c⁄° * 
îr_msg
,

1777 c⁄° * 
fûe_«me
, 
löe
, * 
u£rd©a
 );

1779 
	#OPENCV_ERROR
(
°©us
,
func
,
c⁄ãxt
) \

1780 
	`cvEº‹
((
°©us
),(
func
),(
c⁄ãxt
),
__FILE__
,
__LINE__
)

	)

1782 
	#OPENCV_ERRCHK
(
func
,
c⁄ãxt
) \

1783 {i‡(
	`cvGëEºSètus
() >= 0) \

1784 {
	`OPENCV_ERROR
(
CV_StsBackTø˚
,(
func
),(
c⁄ãxt
));}}

	)

1786 
	#OPENCV_ASSERT
(
ex¥
,
func
,
c⁄ãxt
) \

1787 {i‡(! (
ex¥
)) \

1788 {
	`OPENCV_ERROR
(
CV_StsI¡î«l
,(
func
),(
c⁄ãxt
));}}

	)

1790 
	#OPENCV_RSTERR
(Ë(
	`cvSëEºSètus
(
CV_StsOk
))

	)

1792 
	#OPENCV_CALL
–
Func
 ) \

1794 
Func
; \

1795 }

	)

1799 #ifde‡
CV_NO_FUNC_NAMES


1800 
	#CV_FUNCNAME
–
Name
 )

	)

1801 
	#cvFuncName
 ""

	)

1803 
	#CV_FUNCNAME
–
Name
 ) \

1804 
cvFuncName
[] = 
Name


	)

1812 
	#CV_ERROR
–
Code
, 
Msg
 ) \

1814 
	`cvEº‹
–(
Code
), 
cvFuncName
, 
Msg
, 
__FILE__
, 
__LINE__
 ); \

1815 
__CV_EXIT__
; \

1816 }

	)

1819 
	#CV_ERROR_FROM_CODE
–
code
 ) \

1820 
	`CV_ERROR
–
code
, "" )

	)

1827 
	#CV_CHECK
() \

1829 if–
	`cvGëEºSètus
() < 0 ) \

1830 
	`CV_ERROR
–
CV_StsBackTø˚
, "Inner function failed." ); \

1831 }

	)

1839 
	#CV_CALL
–
Func
 ) \

1841 
Func
; \

1842 
	`CV_CHECK
(); \

1843 }

	)

1847 
	#CV_ASSERT
–
C⁄dôi⁄
 ) \

1849 if–!(
C⁄dôi⁄
) ) \

1850 
	`CV_ERROR
–
CV_StsI¡î«l
, "Assertion: " #Condition " failed" ); \

1851 }

	)

1853 
	#__CV_BEGIN__
 {

	)

1854 
	#__CV_END__
 
exô
;Éxô: ; }

	)

1855 
	#__CV_EXIT__
 
exô


	)

1857 #ifde‡
__˝lu•lus


1861 
CV_EXPORTS
 
CvModuÀ


1863 
CvModuÀ
–
CvModuÀInfo
* 
_öfo
 );

1864 ~
CvModuÀ
();

1865 
CvModuÀInfo
* 
öfo
;

1867 
CvModuÀInfo
* 
fú°
;

1868 
CvModuÀInfo
* 
œ°
;

1871 
CV_EXPORTS
 
	gCvTy≥


1873 
CvTy≥
–c⁄° * 
ty≥_«me
,

1874 
CvIsIn°™˚Func
 
is_ö°™˚
, 
CvRñó£Func
 
ªÀa£
=0,

1875 
CvRódFunc
 
ªad
=0, 
CvWrôeFunc
 
wrôe
=0, 
CvCl⁄eFunc
 
˛⁄e
=0 );

1876 ~
CvTy≥
();

1877 
CvTy≥Info
* 
	göfo
;

1879 
CvTy≥Info
* 
	gfú°
;

1880 
CvTy≥Info
* 
	gœ°
;

	@/usr/include/opencv2/core/mat.hpp

43 #i‚de‡
__OPENCV_CORE_MATRIX_OPERATIONS_HPP__


44 
	#__OPENCV_CORE_MATRIX_OPERATIONS_HPP__


	)

46 #i‚de‡
SKIP_INCLUDES


47 
	~<limôs.h
>

48 
	~<°rög.h
>

51 #ifde‡
__˝lu•lus


53 
«me•a˚
 
	gcv


58 
ölöe
 
	gM©
::
öôEm±y
()

60 
Êags
 = 
MAGIC_VAL
;

61 
	gdims
 = 
rows
 = 
cﬁs
 = 0;

62 
	gd©a
 = 
d©a°¨t
 = 
d©´nd
 = 
d©Æimô
 = 0;

63 
	gªfcou¡
 = 0;

64 
	gÆloˇt‹
 = 0;

67 
ölöe
 
	gM©
::
M©
(Ë: 
size
(&
rows
)

69 
öôEm±y
();

72 
ölöe
 
	gM©
::
M©
(
_rows
, 
_cﬁs
, 
_ty≥
Ë: 
size
(&
rows
)

74 
öôEm±y
();

75 
¸óã
(
_rows
, 
_cﬁs
, 
_ty≥
);

78 
ölöe
 
	gM©
::
M©
(
_rows
, 
_cﬁs
, 
_ty≥
, c⁄° 
Sˇœr
& 
_s
Ë: 
size
(&
rows
)

80 
öôEm±y
();

81 
¸óã
(
_rows
, 
_cﬁs
, 
_ty≥
);

82 *
	gthis
 = 
_s
;

85 
ölöe
 
	gM©
::
M©
(
Size
 
_sz
, 
_ty≥
Ë: 
size
(&
rows
)

87 
öôEm±y
();

88 
¸óã
–
_sz
.
height
, _sz.
width
, 
_ty≥
 );

91 
ölöe
 
	gM©
::
M©
(
Size
 
_sz
, 
_ty≥
, c⁄° 
Sˇœr
& 
_s
Ë: 
size
(&
rows
)

93 
öôEm±y
();

94 
¸óã
(
_sz
.
height
, _sz.
width
, 
_ty≥
);

95 *
	gthis
 = 
_s
;

98 
ölöe
 
	gM©
::
M©
(
_dims
, c⁄° * 
_sz
, 
_ty≥
Ë: 
size
(&
rows
)

100 
öôEm±y
();

101 
¸óã
(
_dims
, 
_sz
, 
_ty≥
);

104 
ölöe
 
	gM©
::
M©
(
_dims
, c⁄° * 
_sz
, 
_ty≥
, c⁄° 
Sˇœr
& 
_s
Ë: 
size
(&
rows
)

106 
öôEm±y
();

107 
¸óã
(
_dims
, 
_sz
, 
_ty≥
);

108 *
	gthis
 = 
_s
;

111 
ölöe
 
	gM©
::
M©
(c⁄° M©& 
m
)

112 : 
Êags
(
m
.Êags), 
dims
(m.dims), 
rows
(m.rows), 
cﬁs
(m.cﬁs), 
d©a
(m.data),

113 
ªfcou¡
(
m
.ªfcou¡), 
d©a°¨t
(m.d©a°¨t), 
d©´nd
(m.dataend),

114 
d©Æimô
(
m
.d©Æimô), 
Æloˇt‹
(m.Æloˇt‹), 
size
(&
rows
)

116 if–
	gªfcou¡
 )

117 
CV_XADD
(
ªfcou¡
, 1);

118 if–
	gm
.
	gdims
 <= 2 )

120 
°ï
[0] = 
m
.°ï[0]; 
	g°ï
[1] = m.step[1];

124 
	gdims
 = 0;

125 
c›ySize
(
m
);

129 
ölöe
 
	gM©
::
M©
(
_rows
, 
_cﬁs
, 
_ty≥
, * 
_d©a
, 
size_t
 
_°ï
)

130 : 
Êags
(
MAGIC_VAL
 + (
_ty≥
 & 
TYPE_MASK
)), 
dims
(2), 
rows
(
_rows
), 
cﬁs
(
_cﬁs
),

131 
d©a
((
uch¨
*)
_d©a
), 
ªfcou¡
(0), 
d©a°¨t
((uch¨*)_d©a), 
d©´nd
(0),

132 
d©Æimô
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

134 
size_t
 
	gesz
 = 
CV_ELEM_SIZE
(
_ty≥
), 
	gmö°ï
 = 
cﬁs
*
esz
;

135 if–
	g_°ï
 =
AUTO_STEP
 )

137 
_°ï
 = 
mö°ï
;

138 
	gÊags
 |
CONTINUOUS_FLAG
;

142 if–
	grows
 =1 ) 
_°ï
 = 
mö°ï
;

143 
CV_DbgAs£π
–
_°ï
 >
mö°ï
 );

144 
	gÊags
 |
_°ï
 =
mö°ï
 ? 
CONTINUOUS_FLAG
 : 0;

146 
	g°ï
[0] = 
_°ï
; sãp[1] = 
esz
;

147 
	gd©Æimô
 = 
d©a°¨t
 + 
_°ï
*
rows
;

148 
	gd©´nd
 = 
d©Æimô
 - 
_°ï
 + 
mö°ï
;

151 
ölöe
 
	gM©
::
M©
(
Size
 
_sz
, 
_ty≥
, * 
_d©a
, 
size_t
 
_°ï
)

152 : 
Êags
(
MAGIC_VAL
 + (
_ty≥
 & 
TYPE_MASK
)), 
dims
(2), 
rows
(
_sz
.
height
), 
cﬁs
(_sz.
width
),

153 
d©a
((
uch¨
*)
_d©a
), 
ªfcou¡
(0), 
d©a°¨t
((uch¨*)_d©a), 
d©´nd
(0),

154 
d©Æimô
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

156 
size_t
 
	gesz
 = 
CV_ELEM_SIZE
(
_ty≥
), 
	gmö°ï
 = 
cﬁs
*
esz
;

157 if–
	g_°ï
 =
AUTO_STEP
 )

159 
_°ï
 = 
mö°ï
;

160 
	gÊags
 |
CONTINUOUS_FLAG
;

164 if–
	grows
 =1 ) 
_°ï
 = 
mö°ï
;

165 
CV_DbgAs£π
–
_°ï
 >
mö°ï
 );

166 
	gÊags
 |
_°ï
 =
mö°ï
 ? 
CONTINUOUS_FLAG
 : 0;

168 
	g°ï
[0] = 
_°ï
; sãp[1] = 
esz
;

169 
	gd©Æimô
 = 
d©a°¨t
 + 
_°ï
*
rows
;

170 
	gd©´nd
 = 
d©Æimô
 - 
_°ï
 + 
mö°ï
;

174 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
M©
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
, 
boﬁ
 
c›yD©a
)

175 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

176 
dims
(2), 
rows
(()
vec
.
size
()), 
cﬁs
(1), 
d©a
(0), 
ªfcou¡
(0),

177 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

179 if(
	gvec
.
em±y
())

181 if–!
	gc›yD©a
 )

183 
	g°ï
[0] = 
°ï
[1] = (
_Tp
);

184 
	gd©a
 = 
d©a°¨t
 = (
uch¨
*)&
vec
[0];

185 
	gd©Æimô
 = 
d©´nd
 = 
d©a°¨t
 + 
rows
*
°ï
[0];

188 
M©
(()
vec
.
size
(), 1, 
D©aTy≥
<
_Tp
>::
ty≥
, (
uch¨
*)&vec[0]).
c›yTo
(*
this
);

192 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
ölöe
 
	gM©
::
M©
(c⁄° 
Vec
<
_Tp
, 
n
>& 
vec
, 
boﬁ
 
c›yD©a
)

193 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

194 
dims
(2), 
rows
(
n
), 
cﬁs
(1), 
d©a
(0), 
ªfcou¡
(0),

195 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

197 if–!
	gc›yD©a
 )

199 
	g°ï
[0] = 
°ï
[1] = (
_Tp
);

200 
	gd©a
 = 
d©a°¨t
 = (
uch¨
*)
vec
.
vÆ
;

201 
	gd©Æimô
 = 
d©´nd
 = 
d©a°¨t
 + 
rows
*
°ï
[0];

204 
M©
(
n
, 1, 
D©aTy≥
<
_Tp
>::
ty≥
, (*)
vec
.
vÆ
).
c›yTo
(*
this
);

208 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©
::
M©
(c⁄° 
M©x
<
_Tp
,
m
,
n
>& 
M
, 
boﬁ
 
c›yD©a
)

209 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

210 
dims
(2), 
rows
(
m
), 
cﬁs
(
n
), 
d©a
(0), 
ªfcou¡
(0),

211 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

213 if–!
	gc›yD©a
 )

215 
	g°ï
[0] = 
cﬁs
*(
_Tp
);

216 
	g°ï
[1] = (
_Tp
);

217 
	gd©a
 = 
d©a°¨t
 = (
uch¨
*)
M
.
vÆ
;

218 
	gd©Æimô
 = 
d©´nd
 = 
d©a°¨t
 + 
rows
*
°ï
[0];

221 
M©
(
m
, 
n
, 
D©aTy≥
<
_Tp
>::
ty≥
, (
uch¨
*)
M
.
vÆ
).
c›yTo
(*
this
);

225 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
M©
(c⁄° 
Poöt_
<
_Tp
>& 
±
, 
boﬁ
 
c›yD©a
)

226 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

227 
dims
(2), 
rows
(2), 
cﬁs
(1), 
d©a
(0), 
ªfcou¡
(0),

228 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

230 if–!
	gc›yD©a
 )

232 
	g°ï
[0] = 
°ï
[1] = (
_Tp
);

233 
	gd©a
 = 
d©a°¨t
 = (
uch¨
*)&
±
.
x
;

234 
	gd©Æimô
 = 
d©´nd
 = 
d©a°¨t
 + 
rows
*
°ï
[0];

238 
¸óã
(2, 1, 
D©aTy≥
<
_Tp
>::
ty≥
);

239 ((
	g_Tp
*)
	gd©a
)[0] = 
±
.
x
;

240 ((
	g_Tp
*)
	gd©a
)[1] = 
±
.
y
;

245 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
M©
(c⁄° 
Poöt3_
<
_Tp
>& 
±
, 
boﬁ
 
c›yD©a
)

246 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

247 
dims
(2), 
rows
(3), 
cﬁs
(1), 
d©a
(0), 
ªfcou¡
(0),

248 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

250 if–!
	gc›yD©a
 )

252 
	g°ï
[0] = 
°ï
[1] = (
_Tp
);

253 
	gd©a
 = 
d©a°¨t
 = (
uch¨
*)&
±
.
x
;

254 
	gd©Æimô
 = 
d©´nd
 = 
d©a°¨t
 + 
rows
*
°ï
[0];

258 
¸óã
(3, 1, 
D©aTy≥
<
_Tp
>::
ty≥
);

259 ((
	g_Tp
*)
	gd©a
)[0] = 
±
.
x
;

260 ((
	g_Tp
*)
	gd©a
)[1] = 
±
.
y
;

261 ((
	g_Tp
*)
	gd©a
)[2] = 
±
.
z
;

266 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
M©
(c⁄° 
M©CommaInôülizî_
<
_Tp
>& 
commaInôülizî
)

267 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

268 
dims
(0), 
rows
(0), 
cﬁs
(0), 
d©a
(0), 
ªfcou¡
(0),

269 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

271 *
	gthis
 = *
commaInôülizî
;

274 
ölöe
 
	gM©
::~
M©
()

276 
ªÀa£
();

277 if–
	g°ï
.
	gp
 !
°ï
.
buf
 )

278 
Á°Fªe
(
°ï
.
p
);

281 
ölöe
 
	gM©
& M©::
›î©‹
 = (c⁄° 
M©
& 
m
)

283 if–
this
 !&
m
 )

285 if–
m
.
ªfcou¡
 )

286 
CV_XADD
(
m
.
ªfcou¡
, 1);

287 
ªÀa£
();

288 
	gÊags
 = 
m
.
Êags
;

289 if–
	gdims
 <2 && 
m
.
dims
 <= 2 )

291 
dims
 = 
m
.dims;

292 
	grows
 = 
m
.
rows
;

293 
	gcﬁs
 = 
m
.
cﬁs
;

294 
	g°ï
[0] = 
m
.
°ï
[0];

295 
	g°ï
[1] = 
m
.
°ï
[1];

298 
c›ySize
(
m
);

299 
	gd©a
 = 
m
.
d©a
;

300 
	gd©a°¨t
 = 
m
.
d©a°¨t
;

301 
	gd©´nd
 = 
m
.
d©´nd
;

302 
	gd©Æimô
 = 
m
.
d©Æimô
;

303 
	gªfcou¡
 = 
m
.
ªfcou¡
;

304 
	gÆloˇt‹
 = 
m
.
Æloˇt‹
;

306  *
	gthis
;

309 
ölöe
 
M©
 
	gM©
::
row
(
y
Ëc⁄° {  M©(*
this
, 
R™ge
(y, y+1), R™ge::
Æl
()); }

310 
ölöe
 
M©
 
	gM©
::
cﬁ
(
x
Ëc⁄° {  M©(*
this
, 
R™ge
::
Æl
(), Range(x, x+1)); }

311 
ölöe
 
M©
 
	gM©
::
rowR™ge
(
°¨åow
, 
ídrow
) const

312 {  
M©
(*
this
, 
R™ge
(
°¨åow
, 
ídrow
), R™ge::
Æl
()); }

313 
ölöe
 
M©
 
	gM©
::
rowR™ge
(c⁄° 
R™ge
& 
r
) const

314 {  
M©
(*
this
, 
r
, 
R™ge
::
Æl
()); }

315 
ölöe
 
M©
 
	gM©
::
cﬁR™ge
(
°¨tcﬁ
, 
ídcﬁ
) const

316 {  
M©
(*
this
, 
R™ge
::
Æl
(), R™ge(
°¨tcﬁ
, 
ídcﬁ
)); }

317 
ölöe
 
M©
 
	gM©
::
cﬁR™ge
(c⁄° 
R™ge
& 
r
) const

318 {  
M©
(*
this
, 
R™ge
::
Æl
(), 
r
); }

320 
ölöe
 
M©
 
	gM©
::
düg
(c⁄° M©& 
d
)

322 
CV_As£π
–
d
.
cﬁs
 =1 || d.
rows
 == 1 );

323 
	gÀn
 = 
d
.
rows
 + d.
cﬁs
 - 1;

324 
M©
 
m
(
Àn
,Üí, 
d
.
ty≥
(), 
Sˇœr
(0)), 
	gmd
 = m.
düg
();

325 if–
	gd
.
	gcﬁs
 == 1 )

326 
d
.
c›yTo
(
md
);

328 
å™•o£
(
d
, 
md
);

329  
	gm
;

332 
ölöe
 
M©
 
	gM©
::
˛⁄e
() const

334 
M©
 
m
;

335 
c›yTo
(
m
);

336  
	gm
;

339 
ölöe
 
	gM©
::
assignTo
–
M©
& 
m
, 
_ty≥
 ) const

341 if–
	g_ty≥
 < 0 )

342 
	gm
 = *
this
;

344 
c⁄vîtTo
(
m
, 
_ty≥
);

347 
ölöe
 
	gM©
::
¸óã
(
_rows
, 
_cﬁs
, 
_ty≥
)

349 
	g_ty≥
 &
TYPE_MASK
;

350 if–
	gdims
 <2 && 
rows
 =
_rows
 && 
cﬁs
 =
_cﬁs
 && 
ty≥
(Ë=
_ty≥
 && 
d©a
 )

352 
	gsz
[] = {
_rows
, 
_cﬁs
};

353 
¸óã
(2, 
sz
, 
_ty≥
);

356 
ölöe
 
	gM©
::
¸óã
(
Size
 
_sz
, 
_ty≥
)

358 
¸óã
(
_sz
.
height
, _sz.
width
, 
_ty≥
);

361 
ölöe
 
	gM©
::
addªf
()

362 { if–
ªfcou¡
 ) 
CV_XADD
(refcount, 1); }

364 
ölöe
 
	gM©
::
ªÀa£
()

366 if–
ªfcou¡
 && 
CV_XADD
(refcount, -1) == 1 )

367 
dóŒoˇã
();

368 
	gd©a
 = 
d©a°¨t
 = 
d©´nd
 = 
d©Æimô
 = 0;

369 
	gsize
.
	gp
[0] = 0;

370 
	gªfcou¡
 = 0;

373 
ölöe
 
M©
 
	gM©
::
›î©‹
()–
R™ge
 
_rowR™ge
, R™gê
	g_cﬁR™ge
 ) const

375  
M©
(*
this
, 
_rowR™ge
, 
_cﬁR™ge
);

378 
ölöe
 
M©
 
	gM©
::
›î©‹
()–c⁄° 
Re˘
& 
roi
 ) const

379 {  
M©
(*
this
, 
roi
); }

381 
ölöe
 
M©
 
	gM©
::
›î©‹
()(c⁄° 
R™ge
* 
ønges
) const

383  
M©
(*
this
, 
ønges
);

386 
ölöe
 
	gM©
::
›î©‹
 
CvM©
() const

388 
CV_DbgAs£π
(
dims
 <= 2);

389 
CvM©
 
	gm
 = 
cvM©
(
rows
, 
dims
 =1 ? 1 : 
cﬁs
, 
ty≥
(), 
d©a
);

390 
	gm
.
	g°ï
 = ()
°ï
[0];

391 
	gm
.
	gty≥
 = (
m
.
ty≥
 & ~
CONTINUOUS_FLAG
Ë| (
Êags
 & CONTINUOUS_FLAG);

392  
	gm
;

395 
ölöe
 
boﬁ
 
	gM©
::
isC⁄töuous
(Ëc⁄° {  (
Êags
 & 
CONTINUOUS_FLAG
) != 0; }

396 
ölöe
 
boﬁ
 
	gM©
::
isSubm©rix
(Ëc⁄° {  (
Êags
 & 
SUBMATRIX_FLAG
) != 0; }

397 
ölöe
 
size_t
 
	gM©
::
ñemSize
(Ëc⁄° {  
dims
 > 0 ? 
°ï
.
p
[dims-1] : 0; }

398 
ölöe
 
size_t
 
	gM©
::
ñemSize1
(Ëc⁄° {  
CV_ELEM_SIZE1
(
Êags
); }

399 
ölöe
 
	gM©
::
ty≥
(Ëc⁄° {  
CV_MAT_TYPE
(
Êags
); }

400 
ölöe
 
	gM©
::
dïth
(Ëc⁄° {  
CV_MAT_DEPTH
(
Êags
); }

401 
ölöe
 
	gM©
::
ch™√ls
(Ëc⁄° {  
CV_MAT_CN
(
Êags
); }

402 
ölöe
 
size_t
 
	gM©
::
°ï1
(
i
Ëc⁄° {  
°ï
.
p
[i]/
ñemSize1
(); }

403 
ölöe
 
boﬁ
 
	gM©
::
em±y
(Ëc⁄° {  
d©a
 =0 || 
tŸÆ
() == 0; }

404 
ölöe
 
size_t
 
	gM©
::
tŸÆ
() const

406 if–
dims
 <= 2 )

407  (
size_t
)
rows
*
cﬁs
;

408 
size_t
 
	gp
 = 1;

409  
	gi
 = 0; i < 
	gdims
; i++ )

410 
	gp
 *
size
[
i
];

411  
	gp
;

414 
ölöe
 
uch¨
* 
	gM©
::
±r
(
y
)

416 
CV_DbgAs£π
–
y
 =0 || (
d©a
 && 
dims
 >1 && ()y < ()
size
.
p
[0]) );

417  
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gy
;

420 
ölöe
 c⁄° 
uch¨
* 
	gM©
::
±r
(
y
) const

422 
CV_DbgAs£π
–
y
 =0 || (
d©a
 && 
dims
 >1 && ()y < ()
size
.
p
[0]) );

423  
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gy
;

426 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
	gM©
::
±r
(
y
)

428 
CV_DbgAs£π
–
y
 =0 || (
d©a
 && 
dims
 >1 && ()y < ()
size
.
p
[0]) );

429  (
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gy
);

432 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gM©
::
±r
(
y
) const

434 
CV_DbgAs£π
–
y
 =0 || (
d©a
 && 
dims
 >1 && ()y < ()
size
.
p
[0]) );

435  (c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gy
);

439 
ölöe
 
uch¨
* 
	gM©
::
±r
(
i0
, 
i1
)

441 
CV_DbgAs£π
–
dims
 >2 && 
d©a
 &&

442 ()
i0
 < ()
size
.
p
[0] &&

443 ()
i1
 < ()
size
.
p
[1] );

444  
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*step.p[1];

447 
ölöe
 c⁄° 
uch¨
* 
	gM©
::
±r
(
i0
, 
i1
) const

449 
CV_DbgAs£π
–
dims
 >2 && 
d©a
 &&

450 ()
i0
 < ()
size
.
p
[0] &&

451 ()
i1
 < ()
size
.
p
[1] );

452  
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*step.p[1];

455 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
	gM©
::
±r
(
i0
, 
i1
)

457 
CV_DbgAs£π
–
dims
 >2 && 
d©a
 &&

458 ()
i0
 < ()
size
.
p
[0] &&

459 ()
i1
 < ()
size
.
p
[1] );

460  (
	g_Tp
*)(
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*step.p[1]);

463 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gM©
::
±r
(
i0
, 
i1
) const

465 
CV_DbgAs£π
–
dims
 >2 && 
d©a
 &&

466 ()
i0
 < ()
size
.
p
[0] &&

467 ()
i1
 < ()
size
.
p
[1] );

468  (c⁄° 
	g_Tp
*)(
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*step.p[1]);

471 
ölöe
 
uch¨
* 
	gM©
::
±r
(
i0
, 
i1
, 
i2
)

473 
CV_DbgAs£π
–
dims
 >3 && 
d©a
 &&

474 ()
i0
 < ()
size
.
p
[0] &&

475 ()
i1
 < ()
size
.
p
[1] &&

476 ()
i2
 < ()
size
.
p
[2] );

477  
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*°ï.p[1] + 
i2
*step.p[2];

480 
ölöe
 c⁄° 
uch¨
* 
	gM©
::
±r
(
i0
, 
i1
, 
i2
) const

482 
CV_DbgAs£π
–
dims
 >3 && 
d©a
 &&

483 ()
i0
 < ()
size
.
p
[0] &&

484 ()
i1
 < ()
size
.
p
[1] &&

485 ()
i2
 < ()
size
.
p
[2] );

486  
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*°ï.p[1] + 
i2
*step.p[2];

489 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
	gM©
::
±r
(
i0
, 
i1
, 
i2
)

491 
CV_DbgAs£π
–
dims
 >3 && 
d©a
 &&

492 ()
i0
 < ()
size
.
p
[0] &&

493 ()
i1
 < ()
size
.
p
[1] &&

494 ()
i2
 < ()
size
.
p
[2] );

495  (
	g_Tp
*)(
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*°ï.p[1] + 
i2
*step.p[2]);

498 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gM©
::
±r
(
i0
, 
i1
, 
i2
) const

500 
CV_DbgAs£π
–
dims
 >3 && 
d©a
 &&

501 ()
i0
 < ()
size
.
p
[0] &&

502 ()
i1
 < ()
size
.
p
[1] &&

503 ()
i2
 < ()
size
.
p
[2] );

504  (c⁄° 
	g_Tp
*)(
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*°ï.p[1] + 
i2
*step.p[2]);

507 
ölöe
 
uch¨
* 
	gM©
::
±r
(c⁄° * 
idx
)

509 
i
, 
	gd
 = 
dims
;

510 
uch¨
* 
	gp
 = 
d©a
;

511 
CV_DbgAs£π
–
d
 >1 && 
p
 );

512  
	gi
 = 0; i < 
	gd
; i++ )

514 
CV_DbgAs£π
–()
idx
[
i
] < ()
size
.
p
[i] );

515 
	gp
 +
idx
[
i
]*
°ï
.
p
[i];

517  
	gp
;

520 
ölöe
 c⁄° 
uch¨
* 
	gM©
::
±r
(c⁄° * 
idx
) const

522 
i
, 
	gd
 = 
dims
;

523 
uch¨
* 
	gp
 = 
d©a
;

524 
CV_DbgAs£π
–
d
 >1 && 
p
 );

525  
	gi
 = 0; i < 
	gd
; i++ )

527 
CV_DbgAs£π
–()
idx
[
i
] < ()
size
.
p
[i] );

528 
	gp
 +
idx
[
i
]*
°ï
.
p
[i];

530  
	gp
;

533 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©
::
©
(
i0
, 
i1
)

535 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 && ()
i0
 < ()
size
.
p
[0] &&

536 ()(
i1
*
D©aTy≥
<
_Tp
>::
ch™√ls
Ë< ()(
size
.
p
[1]*channels()) &&

537 
CV_ELEM_SIZE1
(
D©aTy≥
<
_Tp
>::
dïth
Ë=
ñemSize1
());

538  ((
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi0
))[
i1
];

541 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(
i0
, 
i1
) const

543 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 && ()
i0
 < ()
size
.
p
[0] &&

544 ()(
i1
*
D©aTy≥
<
_Tp
>::
ch™√ls
Ë< ()(
size
.
p
[1]*channels()) &&

545 
CV_ELEM_SIZE1
(
D©aTy≥
<
_Tp
>::
dïth
Ë=
ñemSize1
());

546  ((c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi0
))[
i1
];

549 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©
::
©
(
Poöt
 
±
)

551 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 && ()
±
.
y
 < ()
size
.
p
[0] &&

552 ()(
±
.
x
*
D©aTy≥
<
_Tp
>::
ch™√ls
Ë< ()(
size
.
p
[1]*channels()) &&

553 
CV_ELEM_SIZE1
(
D©aTy≥
<
_Tp
>::
dïth
Ë=
ñemSize1
());

554  ((
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	g±
.
	gy
))[
±
.
x
];

557 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(
Poöt
 
±
) const

559 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 && ()
±
.
y
 < ()
size
.
p
[0] &&

560 ()(
±
.
x
*
D©aTy≥
<
_Tp
>::
ch™√ls
Ë< ()(
size
.
p
[1]*channels()) &&

561 
CV_ELEM_SIZE1
(
D©aTy≥
<
_Tp
>::
dïth
Ë=
ñemSize1
());

562  ((c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	g±
.
	gy
))[
±
.
x
];

565 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©
::
©
(
i0
)

567 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

568 ()
i0
 < ()(
size
.
p
[0]*size.p[1]) &&

569 
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

570 if–
isC⁄töuous
(Ë|| 
	gsize
.
	gp
[0] == 1 )

571  ((
_Tp
*)
d©a
)[
i0
];

572 if–
	gsize
.
	gp
[1] == 1 )

573  *(
_Tp
*)(
d©a
 + 
°ï
.
p
[0]*
i0
);

574 
	gi
 = 
i0
/
cﬁs
, 
	gj
 = i0 - 
i
*cols;

575  ((
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi
))[
j
];

578 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(
i0
) const

580 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

581 ()
i0
 < ()(
size
.
p
[0]*size.p[1]) &&

582 
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

583 if–
isC⁄töuous
(Ë|| 
	gsize
.
	gp
[0] == 1 )

584  ((c⁄° 
_Tp
*)
d©a
)[
i0
];

585 if–
	gsize
.
	gp
[1] == 1 )

586  *(c⁄° 
_Tp
*)(
d©a
 + 
°ï
.
p
[0]*
i0
);

587 
	gi
 = 
i0
/
cﬁs
, 
	gj
 = i0 - 
i
*cols;

588  ((c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi
))[
j
];

591 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©
::
©
(
i0
, 
i1
, 
i2
)

593 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

594  *(
	g_Tp
*)
±r
(
i0
, 
i1
, 
i2
);

596 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(
i0
, 
i1
, 
i2
) const

598 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

599  *(c⁄° 
	g_Tp
*)
±r
(
i0
, 
i1
, 
i2
);

601 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©
::
©
(c⁄° * 
idx
)

603 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

604  *(
	g_Tp
*)
±r
(
idx
);

606 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(c⁄° * 
idx
) const

608 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

609  *(c⁄° 
	g_Tp
*)
±r
(
idx
);

611 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> _Tp& 
	gM©
::
©
(c⁄° 
Vec
<, 
n
>& 
idx
)

613 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

614  *(
	g_Tp
*)
±r
(
idx
.
vÆ
);

616 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(c⁄° 
Vec
<, 
n
>& 
idx
) const

618 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

619  *(c⁄° 
	g_Tp
*)
±r
(
idx
.
vÆ
);

623 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> 
	gM©
::
begö
() const

625 
CV_DbgAs£π
–
ñemSize
(Ë=(
_Tp
) );

626  
	gM©C⁄°Iãøt‹_
<
	g_Tp
>((c⁄° 
	gM©_
<_Tp>*)
	gthis
);

629 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> 
	gM©
::
íd
() const

631 
CV_DbgAs£π
–
ñemSize
(Ë=(
_Tp
) );

632 
	gM©C⁄°Iãøt‹_
<
	g_Tp
> 
ô
((c⁄° 
M©_
<
_Tp
>*)
this
);

633 
	gô
 +
tŸÆ
();

634  
	gô
;

637 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> 
	gM©
::
begö
()

639 
CV_DbgAs£π
–
ñemSize
(Ë=(
_Tp
) );

640  
	gM©Iãøt‹_
<
	g_Tp
>((
	gM©_
<_Tp>*)
	gthis
);

643 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> 
	gM©
::
íd
()

645 
CV_DbgAs£π
–
ñemSize
(Ë=(
_Tp
) );

646 
	gM©Iãøt‹_
<
	g_Tp
> 
ô
((
M©_
<
_Tp
>*)
this
);

647 
	gô
 +
tŸÆ
();

648  
	gô
;

651 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
›î©‹
 
ve˘‹
<
_Tp
>() const

653 
ve˘‹
<
_Tp
> 
v
;

654 
c›yTo
(
v
);

655  
	gv
;

658 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
ölöe
 
	gM©
::
›î©‹
 
Vec
<
_Tp
,Ç>() const

660 
CV_As£π
–
d©a
 && 
dims
 <2 && (
rows
 =1 || 
cﬁs
 == 1) &&

661 
rows
 + 
cﬁs
 - 1 =
n
 && 
ch™√ls
() == 1 );

663 if–
isC⁄töuous
(Ë&& 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type )

664  
Vec
<
_Tp
, 
	gn
>((
	g_Tp
*)
	gd©a
);

665 
	gVec
<
	g_Tp
, 
	gn
> 
	gv
; 
M©
 
tmp
(
rows
, 
cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
, 
v
.
vÆ
);

666 
c⁄vîtTo
(
tmp
,Åmp.
ty≥
());

667  
	gv
;

670 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©
::
›î©‹
 
M©x
<
_Tp
, m,Ç>() const

672 
CV_As£π
–
d©a
 && 
dims
 <2 && 
rows
 =
m
 && 
cﬁs
 =
n
 && 
ch™√ls
() == 1 );

674 if–
isC⁄töuous
(Ë&& 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type )

675  
M©x
<
_Tp
, 
	gm
, 
	gn
>((
	g_Tp
*)
	gd©a
);

676 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	gmtx
; 
M©
 
tmp
(
rows
, 
cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
, 
mtx
.
vÆ
);

677 
c⁄vîtTo
(
tmp
,Åmp.
ty≥
());

678  
	gmtx
;

682 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
push_back
(c⁄° 
_Tp
& 
ñem
)

684 if–!
d©a
 )

686 *
this
 = 
M©
(1, 1, 
D©aTy≥
<
_Tp
>::
ty≥
, (*)&
ñem
).
˛⁄e
();

689 
CV_As£π
(
D©aTy≥
<
_Tp
>::
ty≥
 =ty≥(Ë&& 
cﬁs
 == 1

691 
uch¨
* 
	gtmp
 = 
d©´nd
 + 
°ï
[0];

692 if–!
isSubm©rix
(Ë&& 
isC⁄töuous
(Ë&& 
	gtmp
 <
d©Æimô
 )

694 *(
_Tp
*)(
d©a
 + (
size
.
p
[0]++)*
°ï
.p[0]Ë
ñem
;

695 
	gd©´nd
 = 
tmp
;

698 
push_back_
(&
ñem
);

701 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
push_back
(c⁄° 
M©_
<
_Tp
>& 
m
)

703 
push_back
((c⁄° 
M©
&)
m
);

706 
ölöe
 
	gM©
::
MSize
::MSize(* 
_p
Ë: 
p
(_p) {}

707 
ölöe
 
Size
 
M©
::
MSize
::
›î©‹
()() const

709 
CV_DbgAs£π
(
p
[-1] <= 2);

710  
Size
(
p
[1],Ö[0]);

712 
ölöe
 c⁄° & 
	gM©
::
MSize
::
›î©‹
[](
i
Ëc⁄° {  
p
[i]; }

713 
ölöe
 & 
	gM©
::
MSize
::
›î©‹
[](
i
Ë{  
p
[i]; }

714 
ölöe
 
	gM©
::
MSize
::
›î©‹
 c⁄° *(Ëc⁄° {  
p
; }

716 
ölöe
 
boﬁ
 
	gM©
::
MSize
::
›î©‹
 =(c⁄° MSize& 
sz
) const

718 
d
 = 
p
[-1], 
	gdsz
 = 
sz
.p[-1];

719 if–
	gd
 !
dsz
 )

720  
Ál£
;

721 if–
	gd
 == 2 )

722  
p
[0] =
sz
.p[0] &&Ö[1] == sz.p[1];

724  
	gi
 = 0; i < 
	gd
; i++ )

725 if–
	gp
[
i
] !
sz
.
p
[i] )

726  
Ál£
;

727  
	gåue
;

730 
ölöe
 
boﬁ
 
	gM©
::
MSize
::
›î©‹
 !(c⁄° MSize& 
sz
) const

732  !(*
this
 =
sz
);

735 
ölöe
 
	gM©
::
MSãp
::MSãp(Ë{ 
p
 = 
buf
; 
	gp
[0] =Ö[1] = 0; }

736 
ölöe
 
	gM©
::
MSãp
::MSãp(
size_t
 
s
Ë{ 
p
 = 
buf
; 
	gp
[0] = s;Ö[1] = 0; }

737 
ölöe
 c⁄° 
	gsize_t
& 
	gM©
::
MSãp
::
›î©‹
[](
i
Ëc⁄° {  
p
[i]; }

738 
ölöe
 
	gsize_t
& 
	gM©
::
MSãp
::
›î©‹
[](
i
Ë{  
p
[i]; }

739 
ölöe
 
	gM©
::
MSãp
::
›î©‹
 
size_t
() const

741 
CV_DbgAs£π
–
p
 =
buf
 );

742  
	gbuf
[0];

744 
ölöe
 
	gM©
::
MSãp
& 
M©
::MSãp::
›î©‹
 = (
size_t
 
s
)

746 
CV_DbgAs£π
–
p
 =
buf
 );

747 
	gbuf
[0] = 
s
;

748  *
	gthis
;

751 
ölöe
 
M©
 
cv¨rToM©ND
(c⁄° 
CvAº
* 
¨r
, 
boﬁ
 
c›yD©a
=
Ál£
, 
coiMode
=0)

753  
cv¨rToM©
(
¨r
, 
c›yD©a
, 
åue
, 
coiMode
);

758 
ölöe
 
	gSVD
::
SVD
() {}

759 
ölöe
 
SVD
::SVD–
I≈utAºay
 
m
, 
Êags
 ) { 
›î©‹
 ()(
	gm
, 
	gÊags
); }

760 
ölöe
 
	gSVD
::
sﬁveZ
–
I≈utAºay
 
m
, 
OuçutAºay
 
_d°
 )

762 
M©
 
	gmtx
 = 
m
.
gëM©
();

763 
SVD
 
svd
(
mtx
, (mtx.
rows
 >mtx.
cﬁs
 ? 0 : SVD::
FULL_UV
));

764 
	g_d°
.
¸óã
(
svd
.
vt
.
cﬁs
, 1, svd.vt.
ty≥
());

765 
M©
 
	gd°
 = 
_d°
.
gëM©
();

766 
	gsvd
.
	gvt
.
row
(
svd
.
vt
.
rows
-1).
ªsh≠e
(1,svd.vt.
cﬁs
).
c›yTo
(
d°
);

769 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
> 
ölöe
 

770 
	gSVD
::
compuã
–c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
, M©x<_Tp, 
nm
, 1>& 
w
, M©x<_Tp, m,Çm>& 
u
, M©x<_Tp,Ç,Çm>& 
vt
 )

772 
as£π
–
nm
 =
MIN
(
m
, 
n
));

773 
M©
 
_a
(
a
, 
Ál£
), 
_u
(
u
, fÆ£), 
_w
(
w
, fÆ£), 
_vt
(
vt
, false);

774 
	gSVD
::
compuã
(
_a
, 
_w
, 
_u
, 
_vt
);

775 
CV_As£π
(
_w
.
d©a
 =(
uch¨
*)&
w
.
vÆ
[0] && 
_u
.d©®=(uch¨*)&
u
.vÆ[0] && 
_vt
.d©®=(uch¨*)&
vt
.val[0]);

778 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
> 
ölöe
 

779 
	gSVD
::
compuã
–c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
, M©x<_Tp, 
nm
, 1>& 
w
 )

781 
as£π
–
nm
 =
MIN
(
m
, 
n
));

782 
M©
 
_a
(
a
, 
Ál£
), 
_w
(
w
, false);

783 
	gSVD
::
compuã
(
_a
, 
_w
);

784 
CV_As£π
(
_w
.
d©a
 =(
uch¨
*)&
w
.
vÆ
[0]);

787 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
, 
	gnb
> 
ölöe
 

788 
	gSVD
::
backSub°
–c⁄° 
M©x
<
_Tp
, 
nm
, 1>& 
w
, c⁄° M©x<_Tp, 
m
,Çm>& 
u
,

789 c⁄° 
M©x
<
_Tp
, 
n
, 
nm
>& 
vt
, c⁄° M©x<_Tp, 
m
, 
nb
>& 
rhs
,

790 
M©x
<
_Tp
, 
n
, 
nb
>& 
d°
 )

792 
as£π
–
nm
 =
MIN
(
m
, 
n
));

793 
M©
 
_u
(
u
, 
Ál£
), 
_w
(
w
, fÆ£), 
_vt
(
vt
, fÆ£), 
_rhs
(
rhs
, fÆ£), 
_d°
(
d°
, false);

794 
	gSVD
::
backSub°
(
_w
, 
_u
, 
_vt
, 
_rhs
, 
_d°
);

795 
CV_As£π
(
_d°
.
d©a
 =(
uch¨
*)&
d°
.
vÆ
[0]);

800 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
()

801 : 
M©
(Ë{ 
Êags
 = (Êag†& ~
CV_MAT_TYPE_MASK
Ë| 
D©aTy≥
<
_Tp
>::
ty≥
; }

803 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(
_rows
, 
_cﬁs
)

804 : 
M©
(
_rows
, 
_cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
) {}

806 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©_
<_Tp>::M©_(
_rows
, 
_cﬁs
, c⁄° _Tp& 
vÆue
)

807 : 
M©
(
_rows
, 
_cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
Ë{ *
this
 = 
vÆue
; }

809 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(
Size
 
_sz
)

810 : 
M©
(
_sz
.
height
, _sz.
width
, 
D©aTy≥
<
_Tp
>::
ty≥
) {}

812 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©_
<_Tp>::M©_(
Size
 
_sz
, c⁄° _Tp& 
vÆue
)

813 : 
M©
(
_sz
.
height
, _sz.
width
, 
D©aTy≥
<
_Tp
>::
ty≥
Ë{ *
this
 = 
vÆue
; }

815 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(
_dims
, c⁄° * 
_sz
)

816 : 
M©
(
_dims
, 
_sz
, 
D©aTy≥
<
_Tp
>::
ty≥
) {}

818 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©_
<_Tp>::M©_(
_dims
, c⁄° * 
_sz
, c⁄° _Tp& 
_s
)

819 : 
M©
(
_dims
, 
_sz
, 
D©aTy≥
<
_Tp
>::
ty≥
, 
Sˇœr
(
_s
)) {}

821 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° M©_<
_Tp
>& 
m
, c⁄° 
R™ge
* 
ønges
)

822 : 
M©
(
m
, 
ønges
) {}

824 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° 
M©
& 
m
)

825 : 
M©
(Ë{ 
Êags
 = (Êag†& ~
CV_MAT_TYPE_MASK
Ë| 
D©aTy≥
<
_Tp
>::
ty≥
; *
	gthis
 = 
m
; }

827 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° M©_& 
m
)

828 : 
M©
(
m
) {}

830 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©_
<_Tp>::M©_(
_rows
, 
_cﬁs
, _Tp* 
_d©a
, 
size_t
 
°ïs
)

831 : 
M©
(
_rows
, 
_cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
, 
_d©a
, 
°ïs
) {}

833 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° M©_& 
m
, c⁄° 
R™ge
& 
_rowR™ge
, c⁄° R™ge& 
_cﬁR™ge
)

834 : 
M©
(
m
, 
_rowR™ge
, 
_cﬁR™ge
) {}

836 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° M©_& 
m
, c⁄° 
Re˘
& 
roi
)

837 : 
M©
(
m
, 
roi
) {}

839 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gn
> 
ölöe


840 
	gM©_
<
	g_Tp
>::
M©_
(c⁄° 
Vec
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
, 
n
>& 
vec
, 
boﬁ
 
c›yD©a
)

841 : 
M©
(
n
/
D©aTy≥
<
_Tp
>::
ch™√ls
, 1, D©aTy≥<_Tp>::
ty≥
, (*)&
vec
)

843 
CV_As£π
(
n
%
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

844 if–
	gc›yD©a
 )

845 *
	gthis
 = 
˛⁄e
();

848 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gm
, 
	gn
> 
ölöe


849 
	gM©_
<
	g_Tp
>::
M©_
(c⁄° 
M©x
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
,
m
,
n
>& 
M
, 
boﬁ
 
c›yD©a
)

850 : 
M©
(
m
, 
n
/
D©aTy≥
<
_Tp
>::
ch™√ls
, D©aTy≥<_Tp>::
ty≥
, (*)&
M
)

852 
CV_As£π
(
n
 % 
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

853 if–
	gc›yD©a
 )

854 *
	gthis
 = 
˛⁄e
();

857 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° 
Poöt_
<ty≥«mê
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
>& 
±
, 
boﬁ
 
c›yD©a
)

858 : 
M©
(2/
D©aTy≥
<
_Tp
>::
ch™√ls
, 1, D©aTy≥<_Tp>::
ty≥
, (*)&
±
)

860 
CV_As£π
(2 % 
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

861 if–
	gc›yD©a
 )

862 *
	gthis
 = 
˛⁄e
();

865 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° 
Poöt3_
<ty≥«mê
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
>& 
±
, 
boﬁ
 
c›yD©a
)

866 : 
M©
(3/
D©aTy≥
<
_Tp
>::
ch™√ls
, 1, D©aTy≥<_Tp>::
ty≥
, (*)&
±
)

868 
CV_As£π
(3 % 
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

869 if–
	gc›yD©a
 )

870 *
	gthis
 = 
˛⁄e
();

873 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° 
M©CommaInôülizî_
<
_Tp
>& 
commaInôülizî
)

874 : 
M©
(
commaInôülizî
) {}

876 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©_
<_Tp>::M©_(c⁄° 
ve˘‹
<_Tp>& 
vec
, 
boﬁ
 
c›yD©a
)

877 : 
M©
(
vec
, 
c›yD©a
) {}

879 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>& M©_<_Tp>::
›î©‹
 = (c⁄° 
M©
& 
m
)

881 if–
D©aTy≥
<
_Tp
>::
ty≥
 =
m
.type() )

883 
M©
::
›î©‹
 = (
m
);

884  *
	gthis
;

886 if–
	gD©aTy≥
<
	g_Tp
>::
dïth
 =
m
.depth() )

888  (*
this
 = 
m
.
ªsh≠e
(
D©aTy≥
<
_Tp
>::
ch™√ls
, m.
dims
, 0));

890 
CV_DbgAs£π
(
D©aTy≥
<
_Tp
>::
ch™√ls
 =
m
.channels());

891 
	gm
.
c⁄vîtTo
(*
this
, 
ty≥
());

892  *
	gthis
;

895 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>& M©_<_Tp>::
›î©‹
 = (c⁄° 
M©_
& 
m
)

897 
M©
::
›î©‹
=(
m
);

898  *
	gthis
;

901 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>& M©_<_Tp>::
›î©‹
 = (c⁄° 
_Tp
& 
s
)

903 
ty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tvec_ty≥
 
	tVT
;

904 
	gM©
::
›î©‹
=(
Sˇœr
((c⁄° 
VT
&)
s
));

905  *
	gthis
;

908 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
¸óã
(
_rows
, 
_cﬁs
)

910 
	gM©
::
¸óã
(
_rows
, 
_cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
);

913 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
¸óã
(
Size
 
_sz
)

915 
M©
::
¸óã
(
_sz
, 
D©aTy≥
<
_Tp
>::
ty≥
);

918 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
¸óã
(
_dims
, c⁄° * 
_sz
)

920 
	gM©
::
¸óã
(
_dims
, 
_sz
, 
D©aTy≥
<
_Tp
>::
ty≥
);

924 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
¸oss
(c⁄° 
M©_
& 
m
) const

925 {  
M©_
<
_Tp
>(
M©
::
¸oss
(
m
)); }

927 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	gT2
> 
ölöe
 
	gM©_
<_Tp>::
›î©‹
 
M©_
<
T2
>() const

928 {  
M©_
<
T2
>(*
this
); }

930 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
row
(
y
) const

931 {  
M©_
(*
this
, 
R™ge
(
y
, y+1), R™ge::
Æl
()); }

932 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
cﬁ
(
x
) const

933 {  
M©_
(*
this
, 
R™ge
::
Æl
(), R™ge(
x
, x+1)); }

934 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
düg
(
d
) const

935 {  
M©_
(
M©
::
düg
(
d
)); }

936 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
˛⁄e
() const

937 {  
M©_
(
M©
::
˛⁄e
()); }

939 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gM©_
<_Tp>::
ñemSize
() const

941 
CV_DbgAs£π
–
M©
::
ñemSize
(Ë=(
_Tp
) );

942  (
	g_Tp
);

945 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gM©_
<_Tp>::
ñemSize1
() const

947 
CV_DbgAs£π
–
M©
::
ñemSize1
(Ë=(
_Tp
)/
D©aTy≥
<_Tp>::
ch™√ls
 );

948  (
	g_Tp
)/
	gD©aTy≥
<_Tp>::
ch™√ls
;

950 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
ty≥
() const

952 
CV_DbgAs£π
–
M©
::
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type );

953  
	gD©aTy≥
<
	g_Tp
>::
ty≥
;

955 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
dïth
() const

957 
CV_DbgAs£π
–
M©
::
dïth
(Ë=
D©aTy≥
<
_Tp
>::depth );

958  
	gD©aTy≥
<
	g_Tp
>::
dïth
;

960 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
ch™√ls
() const

962 
CV_DbgAs£π
–
M©
::
ch™√ls
(Ë=
D©aTy≥
<
_Tp
>::channels );

963  
	gD©aTy≥
<
	g_Tp
>::
ch™√ls
;

965 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gM©_
<_Tp>::
°ïT
(
i
Ëc⁄° {  
°ï
.
p
[i]/
ñemSize
(); }

966 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gM©_
<_Tp>::
°ï1
(
i
Ëc⁄° {  
°ï
.
p
[i]/
ñemSize1
(); }

968 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>& M©_<_Tp>::
adju°ROI
–
dt›
, 
dbŸtom
, 
dÀ·
, 
dright
 )

969 {  (
	gM©_
<
	g_Tp
>&)(
	gM©
::
adju°ROI
(
dt›
, 
dbŸtom
, 
dÀ·
, 
dright
)); }

971 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
›î©‹
()–c⁄° 
R™ge
& 
_rowR™ge
, c⁄° 
	gR™ge
& 
	g_cﬁR™ge
 ) const

972 {  
	gM©_
<
	g_Tp
>(*
	gthis
, 
	g_rowR™ge
, 
	g_cﬁR™ge
); }

974 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
›î©‹
()–c⁄° 
Re˘
& 
roi
 ) const

975 {  
M©_
<
_Tp
>(*
this
, 
	groi
); }

977 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
›î©‹
()–c⁄° 
R™ge
* 
ønges
 ) const

978 {  
M©_
<
_Tp
>(*
this
, 
	gønges
); }

980 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
	gM©_
<_Tp>::
›î©‹
 [](
y
)

981 {  (
_Tp
*)
±r
(
y
); }

982 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gM©_
<_Tp>::
›î©‹
 [](
y
) const

983 {  (c⁄° 
_Tp
*)
±r
(
y
); }

985 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
, 
	gi1
)

987 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

988 ()
i0
 < ()
size
.
p
[0] &&

989 ()
i1
 < ()
size
.
p
[1] &&

990 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type );

991  ((
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi0
))[
i1
];

994 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
, 
	gi1
) const

996 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

997 ()
i0
 < ()
size
.
p
[0] &&

998 ()
i1
 < ()
size
.
p
[1] &&

999 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type );

1000  ((c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi0
))[
i1
];

1003 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
Poöt
 
±
)

1005 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

1006 ()
±
.
y
 < ()
size
.
p
[0] &&

1007 ()
±
.
x
 < ()
size
.
p
[1] &&

1008 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type );

1009  ((
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	g±
.
	gy
))[
±
.
x
];

1012 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
Poöt
 
±
) const

1014 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

1015 ()
±
.
y
 < ()
size
.
p
[0] &&

1016 ()
±
.
x
 < ()
size
.
p
[1] &&

1017 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type );

1018  ((c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	g±
.
	gy
))[
±
.
x
];

1021 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(c⁄° * 
idx
)

1023  
M©
::
©
<
_Tp
>(
idx
);

1026 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(c⁄° * 
idx
) const

1028  
M©
::
©
<
_Tp
>(
idx
);

1031 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gn
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(c⁄° 
Vec
<,Ç>& 
	gidx
)

1033  
	gM©
::
©
<
_Tp
>(
idx
);

1036 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gn
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(c⁄° 
Vec
<,Ç>& 
	gidx
) const

1038  
	gM©
::
©
<
_Tp
>(
idx
);

1041 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
)

1043  
this
->
©
<
_Tp
>(
i0
);

1046 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
) const

1048  
this
->
©
<
_Tp
>(
i0
);

1051 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
, 
	gi1
, 
	gi2
)

1053  
	gthis
->
	g©
<
	g_Tp
>(
	gi0
, 
	gi1
, 
	gi2
);

1056 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
, 
	gi1
, 
	gi2
) const

1058  
	gthis
->
	g©
<
	g_Tp
>(
	gi0
, 
	gi1
, 
	gi2
);

1062 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
›î©‹
 
ve˘‹
<
_Tp
>() const

1064 
ve˘‹
<
_Tp
> 
v
;

1065 
c›yTo
(
v
);

1066  
	gv
;

1069 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gn
> 
ölöe
 
	gM©_
<_Tp>::
›î©‹
 
Vec
<ty≥«mê
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
,Ç>() const

1071 
CV_As£π
(
n
 % 
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

1072  
	gthis
->
	gM©
::
›î©‹
 
Vec
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
, 
	gn
>();

1075 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gm
, 
	gn
> 
ölöe
 
	gM©_
<_Tp>::
›î©‹
 
M©x
<ty≥«mê
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
, m,Ç>() const

1077 
CV_As£π
(
n
 % 
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

1079 
	gM©x
<
ty≥«me
 
	gD©aTy≥
<
	g_Tp
>::
ch™√l_ty≥
, 
	gm
, 
	gn
> 
	gªs
 = 
this
->
M©
::
›î©‹
 
M©x
<ty≥«mê
D©aTy≥
<
_Tp
>::channel_type, m,Ç>();

1080  
	gªs
;

1083 
	gãm∂©e
<
ty≥«me
 
	gT1
,Åy≥«mê
	gT2
,Åy≥«mê
	gOp
> 
ölöe
 

1084 
¥o˚ss
–c⁄° 
M©_
<
T1
>& 
m1
, M©_<
T2
>& 
m2
, 
Op
 
›
 )

1086 
	gy
, 
	gx
, 
	grows
 = 
m1
.
rows
, 
	gcﬁs
 = m1.
cﬁs
;

1088 
CV_DbgAs£π
–
m1
.
size
(Ë=
m2
.size() );

1090  
	gy
 = 0; y < 
	grows
; y++ )

1092 c⁄° 
T1
* 
	g§c
 = 
m1
[
y
];

1093 
T2
* 
	gd°
 = 
m2
[
y
];

1095  
	gx
 = 0; x < 
	gcﬁs
; x++ )

1096 
	gd°
[
x
] = 
›
(
§c
[x]);

1100 
	gãm∂©e
<
ty≥«me
 
	gT1
,Åy≥«mê
	gT2
,Åy≥«mê
	gT3
,Åy≥«mê
	gOp
> 
ölöe
 

1101 
¥o˚ss
–c⁄° 
M©_
<
T1
>& 
m1
, c⁄° M©_<
T2
>& 
m2
, M©_<
T3
>& 
m3
, 
Op
 
›
 )

1103 
	gy
, 
	gx
, 
	grows
 = 
m1
.
rows
, 
	gcﬁs
 = m1.
cﬁs
;

1105 
CV_DbgAs£π
–
m1
.
size
(Ë=
m2
.size() );

1107  
	gy
 = 0; y < 
	grows
; y++ )

1109 c⁄° 
T1
* 
	g§c1
 = 
m1
[
y
];

1110 c⁄° 
T2
* 
	g§c2
 = 
m2
[
y
];

1111 
T3
* 
	gd°
 = 
m3
[
y
];

1113  
	gx
 = 0; x < 
	gcﬁs
; x++ )

1114 
	gd°
[
x
] = 
›
–
§c1
[x], 
§c2
[x] );

1121 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
)

1122 : 
Êags
(
FIXED_TYPE
 + 
STD_VECTOR
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)&
vec
) {}

1124 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
ve˘‹
<ve˘‹<
_Tp
> >& 
vec
)

1125 : 
Êags
(
FIXED_TYPE
 + 
STD_VECTOR_VECTOR
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)&
vec
) {}

1127 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
ve˘‹
<
M©_
<
_Tp
> >& 
vec
)

1128 : 
Êags
(
FIXED_TYPE
 + 
STD_VECTOR_MAT
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)&
vec
) {}

1130 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
mtx
)

1131 : 
Êags
(
FIXED_TYPE
 + 
FIXED_SIZE
 + 
MATX
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)&
mtx
), 
sz
(
n
, 
m
) {}

1133 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
_Tp
* 
vec
, 
n
)

1134 : 
Êags
(
FIXED_TYPE
 + 
FIXED_SIZE
 + 
MATX
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)
vec
), 
sz
(
n
, 1) {}

1136 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
Sˇœr
& 
s
)

1137 : 
Êags
(
FIXED_TYPE
 + 
FIXED_SIZE
 + 
MATX
 + 
CV_64F
), 
obj
((*)&
s
), 
sz
(1, 4) {}

1139 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
M©_
<
_Tp
>& 
m
)

1140 : 
Êags
(
FIXED_TYPE
 + 
MAT
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)&
m
) {}

1142 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(
ve˘‹
<
_Tp
>& 
vec
)

1143 : 
_I≈utAºay
(
vec
) {}

1144 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
_OuçutAºay
::_OuçutAºay(
ve˘‹
<ve˘‹<_Tp> >& 
vec
)

1145 : 
_I≈utAºay
(
vec
) {}

1146 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
_OuçutAºay
::_OuçutAºay(
ve˘‹
<
M©_
<_Tp> >& 
vec
)

1147 : 
_I≈utAºay
(
vec
) {}

1148 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
_OuçutAºay
::_OuçutAºay(
M©_
<_Tp>& 
m
)

1149 : 
_I≈utAºay
(
m
) {}

1150 
ãm∂©e
<
ty≥«me
 
_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(
M©x
<_Tp, 
m
, 
n
>& 
mtx
)

1151 : 
_I≈utAºay
(
mtx
) {}

1152 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
_OuçutAºay
::_OuçutAºay(_Tp* 
vec
, 
n
)

1153 : 
_I≈utAºay
(
vec
, 
n
) {}

1155 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
)

1156 : 
_I≈utAºay
(
vec
Ë{
Êags
 |
FIXED_SIZE
;}

1157 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(c⁄° 
ve˘‹
<ve˘‹<
_Tp
> >& 
vec
)

1158 : 
_I≈utAºay
(
vec
Ë{
Êags
 |
FIXED_SIZE
;}

1159 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(c⁄° 
ve˘‹
<
M©_
<
_Tp
> >& 
vec
)

1160 : 
_I≈utAºay
(
vec
Ë{
Êags
 |
FIXED_SIZE
;}

1162 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(c⁄° 
M©_
<
_Tp
>& 
m
)

1163 : 
_I≈utAºay
(
m
Ë{
Êags
 |
FIXED_SIZE
;}

1164 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
mtx
)

1165 : 
_I≈utAºay
(
mtx
) {}

1166 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
_OuçutAºay
::_OuçutAºay(c⁄° _Tp* 
vec
, 
n
)

1167 : 
_I≈utAºay
(
vec
, 
n
) {}

1171 ˛as†
	cCV_EXPORTS
 
	gM©Op


1173 
	gpublic
:

1174 
M©Op
() {};

1175 
	gvútuÆ
 ~
M©Op
() {};

1177 
vútuÆ
 
boﬁ
 
ñemítWi£
(c⁄° 
M©Ex¥
& 
ex¥
) const;

1178 
vútuÆ
 
assign
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
, 
ty≥
=-1) const = 0;

1179 
vútuÆ
 
roi
(c⁄° 
M©Ex¥
& 
ex¥
, c⁄° 
R™ge
& 
rowR™ge
,

1180 c⁄° 
R™ge
& 
cﬁR™ge
, 
M©Ex¥
& 
ªs
) const;

1181 
vútuÆ
 
düg
(c⁄° 
M©Ex¥
& 
ex¥
, 
d
, M©Ex¥& 
ªs
) const;

1182 
vútuÆ
 
augAssignAdd
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1183 
vútuÆ
 
augAssignSubåa˘
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1184 
vútuÆ
 
augAssignMu…ùly
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1185 
vútuÆ
 
augAssignDivide
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1186 
vútuÆ
 
augAssignAnd
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1187 
vútuÆ
 
augAssignOr
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1188 
vútuÆ
 
augAssignX‹
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1190 
vútuÆ
 
add
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° M©Ex¥& 
ex¥2
, M©Ex¥& 
ªs
) const;

1191 
vútuÆ
 
add
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° 
Sˇœr
& 
s
, M©Ex¥& 
ªs
) const;

1193 
vútuÆ
 
subåa˘
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° M©Ex¥& 
ex¥2
, M©Ex¥& 
ªs
) const;

1194 
vútuÆ
 
subåa˘
(c⁄° 
Sˇœr
& 
s
, c⁄° 
M©Ex¥
& 
ex¥
, M©Ex¥& 
ªs
) const;

1196 
vútuÆ
 
mu…ùly
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° M©Ex¥& 
ex¥2
, M©Ex¥& 
ªs
, 
sˇÀ
=1) const;

1197 
vútuÆ
 
mu…ùly
(c⁄° 
M©Ex¥
& 
ex¥1
, 
s
, M©Ex¥& 
ªs
) const;

1199 
vútuÆ
 
divide
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° M©Ex¥& 
ex¥2
, M©Ex¥& 
ªs
, 
sˇÀ
=1) const;

1200 
vútuÆ
 
divide
(
s
, c⁄° 
M©Ex¥
& 
ex¥
, M©Ex¥& 
ªs
) const;

1202 
vútuÆ
 
abs
(c⁄° 
M©Ex¥
& 
ex¥
, M©Ex¥& 
ªs
) const;

1204 
vútuÆ
 
å™•o£
(c⁄° 
M©Ex¥
& 
ex¥
, M©Ex¥& 
ªs
) const;

1205 
vútuÆ
 
m©mul
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° M©Ex¥& 
ex¥2
, M©Ex¥& 
ªs
) const;

1206 
vútuÆ
 
övît
(c⁄° 
M©Ex¥
& 
ex¥
, 
mëhod
, M©Ex¥& 
ªs
) const;

1208 
vútuÆ
 
Size
 
size
(c⁄° 
M©Ex¥
& 
ex¥
) const;

1209 
vútuÆ
 
ty≥
(c⁄° 
M©Ex¥
& 
ex¥
) const;

1213 ˛as†
	cCV_EXPORTS
 
	gM©Ex¥


1215 
	gpublic
:

1216 
M©Ex¥
(Ë: 
›
(0), 
Êags
(0), 
a
(
M©
()), 
b
(M©()), 
c
(M©()), 
Æpha
(0), 
bëa
(0), 
s
(
Sˇœr
()) {}

1217 
M©Ex¥
(c⁄° 
M©Op
* 
_›
, 
_Êags
, c⁄° 
M©
& 
_a
=M©(), c⁄° M©& 
_b
=Mat(),

1218 c⁄° 
M©
& 
_c
=M©(), 
_Æpha
=1, 
_bëa
=1, c⁄° 
Sˇœr
& 
_s
=Scalar())

1219 : 
›
(
_›
), 
Êags
(
_Êags
), 
a
(
_a
), 
b
(
_b
), 
c
(
_c
), 
Æpha
(
_Æpha
), 
bëa
(
_bëa
), 
s
(
_s
) {}

1220 
ex∂icô
 
M©Ex¥
(c⁄° 
M©
& 
m
);

1221 
›î©‹
 
M©
() const

1223 
M©
 
	gm
;

1224 
	g›
->
assign
(*
this
, 
m
);

1225  
	gm
;

1228 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
›î©‹
 
	gM©_
<_Tp>() const

1230 
	gM©_
<
	g_Tp
> 
	gm
;

1231 
	g›
->
assign
(*
this
, 
m
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1232  
	gm
;

1235 
M©Ex¥
 
row
(
y
) const;

1236 
M©Ex¥
 
cﬁ
(
x
) const;

1237 
M©Ex¥
 
düg
(
d
=0) const;

1238 
M©Ex¥
 
›î©‹
()–c⁄° 
	gR™ge
& 
	growR™ge
, c⁄° R™ge& 
	gcﬁR™ge
 ) const;

1239 
M©Ex¥
 
›î©‹
()–c⁄° 
	gRe˘
& 
	groi
 ) const;

1241 
M©
 
¸oss
(c⁄° M©& 
m
) const;

1242 
dŸ
(c⁄° 
M©
& 
m
) const;

1244 
M©Ex¥
 
t
() const;

1245 
M©Ex¥
 
öv
(
mëhod
 = 
DECOMP_LU
) const;

1246 
M©Ex¥
 
mul
(c⁄° M©Ex¥& 
e
, 
sˇÀ
=1) const;

1247 
M©Ex¥
 
mul
(c⁄° 
M©
& 
m
, 
sˇÀ
=1) const;

1249 
Size
 
size
() const;

1250 
ty≥
() const;

1252 c⁄° 
M©Op
* 
	g›
;

1253 
	gÊags
;

1255 
M©
 
	ga
, 
	gb
, 
	gc
;

1256 
	gÆpha
, 
	gbëa
;

1257 
Sˇœr
 
	gs
;

1261 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1262 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©
& 
	ga
, c⁄° 
	gSˇœr
& 
	gs
);

1263 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©
& 
	ga
);

1264 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gM©
& 
	gm
);

1265 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©
& 
	gm
, c⁄° 
	gM©Ex¥
& 
	ge
);

1266 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gSˇœr
& 
	gs
);

1267 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©Ex¥
& 
	ge
);

1268 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©Ex¥
& 
	ge1
, c⁄° M©Ex¥& 
	ge2
);

1270 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1271 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©
& 
	ga
, c⁄° 
	gSˇœr
& 
	gs
);

1272 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©
& 
	ga
);

1273 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gM©
& 
	gm
);

1274 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©
& 
	gm
, c⁄° 
	gM©Ex¥
& 
	ge
);

1275 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gSˇœr
& 
	gs
);

1276 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©Ex¥
& 
	ge
);

1277 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©Ex¥
& 
	ge1
, c⁄° M©Ex¥& 
	ge2
);

1279 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©
& 
	gm
);

1280 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©Ex¥
& 
	ge
);

1282 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1283 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©
& 
	ga
, 
	gs
);

1284 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (
	gs
, c⁄° 
	gM©
& 
	ga
);

1285 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gM©
& 
	gm
);

1286 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©
& 
	gm
, c⁄° 
	gM©Ex¥
& 
	ge
);

1287 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©Ex¥
& 
	ge
, 
	gs
);

1288 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (
	gs
, c⁄° 
	gM©Ex¥
& 
	ge
);

1289 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©Ex¥
& 
	ge1
, c⁄° M©Ex¥& 
	ge2
);

1291 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1292 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©
& 
	ga
, 
	gs
);

1293 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (
	gs
, c⁄° 
	gM©
& 
	ga
);

1294 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gM©
& 
	gm
);

1295 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©
& 
	gm
, c⁄° 
	gM©Ex¥
& 
	ge
);

1296 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©Ex¥
& 
	ge
, 
	gs
);

1297 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (
	gs
, c⁄° 
	gM©Ex¥
& 
	ge
);

1298 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©Ex¥
& 
	ge1
, c⁄° M©Ex¥& 
	ge2
);

1300 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 < (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1301 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 < (c⁄° 
	gM©
& 
	ga
, 
	gs
);

1302 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 < (
	gs
, c⁄° 
	gM©
& 
	ga
);

1304 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 <(c⁄° 
M©
& 
a
, c⁄° 
	gM©
& 
	gb
);

1305 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 <(c⁄° 
M©
& 
a
, 
	gs
);

1306 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 <(
s
, c⁄° 
	gM©
& 
	ga
);

1308 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 =(c⁄° 
M©
& 
a
, c⁄° 
	gM©
& 
	gb
);

1309 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 =(c⁄° 
M©
& 
a
, 
	gs
);

1310 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 =(
s
, c⁄° 
	gM©
& 
	ga
);

1312 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 !(c⁄° 
M©
& 
a
, c⁄° 
	gM©
& 
	gb
);

1313 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 !(c⁄° 
M©
& 
a
, 
	gs
);

1314 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 !(
s
, c⁄° 
	gM©
& 
	ga
);

1316 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 >(c⁄° 
M©
& 
a
, c⁄° 
	gM©
& 
	gb
);

1317 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 >(c⁄° 
M©
& 
a
, 
	gs
);

1318 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 >(
s
, c⁄° 
	gM©
& 
	ga
);

1320 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 > (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1321 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 > (c⁄° 
	gM©
& 
	ga
, 
	gs
);

1322 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 > (
	gs
, c⁄° 
	gM©
& 
	ga
);

1324 
CV_EXPORTS
 
M©Ex¥
 
mö
(c⁄° 
M©
& 
a
, c⁄° M©& 
b
);

1325 
CV_EXPORTS
 
M©Ex¥
 
mö
(c⁄° 
M©
& 
a
, 
s
);

1326 
CV_EXPORTS
 
M©Ex¥
 
mö
(
s
, c⁄° 
M©
& 
a
);

1328 
CV_EXPORTS
 
M©Ex¥
 
max
(c⁄° 
M©
& 
a
, c⁄° M©& 
b
);

1329 
CV_EXPORTS
 
M©Ex¥
 
max
(c⁄° 
M©
& 
a
, 
s
);

1330 
CV_EXPORTS
 
M©Ex¥
 
max
(
s
, c⁄° 
M©
& 
a
);

1332 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
mö
(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
b
)

1334  
	gcv
::
mö
((c⁄° 
M©
&)
a
, (c⁄° M©&)
b
);

1337 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
mö
(c⁄° 
M©_
<
_Tp
>& 
a
, 
s
)

1339  
	gcv
::
mö
((c⁄° 
M©
&)
a
, 
s
);

1342 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
mö
(
s
, c⁄° 
M©_
<
_Tp
>& 
a
)

1344  
	gcv
::
mö
((c⁄° 
M©
&)
a
, 
s
);

1347 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
max
(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
b
)

1349  
	gcv
::
max
((c⁄° 
M©
&)
a
, (c⁄° M©&)
b
);

1352 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
max
(c⁄° 
M©_
<
_Tp
>& 
a
, 
s
)

1354  
	gcv
::
max
((c⁄° 
M©
&)
a
, 
s
);

1357 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
max
(
s
, c⁄° 
M©_
<
_Tp
>& 
a
)

1359  
	gcv
::
max
((c⁄° 
M©
&)
a
, 
s
);

1362 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
mö
(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
b
, M©_<_Tp>& 
c
)

1364 
	gcv
::
mö
((c⁄° 
M©
&)
a
, (c⁄° M©&)
b
, (M©&)
c
);

1367 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
mö
(c⁄° 
M©_
<
_Tp
>& 
a
, 
s
, M©_<_Tp>& 
c
)

1369 
	gcv
::
mö
((c⁄° 
M©
&)
a
, 
s
, (M©&)
c
);

1372 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
mö
(
s
, c⁄° 
M©_
<
_Tp
>& 
a
, M©_<_Tp>& 
c
)

1374 
	gcv
::
mö
((c⁄° 
M©
&)
a
, 
s
, (M©&)
c
);

1377 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
max
(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
b
, M©_<_Tp>& 
c
)

1379 
	gcv
::
max
((c⁄° 
M©
&)
a
, (c⁄° M©&)
b
, (M©&)
c
);

1382 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
max
(c⁄° 
M©_
<
_Tp
>& 
a
, 
s
, M©_<_Tp>& 
c
)

1384 
	gcv
::
max
((c⁄° 
M©
&)
a
, 
s
, (M©&)
c
);

1387 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
max
(
s
, c⁄° 
M©_
<
_Tp
>& 
a
, M©_<_Tp>& 
c
)

1389 
	gcv
::
max
((c⁄° 
M©
&)
a
, 
s
, (M©&)
c
);

1393 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 & (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1394 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 & (c⁄° 
	gM©
& 
	ga
, c⁄° 
	gSˇœr
& 
	gs
);

1395 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 & (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©
& 
	ga
);

1397 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 | (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1398 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 | (c⁄° 
	gM©
& 
	ga
, c⁄° 
	gSˇœr
& 
	gs
);

1399 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 | (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©
& 
	ga
);

1401 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 ^ (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1402 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 ^ (c⁄° 
	gM©
& 
	ga
, c⁄° 
	gSˇœr
& 
	gs
);

1403 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 ^ (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©
& 
	ga
);

1405 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 ~(c⁄° 
	gM©
& 
	gm
);

1407 
CV_EXPORTS
 
M©Ex¥
 
abs
(c⁄° 
M©
& 
m
);

1408 
CV_EXPORTS
 
M©Ex¥
 
abs
(c⁄° M©Ex¥& 
e
);

1410 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
abs
(c⁄° 
M©_
<
_Tp
>& 
m
)

1412  
	gcv
::
abs
((c⁄° 
M©
&)
m
);

1417 
ölöe
 
	gM©
& M©::
›î©‹
 = (c⁄° 
M©Ex¥
& 
e
)

1419 
e
.
›
->
assign
”, *
this
);

1420  *
	gthis
;

1423 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
	$M©_
(c⁄° 
M©Ex¥
& 
e
)

1425 
e
.
›
->
	`assign
”, *
this
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1426 
	}
}

1428 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©_
<_Tp>& M©_<_Tp>::
›î©‹
 = (c⁄° 
M©Ex¥
& 
e
)

1430 
e
.
›
->
assign
”, *
this
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1431  *
	gthis
;

1434 
ölöe
 
	gM©
& 
	g›î©‹
 +(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1436 
add
(
a
, 
b
, (
M©
&)a);

1437  (
	gM©
&)
	ga
;

1440 
ölöe
 
	gM©
& 
	g›î©‹
 +(c⁄° 
M©
& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1442 
add
(
a
, 
s
, (
M©
&)a);

1443  (
	gM©
&)
	ga
;

1446 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1447 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 +(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
	gb
)

1449 
add
(
a
, 
b
, (
M©
&)a);

1450  (
	gM©_
<
	g_Tp
>&)
	ga
;

1453 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1454 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 +(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1456 
add
(
a
, 
s
, (
M©
&)a);

1457  (
	gM©_
<
	g_Tp
>&)
	ga
;

1460 
ölöe
 
	gM©
& 
	g›î©‹
 +(c⁄° 
M©
& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1462 
	gb
.
	g›
->
augAssignAdd
(
b
, (
M©
&)
a
);

1463  (
	gM©
&)
	ga
;

1466 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1467 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 +(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1469 
	gb
.
	g›
->
augAssignAdd
(
b
, (
M©
&)
a
);

1470  (
	gM©_
<
	g_Tp
>&)
	ga
;

1473 
ölöe
 
	gM©
& 
	g›î©‹
 -(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1475 
subåa˘
(
a
, 
b
, (
M©
&)a);

1476  (
	gM©
&)
	ga
;

1479 
ölöe
 
	gM©
& 
	g›î©‹
 -(c⁄° 
M©
& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1481 
subåa˘
(
a
, 
s
, (
M©
&)a);

1482  (
	gM©
&)
	ga
;

1485 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1486 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 -(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
	gb
)

1488 
subåa˘
(
a
, 
b
, (
M©
&)a);

1489  (
	gM©_
<
	g_Tp
>&)
	ga
;

1492 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1493 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 -(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1495 
subåa˘
(
a
, 
s
, (
M©
&)a);

1496  (
	gM©_
<
	g_Tp
>&)
	ga
;

1499 
ölöe
 
	gM©
& 
	g›î©‹
 -(c⁄° 
M©
& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1501 
	gb
.
	g›
->
augAssignSubåa˘
(
b
, (
M©
&)
a
);

1502  (
	gM©
&)
	ga
;

1505 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1506 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 -(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1508 
	gb
.
	g›
->
augAssignSubåa˘
(
b
, (
M©
&)
a
);

1509  (
	gM©_
<
	g_Tp
>&)
	ga
;

1512 
ölöe
 
	gM©
& 
	g›î©‹
 *(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1514 
gemm
(
a
, 
b
, 1, 
M©
(), 0, (Mat&)a, 0);

1515  (
	gM©
&)
	ga
;

1518 
ölöe
 
	gM©
& 
	g›î©‹
 *(c⁄° 
M©
& 
a
, 
	gs
)

1520 
	ga
.
c⁄vîtTo
((
M©
&)
a
, -1, 
s
);

1521  (
	gM©
&)
	ga
;

1524 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1525 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 *(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
	gb
)

1527 
gemm
(
a
, 
b
, 1, 
M©
(), 0, (Mat&)a, 0);

1528  (
	gM©_
<
	g_Tp
>&)
	ga
;

1531 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1532 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 *(c⁄° 
M©_
<
_Tp
>& 
a
, 
	gs
)

1534 
	ga
.
c⁄vîtTo
((
M©
&)
a
, -1, 
s
);

1535  (
	gM©_
<
	g_Tp
>&)
	ga
;

1538 
ölöe
 
	gM©
& 
	g›î©‹
 *(c⁄° 
M©
& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1540 
	gb
.
	g›
->
augAssignMu…ùly
(
b
, (
M©
&)
a
);

1541  (
	gM©
&)
	ga
;

1544 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1545 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 *(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1547 
	gb
.
	g›
->
augAssignMu…ùly
(
b
, (
M©
&)
a
);

1548  (
	gM©_
<
	g_Tp
>&)
	ga
;

1551 
ölöe
 
	gM©
& 
	g›î©‹
 /(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1553 
divide
(
a
, 
b
, (
M©
&)a);

1554  (
	gM©
&)
	ga
;

1557 
ölöe
 
	gM©
& 
	g›î©‹
 /(c⁄° 
M©
& 
a
, 
	gs
)

1559 
	ga
.
c⁄vîtTo
((
M©
&)
a
, -1, 1./
s
);

1560  (
	gM©
&)
	ga
;

1563 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1564 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 /(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
	gb
)

1566 
divide
(
a
, 
b
, (
M©
&)a);

1567  (
	gM©_
<
	g_Tp
>&)
	ga
;

1570 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1571 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 /(c⁄° 
M©_
<
_Tp
>& 
a
, 
	gs
)

1573 
	ga
.
c⁄vîtTo
((
M©
&)
a
, -1, 1./
s
);

1574  (
	gM©_
<
	g_Tp
>&)
	ga
;

1577 
ölöe
 
	gM©
& 
	g›î©‹
 /(c⁄° 
M©
& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1579 
	gb
.
	g›
->
augAssignDivide
(
b
, (
M©
&)
a
);

1580  (
	gM©
&)
	ga
;

1583 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1584 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 /(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1586 
	gb
.
	g›
->
augAssignDivide
(
b
, (
M©
&)
a
);

1587  (
	gM©_
<
	g_Tp
>&)
	ga
;

1592 
ölöe
 
	gM©
& 
	g›î©‹
 &(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1594 
bôwi£_™d
(
a
, 
b
, (
M©
&)a);

1595  (
	gM©
&)
	ga
;

1598 
ölöe
 
	gM©
& 
	g›î©‹
 &(c⁄° 
M©
& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1600 
bôwi£_™d
(
a
, 
s
, (
M©
&)a);

1601  (
	gM©
&)
	ga
;

1604 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1605 
	g›î©‹
 &(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©_
<
	g_Tp
>& 
	gb
)

1607 
bôwi£_™d
(
a
, 
b
, (
M©
&)a);

1608  (
	gM©_
<
	g_Tp
>&)
	ga
;

1611 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1612 
	g›î©‹
 &(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1614 
bôwi£_™d
(
a
, 
s
, (
M©
&)a);

1615  (
	gM©_
<
	g_Tp
>&)
	ga
;

1618 
ölöe
 
	gM©
& 
	g›î©‹
 |(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1620 
bôwi£_‹
(
a
, 
b
, (
M©
&)a);

1621  (
	gM©
&)
	ga
;

1624 
ölöe
 
	gM©
& 
	g›î©‹
 |(c⁄° 
M©
& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1626 
bôwi£_‹
(
a
, 
s
, (
M©
&)a);

1627  (
	gM©
&)
	ga
;

1630 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1631 
	g›î©‹
 |(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©_
<
	g_Tp
>& 
	gb
)

1633 
bôwi£_‹
(
a
, 
b
, (
M©
&)a);

1634  (
	gM©_
<
	g_Tp
>&)
	ga
;

1637 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1638 
	g›î©‹
 |(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1640 
bôwi£_‹
(
a
, 
s
, (
M©
&)a);

1641  (
	gM©_
<
	g_Tp
>&)
	ga
;

1644 
ölöe
 
	gM©
& 
	g›î©‹
 ^(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1646 
bôwi£_x‹
(
a
, 
b
, (
M©
&)a);

1647  (
	gM©
&)
	ga
;

1650 
ölöe
 
	gM©
& 
	g›î©‹
 ^(c⁄° 
M©
& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1652 
bôwi£_x‹
(
a
, 
s
, (
M©
&)a);

1653  (
	gM©
&)
	ga
;

1656 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1657 
	g›î©‹
 ^(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©_
<
	g_Tp
>& 
	gb
)

1659 
bôwi£_x‹
(
a
, 
b
, (
M©
&)a);

1660  (
	gM©_
<
	g_Tp
>&)
	ga
;

1663 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1664 
	g›î©‹
 ^(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1666 
bôwi£_x‹
(
a
, 
s
, (
M©
&)a);

1667  (
	gM©_
<
	g_Tp
>&)
	ga
;

1672 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
•lô
(c⁄° 
M©
& 
§c
, 
ve˘‹
<
M©_
<
_Tp
> >& 
mv
)

1673 { 
•lô
(
§c
, (
ve˘‹
<
M©
>&)
mv
 ); }

1677 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$zîos
(
rows
, 
cﬁs
)

1679  
M©
::
	`zîos
(
rows
, 
cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1680 
	}
}

1682 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$zîos
(
Size
 
sz
)

1684  
M©
::
	`zîos
(
sz
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1685 
	}
}

1687 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$⁄es
(
rows
, 
cﬁs
)

1689  
M©
::
	`⁄es
(
rows
, 
cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1690 
	}
}

1692 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$⁄es
(
Size
 
sz
)

1694  
M©
::
	`⁄es
(
sz
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1695 
	}
}

1697 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$eye
(
rows
, 
cﬁs
)

1699  
M©
::
	`eye
(
rows
, 
cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1700 
	}
}

1702 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$eye
(
Size
 
sz
)

1704  
M©
::
	`eye
(
sz
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1705 
	}
}

1709 
ölöe
 
	gM©C⁄°Iãøt‹
::
	$M©C⁄°Iãøt‹
()

1710 : 
	`m
(0), 
	`ñemSize
(0), 
	`±r
(0), 
	`¶i˚Sèπ
(0), 
	$¶i˚End
(0Ë{
	}
}

1712 
ölöe
 
	gM©C⁄°Iãøt‹
::
	$M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
)

1713 : 
	`m
(
_m
), 
	`ñemSize
(_m->ñemSize()), 
	`±r
(0), 
	`¶i˚Sèπ
(0), 
	$¶i˚End
(0)

1715 if–
m
 && m->
	`isC⁄töuous
() )

1717 
¶i˚Sèπ
 = 
m
->
d©a
;

1718 
¶i˚End
 = 
¶i˚Sèπ
 + 
m
->
	`tŸÆ
()*
ñemSize
;

1720 
	`£ek
((const *)0);

1721 
	}
}

1723 
ölöe
 
	gM©C⁄°Iãøt‹
::
	$M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
, 
_row
, 
_cﬁ
)

1724 : 
	`m
(
_m
), 
	`ñemSize
(_m->ñemSize()), 
	`±r
(0), 
	`¶i˚Sèπ
(0), 
	$¶i˚End
(0)

1726 
	`CV_As£π
(
m
 && m->
dims
 <= 2);

1727 if–
m
->
	`isC⁄töuous
() )

1729 
¶i˚Sèπ
 = 
m
->
d©a
;

1730 
¶i˚End
 = 
¶i˚Sèπ
 + 
m
->
	`tŸÆ
()*
ñemSize
;

1732 
idx
[]={
_row
, 
_cﬁ
};

1733 
	`£ek
(
idx
);

1734 
	}
}

1736 
ölöe
 
	gM©C⁄°Iãøt‹
::
	$M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
, 
Poöt
 
_±
)

1737 : 
	`m
(
_m
), 
	`ñemSize
(_m->ñemSize()), 
	`±r
(0), 
	`¶i˚Sèπ
(0), 
	$¶i˚End
(0)

1739 
	`CV_As£π
(
m
 && m->
dims
 <= 2);

1740 if–
m
->
	`isC⁄töuous
() )

1742 
¶i˚Sèπ
 = 
m
->
d©a
;

1743 
¶i˚End
 = 
¶i˚Sèπ
 + 
m
->
	`tŸÆ
()*
ñemSize
;

1745 
idx
[]={
_±
.
y
, _±.
x
};

1746 
	`£ek
(
idx
);

1747 
	}
}

1749 
ölöe
 
	gM©C⁄°Iãøt‹
::
	$M©C⁄°Iãøt‹
(c⁄° 
M©C⁄°Iãøt‹
& 
ô
)

1750 : 
	`m
(
ô
.
m
), 
	`ñemSize
(ô.
ñemSize
), 
	`±r
(ô.
±r
), 
	`¶i˚Sèπ
(ô.
¶i˚Sèπ
), 
	$¶i˚End
(
ô
.
¶i˚End
)

1751 {
	}
}

1753 
ölöe
 
	gM©C⁄°Iãøt‹
& M©C⁄°Iãøt‹::
›î©‹
 = (c⁄° 
M©C⁄°Iãøt‹
& 
ô
 )

1755 
m
 = 
ô
.m; 
	gñemSize
 = it.
ñemSize
; 
	g±r
 = it.
±r
;

1756 
	g¶i˚Sèπ
 = 
ô
.
¶i˚Sèπ
; 
	g¶i˚End
 = it.
¶i˚End
;

1757  *
	gthis
;

1760 
ölöe
 
uch¨
* 
	gM©C⁄°Iãøt‹
::
›î©‹
 *(Ëc⁄° {  
±r
; }

1762 
ölöe
 
	gM©C⁄°Iãøt‹
& M©C⁄°Iãøt‹::
›î©‹
 +(
±rdiff_t
 
ofs
)

1764 if–!
m
 || 
ofs
 == 0 )

1765  *
this
;

1766 
±rdiff_t
 
	gofsb
 = 
ofs
*
ñemSize
;

1767 
	g±r
 +
ofsb
;

1768 if–
	g±r
 < 
	g¶i˚Sèπ
 || 
	g¶i˚End
 <
±r
 )

1770 
±r
 -
ofsb
;

1771 
£ek
(
ofs
, 
åue
);

1773  *
	gthis
;

1776 
ölöe
 
	gM©C⁄°Iãøt‹
& M©C⁄°Iãøt‹::
›î©‹
 -(
±rdiff_t
 
ofs
)

1777 {  (*
this
 +-
ofs
); }

1779 
ölöe
 
	gM©C⁄°Iãøt‹
& M©C⁄°Iãøt‹::
›î©‹
 --()

1781 if–
m
 && (
±r
 -
ñemSize
Ë< 
¶i˚Sèπ
 )

1783 
±r
 +
ñemSize
;

1784 
£ek
(-1, 
åue
);

1786  *
	gthis
;

1789 
ölöe
 
M©C⁄°Iãøt‹
 
	gM©C⁄°Iãøt‹
::
›î©‹
 --()

1791 
M©C⁄°Iãøt‹
 
b
 = *
this
;

1792 *
	gthis
 += -1;

1793  
	gb
;

1796 
ölöe
 
	gM©C⁄°Iãøt‹
& M©C⁄°Iãøt‹::
›î©‹
 ++()

1798 if–
m
 && (
±r
 +
ñemSize
Ë>
¶i˚End
 )

1800 
±r
 -
ñemSize
;

1801 
£ek
(1, 
åue
);

1803  *
	gthis
;

1806 
ölöe
 
M©C⁄°Iãøt‹
 
	gM©C⁄°Iãøt‹
::
›î©‹
 ++()

1808 
M©C⁄°Iãøt‹
 
b
 = *
this
;

1809 *
	gthis
 += 1;

1810  
	gb
;

1813 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>::
	$M©C⁄°Iãøt‹_
(Ë{
	}
}

1815 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©C⁄°Iãøt‹_
<_Tp>::M©C⁄°Iãøt‹_(c⁄° 
M©_
<_Tp>* 
_m
)

1816 : 
	$M©C⁄°Iãøt‹
(
_m
Ë{
	}
}

1818 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©C⁄°Iãøt‹_
<_Tp>::

1819 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
_row
, 
_cﬁ
)

1820 : 
	$M©C⁄°Iãøt‹
(
_m
, 
_row
, 
_cﬁ
Ë{
	}
}

1822 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>::

1823 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
Poöt
 
_±
)

1824 : 
	$M©C⁄°Iãøt‹
(
_m
, 
_±
Ë{
	}
}

1826 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>::

1827 
	$M©C⁄°Iãøt‹_
(c⁄° 
M©C⁄°Iãøt‹_
& 
ô
)

1828 : 
	$M©C⁄°Iãøt‹
(
ô
Ë{
	}
}

1830 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©C⁄°Iãøt‹_
<_Tp>&

1831 
M©C⁄°Iãøt‹_
<
_Tp
>::
›î©‹
 = (c⁄° M©C⁄°Iãøt‹_& 
ô
 )

1833 
M©C⁄°Iãøt‹
::
›î©‹
 = (
ô
);

1834  *
	gthis
;

1837 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gM©C⁄°Iãøt‹_
<_Tp>::
›î©‹
 *(Ëc⁄° {  *(_Tp*)(
this
->
±r
); }

1839 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>& M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 +(
±rdiff_t
 
ofs
)

1841 
M©C⁄°Iãøt‹
::
›î©‹
 +(
ofs
);

1842  *
	gthis
;

1845 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>& M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 -(
±rdiff_t
 
ofs
)

1846 {  (*
this
 +-
ofs
); }

1848 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>& M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 --()

1850 
M©C⁄°Iãøt‹
::
›î©‹
 --();

1851  *
	gthis
;

1854 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 --()

1856 
M©C⁄°Iãøt‹_
 
b
 = *
this
;

1857 
	gM©C⁄°Iãøt‹
::
›î©‹
 --();

1858  
	gb
;

1861 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>& M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 ++()

1863 
M©C⁄°Iãøt‹
::
›î©‹
 ++();

1864  *
	gthis
;

1867 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 ++()

1869 
M©C⁄°Iãøt‹_
 
b
 = *
this
;

1870 
	gM©C⁄°Iãøt‹
::
›î©‹
 ++();

1871  
	gb
;

1874 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>::
	$M©Iãøt‹_
(Ë: 
M©C⁄°Iãøt‹_
<
_Tp
>(Ë{
	}
}

1876 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©Iãøt‹_
<_Tp>::M©Iãøt‹_(
M©_
<_Tp>* 
_m
)

1877 : 
M©C⁄°Iãøt‹_
<
_Tp
>(
_m
) {}

1879 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©Iãøt‹_
<_Tp>::M©Iãøt‹_(
M©_
<_Tp>* 
_m
, 
_row
, 
_cﬁ
)

1880 : 
M©C⁄°Iãøt‹_
<
_Tp
>(
_m
, 
	g_row
, 
	g_cﬁ
) {}

1882 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>::
M©Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
Poöt
 
_±
)

1883 : 
M©C⁄°Iãøt‹_
<
_Tp
>(
_m
, 
	g_±
) {}

1885 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>::
M©Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, c⁄° * 
_idx
)

1886 : 
M©C⁄°Iãøt‹_
<
_Tp
>(
_m
, 
	g_idx
) {}

1888 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>::
	$M©Iãøt‹_
(c⁄° 
M©Iãøt‹_
& 
ô
)

1889 : 
M©C⁄°Iãøt‹_
<
_Tp
>(
ô
Ë{
	}
}

1891 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©Iãøt‹_
<_Tp>& M©Iãøt‹_<_Tp>::
›î©‹
 = (c⁄° M©Iãøt‹_<_Tp>& 
ô
 )

1893 
M©C⁄°Iãøt‹
::
›î©‹
 = (
ô
);

1894  *
	gthis
;

1897 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©Iãøt‹_
<_Tp>::
›î©‹
 *(Ëc⁄° {  *(
_Tp
*)(
this
->
±r
); }

1899 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>& M©Iãøt‹_<_Tp>::
›î©‹
 +(
±rdiff_t
 
ofs
)

1901 
M©C⁄°Iãøt‹
::
›î©‹
 +(
ofs
);

1902  *
	gthis
;

1905 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>& M©Iãøt‹_<_Tp>::
›î©‹
 -(
±rdiff_t
 
ofs
)

1907 
M©C⁄°Iãøt‹
::
›î©‹
 +(-
ofs
);

1908  *
	gthis
;

1911 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>& M©Iãøt‹_<_Tp>::
›î©‹
 --()

1913 
M©C⁄°Iãøt‹
::
›î©‹
 --();

1914  *
	gthis
;

1917 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> M©Iãøt‹_<_Tp>::
›î©‹
 --()

1919 
M©Iãøt‹_
 
b
 = *
this
;

1920 
	gM©C⁄°Iãøt‹
::
›î©‹
 --();

1921  
	gb
;

1924 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>& M©Iãøt‹_<_Tp>::
›î©‹
 ++()

1926 
M©C⁄°Iãøt‹
::
›î©‹
 ++();

1927  *
	gthis
;

1930 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> M©Iãøt‹_<_Tp>::
›î©‹
 ++()

1932 
M©Iãøt‹_
 
b
 = *
this
;

1933 
	gM©C⁄°Iãøt‹
::
›î©‹
 ++();

1934  
	gb
;

1937 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
Poöt
 
	gM©C⁄°Iãøt‹_
<_Tp>::
	$pos
() const

1939 if–!
m
 )

1940  
	`Poöt
();

1941 
	`CV_DbgAs£π
–
m
->
dims
 <= 2 );

1942 if–
m
->
	`isC⁄töuous
() )

1944 
±rdiff_t
 
ofs
 = (c⁄° 
_Tp
*)
±r
 - (c⁄° _Tp*)
m
->
d©a
;

1945 
y
 = ()(
ofs
 / 
m
->
cﬁs
), 
x
 = ()(of†- (
±rdiff_t
)y*m->cols);

1946  
	`Poöt
(
x
, 
y
);

1950 
±rdiff_t
 
ofs
 = (
uch¨
*)
±r
 - 
m
->
d©a
;

1951 
y
 = ()(
ofs
 / 
m
->
°ï
), 
x
 = ()((of†- y*m->°ï)/(
_Tp
));

1952  
	`Poöt
(
x
, 
y
);

1954 
	}
}

1956 
ölöe
 
boﬁ


1957 
	g›î©‹
 =(c⁄° 
M©C⁄°Iãøt‹
& 
a
, c⁄° 
	gM©C⁄°Iãøt‹
& 
	gb
)

1958 {  
	ga
.
	gm
 =
b
.
m
 && 
a
.
±r
 == b.ptr; }

1960 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ


1961 
	g›î©‹
 !(c⁄° 
M©C⁄°Iãøt‹
& 
a
, c⁄° 
	gM©C⁄°Iãøt‹
& 
	gb
)

1962 {  !(
	ga
 =
b
); }

1964 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ


1965 
	g›î©‹
 =(c⁄° 
M©C⁄°Iãøt‹_
<
_Tp
>& 
a
, c⁄° 
	gM©C⁄°Iãøt‹_
<
	g_Tp
>& 
	gb
)

1966 {  
	ga
.
	gm
 =
b
.
m
 && 
a
.
±r
 == b.ptr; }

1968 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ


1969 
	g›î©‹
 !(c⁄° 
M©C⁄°Iãøt‹_
<
_Tp
>& 
a
, c⁄° 
	gM©C⁄°Iãøt‹_
<
	g_Tp
>& 
	gb
)

1970 {  
	ga
.
	gm
 !
b
.
m
 || 
a
.
±r
 != b.ptr; }

1972 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ


1973 
	g›î©‹
 =(c⁄° 
M©Iãøt‹_
<
_Tp
>& 
a
, c⁄° 
	gM©Iãøt‹_
<
	g_Tp
>& 
	gb
)

1974 {  
	ga
.
	gm
 =
b
.
m
 && 
a
.
±r
 == b.ptr; }

1976 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ


1977 
	g›î©‹
 !(c⁄° 
M©Iãøt‹_
<
_Tp
>& 
a
, c⁄° 
	gM©Iãøt‹_
<
	g_Tp
>& 
	gb
)

1978 {  
	ga
.
	gm
 !
b
.
m
 || 
a
.
±r
 != b.ptr; }

1980 
ölöe
 
boﬁ


1981 
	g›î©‹
 < (c⁄° 
	gM©C⁄°Iãøt‹
& 
	ga
, c⁄° M©C⁄°Iãøt‹& 
	gb
)

1982 {  
	ga
.
	g±r
 < 
	gb
.ptr; }

1984 
ölöe
 
boﬁ


1985 
	g›î©‹
 > (c⁄° 
	gM©C⁄°Iãøt‹
& 
	ga
, c⁄° M©C⁄°Iãøt‹& 
	gb
)

1986 {  
	ga
.
	g±r
 > 
	gb
.ptr; }

1988 
ölöe
 
boﬁ


1989 
	g›î©‹
 <(c⁄° 
M©C⁄°Iãøt‹
& 
a
, c⁄° 
	gM©C⁄°Iãøt‹
& 
	gb
)

1990 {  
	ga
.
	g±r
 <
b
.
±r
; }

1992 
ölöe
 
boﬁ


1993 
	g›î©‹
 >(c⁄° 
M©C⁄°Iãøt‹
& 
a
, c⁄° 
	gM©C⁄°Iãøt‹
& 
	gb
)

1994 {  
	ga
.
	g±r
 >
b
.
±r
; }

1996 
CV_EXPORTS
 
±rdiff_t
 
	g›î©‹
 - (c⁄° 
	gM©C⁄°Iãøt‹
& 
	gb
, c⁄° M©C⁄°Iãøt‹& 
	ga
);

1998 
ölöe
 
M©C⁄°Iãøt‹
 
	g›î©‹
 + (c⁄° 
	gM©C⁄°Iãøt‹
& 
	ga
, 
±rdiff_t
 
	gofs
)

1999 { 
M©C⁄°Iãøt‹
 
	gb
 = 
a
;  b +
ofs
; }

2001 
ölöe
 
M©C⁄°Iãøt‹
 
	g›î©‹
 + (
±rdiff_t
 
	gofs
, c⁄° 
	gM©C⁄°Iãøt‹
& 
	ga
)

2002 { 
M©C⁄°Iãøt‹
 
	gb
 = 
a
;  b +
ofs
; }

2004 
ölöe
 
M©C⁄°Iãøt‹
 
	g›î©‹
 - (c⁄° 
	gM©C⁄°Iãøt‹
& 
	ga
, 
±rdiff_t
 
	gofs
)

2005 { 
M©C⁄°Iãøt‹
 
	gb
 = 
a
;  b +-
ofs
; }

2007 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>

2008 
	g›î©‹
 + (c⁄° 
	gM©C⁄°Iãøt‹_
<
	g_Tp
>& 
	ga
, 
±rdiff_t
 
	gofs
)

2009 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 + 
ofs
;  (
	gM©C⁄°Iãøt‹_
<
	g_Tp
>&)t; }

2011 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>

2012 
	g›î©‹
 + (
±rdiff_t
 
	gofs
, c⁄° 
	gM©C⁄°Iãøt‹_
<
	g_Tp
>& 
	ga
)

2013 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 + 
ofs
;  (
	gM©C⁄°Iãøt‹_
<
	g_Tp
>&)t; }

2015 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>

2016 
	g›î©‹
 - (c⁄° 
	gM©C⁄°Iãøt‹_
<
	g_Tp
>& 
	ga
, 
±rdiff_t
 
	gofs
)

2017 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 - 
ofs
;  (
	gM©C⁄°Iãøt‹_
<
	g_Tp
>&)t; }

2019 
ölöe
 
uch¨
* 
	gM©C⁄°Iãøt‹
::
›î©‹
 [](
±rdiff_t
 
i
) const

2020 {  *(*
this
 + 
i
); }

2022 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gM©C⁄°Iãøt‹_
<_Tp>::
›î©‹
 [](
±rdiff_t
 
i
) const

2023 {  *(
_Tp
*)
M©C⁄°Iãøt‹
::
›î©‹
 [](
i
); }

2025 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>

2026 
	g›î©‹
 + (c⁄° 
	gM©Iãøt‹_
<
	g_Tp
>& 
	ga
, 
±rdiff_t
 
	gofs
)

2027 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 + 
ofs
;  (
	gM©Iãøt‹_
<
	g_Tp
>&)t; }

2029 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>

2030 
	g›î©‹
 + (
±rdiff_t
 
	gofs
, c⁄° 
	gM©Iãøt‹_
<
	g_Tp
>& 
	ga
)

2031 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 + 
ofs
;  (
	gM©Iãøt‹_
<
	g_Tp
>&)t; }

2033 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>

2034 
	g›î©‹
 - (c⁄° 
	gM©Iãøt‹_
<
	g_Tp
>& 
	ga
, 
±rdiff_t
 
	gofs
)

2035 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 - 
ofs
;  (
	gM©Iãøt‹_
<
	g_Tp
>&)t; }

2037 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©Iãøt‹_
<_Tp>::
›î©‹
 [](
±rdiff_t
 
i
) const

2038 {  *(*
this
 + 
i
); }

2040 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> 
	gM©_
<_Tp>::
	$begö
() const

2041 {  
M©
::
begö
<
_Tp
>(); 
	}
}

2043 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> 
	gM©_
<_Tp>::
	$íd
() const

2044 {  
M©
::
íd
<
_Tp
>(); 
	}
}

2046 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> 
	gM©_
<_Tp>::
	$begö
()

2047 {  
M©
::
begö
<
_Tp
>(); 
	}
}

2049 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> 
	gM©_
<_Tp>::
	$íd
()

2050 {  
M©
::
íd
<
_Tp
>(); 
	}
}

2052 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©CommaInôülizî_
<_Tp>::
M©CommaInôülizî_
(
M©_
<
_Tp
>* 
_m
Ë: 
	$ô
(
_m
Ë{
	}
}

2054 
ãm∂©e
<
ty≥«me
 
_Tp
>Åem∂©e<ty≥«mê
T2
> 
ölöe
 
M©CommaInôülizî_
<_Tp>&

2055 
M©CommaInôülizî_
<
_Tp
>::
›î©‹
 , (
T2
 
	gv
)

2057 
CV_DbgAs£π
–
this
->
ô
 < ((c⁄° 
M©_
<
_Tp
>*Èhis->ô.
m
)->
íd
() );

2058 *
	gthis
->
	gô
 = 
_Tp
(
v
); ++this->it;

2059  *
	gthis
;

2062 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> 
	gM©CommaInôülizî_
<_Tp>::
›î©‹
 *() const

2064 
CV_DbgAs£π
–
this
->
ô
 =((c⁄° 
M©_
<
_Tp
>*Èhis->ô.
m
)->
íd
() );

2065  
	gM©_
<
	g_Tp
>(*
	gthis
->
	gô
.
	gm
);

2068 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©CommaInôülizî_
<_Tp>::
›î©‹
 
M©_
<
_Tp
>() const

2070 
CV_DbgAs£π
–
this
->
ô
 =((c⁄° 
M©_
<
_Tp
>*Èhis->ô.
m
)->
íd
() );

2071  
	gM©_
<
	g_Tp
>(*
	gthis
->
	gô
.
	gm
);

2074 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	gT2
> 
ölöe
 
	gM©CommaInôülizî_
<_Tp>

2075 
	g›î©‹
 << (c⁄° 
	gM©_
<
	g_Tp
>& 
	gm
, 
T2
 
	gvÆ
)

2077 
	gM©CommaInôülizî_
<
	g_Tp
> 
commaInôülizî
((
M©_
<
_Tp
>*)&
m
);

2078  (
	gcommaInôülizî
, 
	gvÆ
);

2083 
ölöe
 
	gS∑r£M©
::
	$S∑r£M©
()

2084 : 
	`Êags
(
MAGIC_VAL
), 
	$hdr
(0)

2086 
	}
}

2088 
ölöe
 
	gS∑r£M©
::
	$S∑r£M©
(
_dims
, c⁄° * 
_sizes
, 
_ty≥
)

2089 : 
	`Êags
(
MAGIC_VAL
), 
	$hdr
(0)

2091 
	`¸óã
(
_dims
, 
_sizes
, 
_ty≥
);

2092 
	}
}

2094 
ölöe
 
	gS∑r£M©
::
	$S∑r£M©
(c⁄° 
S∑r£M©
& 
m
)

2095 : 
	`Êags
(
m
.
Êags
), 
	$hdr
(
m
.
hdr
)

2097 
	`addªf
();

2098 
	}
}

2100 
ölöe
 
	gS∑r£M©
::~
	$S∑r£M©
()

2102 
	`ªÀa£
();

2103 
	}
}

2105 
ölöe
 
	gS∑r£M©
& S∑r£M©::
›î©‹
 = (c⁄° 
S∑r£M©
& 
m
)

2107 if–
this
 !&
m
 )

2109 if–
m
.
hdr
 )

2110 
CV_XADD
(&
m
.
hdr
->
ªfcou¡
, 1);

2111 
ªÀa£
();

2112 
	gÊags
 = 
m
.
Êags
;

2113 
	ghdr
 = 
m
.
hdr
;

2115  *
	gthis
;

2118 
ölöe
 
	gS∑r£M©
& S∑r£M©::
›î©‹
 = (c⁄° 
M©
& 
m
)

2119 {  (*
this
 = 
S∑r£M©
(
m
)); }

2121 
ölöe
 
S∑r£M©
 
	gS∑r£M©
::
	$˛⁄e
() const

2123 
S∑r£M©
 
ãmp
;

2124 
this
->
	`c›yTo
(
ãmp
);

2125  
ãmp
;

2126 
	}
}

2129 
ölöe
 
	gS∑r£M©
::
	$assignTo
–
S∑r£M©
& 
m
, 
_ty≥
 ) const

2131 if–
_ty≥
 < 0 )

2132 
m
 = *
this
;

2134 
	`c⁄vîtTo
(
m
, 
_ty≥
);

2135 
	}
}

2137 
ölöe
 
	gS∑r£M©
::
	$addªf
()

2138 { if–
hdr
 ) 
	`CV_XADD
(&hdr->
ªfcou¡
, 1); 
	}
}

2140 
ölöe
 
	gS∑r£M©
::
	$ªÀa£
()

2142 if–
hdr
 && 
	`CV_XADD
(&hdr->
ªfcou¡
, -1) == 1 )

2143 
dñëe
 
hdr
;

2144 
hdr
 = 0;

2145 
	}
}

2147 
ölöe
 
size_t
 
	gS∑r£M©
::
	$ñemSize
() const

2148 {  
	`CV_ELEM_SIZE
(
Êags
); 
	}
}

2150 
ölöe
 
size_t
 
	gS∑r£M©
::
	$ñemSize1
() const

2151 {  
	`CV_ELEM_SIZE1
(
Êags
); 
	}
}

2153 
ölöe
 
	gS∑r£M©
::
	$ty≥
() const

2154 {  
	`CV_MAT_TYPE
(
Êags
); 
	}
}

2156 
ölöe
 
	gS∑r£M©
::
	$dïth
() const

2157 {  
	`CV_MAT_DEPTH
(
Êags
); 
	}
}

2159 
ölöe
 
	gS∑r£M©
::
	$ch™√ls
() const

2160 {  
	`CV_MAT_CN
(
Êags
); 
	}
}

2162 
ölöe
 c⁄° * 
	gS∑r£M©
::
	$size
() const

2164  
hdr
 ? hdr->
size
 : 0;

2165 
	}
}

2167 
ölöe
 
	gS∑r£M©
::
	$size
(
i
) const

2169 if–
hdr
 )

2171 
	`CV_DbgAs£π
(()
i
 < ()
hdr
->
dims
);

2172  
hdr
->
size
[
i
];

2175 
	}
}

2177 
ölöe
 
	gS∑r£M©
::
	$dims
() const

2179  
hdr
 ? hdr->
dims
 : 0;

2180 
	}
}

2182 
ölöe
 
size_t
 
	gS∑r£M©
::
	$nzcou¡
() const

2184  
hdr
 ? hdr->
nodeCou¡
 : 0;

2185 
	}
}

2187 
ölöe
 
size_t
 
	gS∑r£M©
::
	$hash
(
i0
) const

2189  (
size_t
)
i0
;

2190 
	}
}

2192 
ölöe
 
size_t
 
	gS∑r£M©
::
	$hash
(
i0
, 
i1
) const

2194  (
size_t
)()
i0
*
HASH_SCALE
 + ()
i1
;

2195 
	}
}

2197 
ölöe
 
size_t
 
	gS∑r£M©
::
	$hash
(
i0
, 
i1
, 
i2
) const

2199  ((
size_t
)()
i0
*
HASH_SCALE
 + ()
i1
)*HASH_SCALE + ()
i2
;

2200 
	}
}

2202 
ölöe
 
size_t
 
	gS∑r£M©
::
	$hash
(c⁄° * 
idx
) const

2204 
size_t
 
h
 = ()
idx
[0];

2205 if–!
hdr
 )

2207 
i
, 
d
 = 
hdr
->
dims
;

2208  
i
 = 1; i < 
d
; i++ )

2209 
h
 = h*
HASH_SCALE
 + ()
idx
[
i
];

2210  
h
;

2211 
	}
}

2213 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©
::
	$ªf
(
i0
, 
size_t
* 
hashvÆ
)

2214 {  *(
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
åue
, 
hashvÆ
); 
	}
}

2216 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©
::
	$ªf
(
i0
, 
i1
, 
size_t
* 
hashvÆ
)

2217 {  *(
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
åue
, 
hashvÆ
); 
	}
}

2219 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©
::
	$ªf
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
)

2220 {  *(
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
i2
, 
åue
, 
hashvÆ
); 
	}
}

2222 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©
::
	$ªf
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
)

2223 {  *(
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
idx
, 
åue
, 
hashvÆ
); 
	}
}

2225 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gS∑r£M©
::
	$vÆue
(
i0
, 
size_t
* 
hashvÆ
) const

2227 c⁄° 
_Tp
* 
p
 = (c⁄° _Tp*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
Ál£
, 
hashvÆ
);

2228  
p
 ? *∞: 
	`_Tp
();

2229 
	}
}

2231 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gS∑r£M©
::
	$vÆue
(
i0
, 
i1
, 
size_t
* 
hashvÆ
) const

2233 c⁄° 
_Tp
* 
p
 = (c⁄° _Tp*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
Ál£
, 
hashvÆ
);

2234  
p
 ? *∞: 
	`_Tp
();

2235 
	}
}

2237 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gS∑r£M©
::
	$vÆue
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
) const

2239 c⁄° 
_Tp
* 
p
 = (c⁄° _Tp*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
i2
, 
Ál£
, 
hashvÆ
);

2240  
p
 ? *∞: 
	`_Tp
();

2241 
	}
}

2243 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gS∑r£M©
::
	$vÆue
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
) const

2245 c⁄° 
_Tp
* 
p
 = (c⁄° _Tp*)((
S∑r£M©
*)
this
)->
	`±r
(
idx
, 
Ál£
, 
hashvÆ
);

2246  
p
 ? *∞: 
	`_Tp
();

2247 
	}
}

2249 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gS∑r£M©
::
	$föd
(
i0
, 
size_t
* 
hashvÆ
) const

2250 {  (c⁄° 
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
Ál£
, 
hashvÆ
); 
	}
}

2252 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gS∑r£M©
::
	$föd
(
i0
, 
i1
, 
size_t
* 
hashvÆ
) const

2253 {  (c⁄° 
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
Ál£
, 
hashvÆ
); 
	}
}

2255 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gS∑r£M©
::
	$föd
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
) const

2256 {  (c⁄° 
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
i2
, 
Ál£
, 
hashvÆ
); 
	}
}

2258 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gS∑r£M©
::
	$föd
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
) const

2259 {  (c⁄° 
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
idx
, 
Ál£
, 
hashvÆ
); 
	}
}

2261 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©
::
	$vÆue
(
Node
* 
n
)

2262 {  *(
_Tp
*)((
uch¨
*)
n
 + 
hdr
->
vÆueOff£t
); 
	}
}

2264 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gS∑r£M©
::
	$vÆue
(c⁄° 
Node
* 
n
) const

2265 {  *(c⁄° 
_Tp
*)((c⁄° 
uch¨
*)
n
 + 
hdr
->
vÆueOff£t
); 
	}
}

2267 
ölöe
 
	gS∑r£M©
::
Node
* 
S∑r£M©
::
	$node
(
size_t
 
nidx
)

2268 {  (
Node
*)(*)&
hdr
->
poﬁ
[
nidx
]; 
	}
}

2270 
ölöe
 c⁄° 
	gS∑r£M©
::
Node
* 
S∑r£M©
::
	$node
(
size_t
 
nidx
) const

2271 {  (c⁄° 
Node
*)(*)&
hdr
->
poﬁ
[
nidx
]; 
	}
}

2273 
ölöe
 
S∑r£M©Iãøt‹
 
	gS∑r£M©
::
	$begö
()

2274 {  
	`S∑r£M©Iãøt‹
(
this
); 
	}
}

2276 
ölöe
 
S∑r£M©C⁄°Iãøt‹
 
	gS∑r£M©
::
	$begö
() const

2277 {  
	`S∑r£M©C⁄°Iãøt‹
(
this
); 
	}
}

2279 
ölöe
 
S∑r£M©Iãøt‹
 
	gS∑r£M©
::
	$íd
()

2280 { 
S∑r£M©Iãøt‹
 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2282 
ölöe
 
S∑r£M©C⁄°Iãøt‹
 
	gS∑r£M©
::
	$íd
() const

2283 { 
S∑r£M©C⁄°Iãøt‹
 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2285 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp> 
	gS∑r£M©
::
	$begö
()

2286 {  
S∑r£M©Iãøt‹_
<
_Tp
>(
this
); 
	}
}

2288 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp> 
	gS∑r£M©
::
	$begö
() const

2289 {  
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>(
this
); 
	}
}

2291 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp> 
	gS∑r£M©
::
	$íd
()

2292 { 
S∑r£M©Iãøt‹_
<
_Tp
> 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2294 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp> 
	gS∑r£M©
::
	$íd
() const

2295 { 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
> 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2298 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹
::
	$S∑r£M©C⁄°Iãøt‹
()

2299 : 
	`m
(0), 
	`hashidx
(0), 
	$±r
(0)

2301 
	}
}

2303 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹
::
	$S∑r£M©C⁄°Iãøt‹
(c⁄° 
S∑r£M©C⁄°Iãøt‹
& 
ô
)

2304 : 
	`m
(
ô
.
m
), 
	`hashidx
(ô.
hashidx
), 
	$±r
(
ô
.
±r
)

2306 
	}
}

2308 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
S∑r£M©C⁄°Iãøt‹
& 
ô1
, c⁄° 
	gS∑r£M©C⁄°Iãøt‹
& 
	gô2
)

2309 {  
	gô1
.
	gm
 =
ô2
.
m
 && 
ô1
.
±r
 == it2.ptr; }

2311 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
S∑r£M©C⁄°Iãøt‹
& 
ô1
, c⁄° 
	gS∑r£M©C⁄°Iãøt‹
& 
	gô2
)

2312 {  !(
	gô1
 =
ô2
); }

2315 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹
& S∑r£M©C⁄°Iãøt‹::
›î©‹
 = (c⁄° 
S∑r£M©C⁄°Iãøt‹
& 
ô
)

2317 if–
this
 !&
ô
 )

2319 
m
 = 
ô
.m;

2320 
	ghashidx
 = 
ô
.
hashidx
;

2321 
	g±r
 = 
ô
.
±r
;

2323  *
	gthis
;

2326 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gS∑r£M©C⁄°Iãøt‹
::
	$vÆue
() const

2327 {  *(
_Tp
*)
±r
; 
	}
}

2329 
ölöe
 c⁄° 
	gS∑r£M©
::
Node
* 
S∑r£M©C⁄°Iãøt‹
::
	$node
() const

2331  
±r
 && 
m
 && m->
hdr
 ?

2332 (c⁄° 
S∑r£M©
::
Node
*)(*)(
±r
 - 
m
->
hdr
->
vÆueOff£t
) : 0;

2333 
	}
}

2335 
ölöe
 
S∑r£M©C⁄°Iãøt‹
 
	gS∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++()

2337 
S∑r£M©C⁄°Iãøt‹
 
ô
 = *
this
;

2338 ++*
	gthis
;

2339  
	gô
;

2343 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹
::
	$£ekEnd
()

2345 if–
m
 && m->
hdr
 )

2347 
hashidx
 = 
m
->
hdr
->
hashèb
.
	`size
();

2348 
±r
 = 0;

2350 
	}
}

2352 
ölöe
 
	gS∑r£M©Iãøt‹
::
	$S∑r£M©Iãøt‹
()

2353 {
	}
}

2355 
ölöe
 
S∑r£M©Iãøt‹
::
	$S∑r£M©Iãøt‹
(
S∑r£M©
* 
_m
)

2356 : 
	$S∑r£M©C⁄°Iãøt‹
(
_m
)

2357 {
	}
}

2359 
ölöe
 
S∑r£M©Iãøt‹
::
	$S∑r£M©Iãøt‹
(c⁄° 
S∑r£M©Iãøt‹
& 
ô
)

2360 : 
	$S∑r£M©C⁄°Iãøt‹
(
ô
)

2362 
	}
}

2364 
ölöe
 
S∑r£M©Iãøt‹
& S∑r£M©Iãøt‹::
›î©‹
 = (c⁄° S∑r£M©Iãøt‹& 
ô
)

2366 (
S∑r£M©C⁄°Iãøt‹
&)*
this
 = 
ô
;

2367  *
	gthis
;

2370 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©Iãøt‹
::
	$vÆue
() const

2371 {  *(
_Tp
*)
±r
; 
	}
}

2373 
ölöe
 
	gS∑r£M©
::
Node
* 
S∑r£M©Iãøt‹
::
	$node
() const

2375  (
S∑r£M©
::
Node
*)
S∑r£M©C⁄°Iãøt‹
::
	`node
();

2376 
	}
}

2378 
ölöe
 
	gS∑r£M©Iãøt‹
& S∑r£M©Iãøt‹::
›î©‹
 ++()

2380 
S∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++();

2381  *
	gthis
;

2384 
ölöe
 
S∑r£M©Iãøt‹
 
	gS∑r£M©Iãøt‹
::
›î©‹
 ++()

2386 
S∑r£M©Iãøt‹
 
ô
 = *
this
;

2387 ++*
	gthis
;

2388  
	gô
;

2392 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$S∑r£M©_
()

2393 { 
Êags
 = 
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
; 
	}
}

2395 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$S∑r£M©_
(
_dims
, c⁄° * 
_sizes
)

2396 : 
	`S∑r£M©
(
_dims
, 
_sizes
, 
D©aTy≥
<
_Tp
>::
ty≥
)

2397 {
	}
}

2399 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
S∑r£M©_
<_Tp>::
	$S∑r£M©_
(c⁄° 
S∑r£M©
& 
m
)

2401 if–
m
.
	`ty≥
(Ë=
D©aTy≥
<
_Tp
>::
ty≥
 )

2402 *
this
 = (c⁄° 
S∑r£M©_
<
_Tp
>&)
m
;

2404 
m
.
	`c⁄vîtTo
(*
this
, 
D©aTy≥
<
_Tp
>::
ty≥
);

2405 
	}
}

2407 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
S∑r£M©_
(c⁄° S∑r£M©_<
_Tp
>& 
m
)

2409 
this
->
Êags
 = 
m
.flags;

2410 
	gthis
->
	ghdr
 = 
m
.
hdr
;

2411 if–
	gthis
->
	ghdr
 )

2412 
CV_XADD
(&
this
->
hdr
->
ªfcou¡
, 1);

2415 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$S∑r£M©_
(c⁄° 
M©
& 
m
)

2417 
S∑r£M©
 
	`sm
(
m
);

2418 *
this
 = 
sm
;

2419 
	}
}

2421 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$S∑r£M©_
(c⁄° 
CvS∑r£M©
* 
m
)

2423 
S∑r£M©
 
	`sm
(
m
);

2424 *
this
 = 
sm
;

2425 
	}
}

2427 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>&

2428 
	gS∑r£M©_
<
	g_Tp
>::
›î©‹
 = (c⁄° 
S∑r£M©_
<
_Tp
>& 
m
)

2430 if–
this
 !&
m
 )

2432 if–
m
.
hdr
 ) 
CV_XADD
(&m.hdr->
ªfcou¡
, 1);

2433 
ªÀa£
();

2434 
	gÊags
 = 
m
.
Êags
;

2435 
	ghdr
 = 
m
.
hdr
;

2437  *
	gthis
;

2440 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>&

2441 
	gS∑r£M©_
<
	g_Tp
>::
›î©‹
 = (c⁄° 
S∑r£M©
& 
m
)

2443 if–
m
.
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type )

2444  (*
this
 = (c⁄° 
S∑r£M©_
<
_Tp
>&)
m
);

2445 
	gm
.
c⁄vîtTo
(*
this
, 
D©aTy≥
<
_Tp
>::
ty≥
);

2446  *
	gthis
;

2449 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>&

2450 
	gS∑r£M©_
<
	g_Tp
>::
›î©‹
 = (c⁄° 
M©
& 
m
)

2451 {  (*
this
 = 
S∑r£M©
(
m
)); }

2453 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>

2454 
	gS∑r£M©_
<
	g_Tp
>::
	$˛⁄e
() const

2456 
S∑r£M©_
<
_Tp
> 
m
;

2457 
this
->
	`c›yTo
(
m
);

2458  
m
;

2459 
	}
}

2461 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 

2462 
	gS∑r£M©_
<
	g_Tp
>::
	$¸óã
(
_dims
, c⁄° * 
_sizes
)

2464 
S∑r£M©
::
	`¸óã
(
_dims
, 
_sizes
, 
D©aTy≥
<
_Tp
>::
ty≥
);

2465 
	}
}

2467 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2468 
	gS∑r£M©_
<
	g_Tp
>::
›î©‹
 
CvS∑r£M©
*() const

2470  
S∑r£M©
::
›î©‹
 
CvS∑r£M©
*();

2473 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$ty≥
() const

2474 {  
D©aTy≥
<
_Tp
>::
ty≥
; 
	}
}

2476 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$dïth
() const

2477 {  
D©aTy≥
<
_Tp
>::
dïth
; 
	}
}

2479 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$ch™√ls
() const

2480 {  
D©aTy≥
<
_Tp
>::
ch™√ls
; 
	}
}

2482 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp&

2483 
	gS∑r£M©_
<
	g_Tp
>::
	$ªf
(
i0
, 
size_t
* 
hashvÆ
)

2484 {  
S∑r£M©
::
ªf
<
_Tp
>(
i0
, 
hashvÆ
); 
	}
}

2486 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp


2487 
	gS∑r£M©_
<
	g_Tp
>::
	$›î©‹
()(
i0
, 
size_t
* 
hashvÆ
) const

2488 {  
S∑r£M©
::
vÆue
<
_Tp
>(
i0
, 
hashvÆ
); 
	}
}

2490 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp&

2491 
	gS∑r£M©_
<
	g_Tp
>::
	$ªf
(
i0
, 
i1
, 
size_t
* 
hashvÆ
)

2492 {  
S∑r£M©
::
ªf
<
_Tp
>(
i0
, 
i1
, 
hashvÆ
); 
	}
}

2494 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp


2495 
	gS∑r£M©_
<
	g_Tp
>::
	$›î©‹
()(
i0
, 
i1
, 
size_t
* 
hashvÆ
) const

2496 {  
S∑r£M©
::
vÆue
<
_Tp
>(
i0
, 
i1
, 
hashvÆ
); 
	}
}

2498 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp&

2499 
	gS∑r£M©_
<
	g_Tp
>::
	$ªf
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
)

2500 {  
S∑r£M©
::
ªf
<
_Tp
>(
i0
, 
i1
, 
i2
, 
hashvÆ
); 
	}
}

2502 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp


2503 
	gS∑r£M©_
<
	g_Tp
>::
	$›î©‹
()(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
) const

2504 {  
S∑r£M©
::
vÆue
<
_Tp
>(
i0
, 
i1
, 
i2
, 
hashvÆ
); 
	}
}

2506 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp&

2507 
	gS∑r£M©_
<
	g_Tp
>::
	$ªf
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
)

2508 {  
S∑r£M©
::
ªf
<
_Tp
>(
idx
, 
hashvÆ
); 
	}
}

2510 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp


2511 
	gS∑r£M©_
<
	g_Tp
>::
	$›î©‹
()(c⁄° * 
idx
, 
size_t
* 
hashvÆ
) const

2512 {  
S∑r£M©
::
vÆue
<
_Tp
>(
idx
, 
hashvÆ
); 
	}
}

2514 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp> 
	gS∑r£M©_
<_Tp>::
	$begö
()

2515 {  
S∑r£M©Iãøt‹_
<
_Tp
>(
this
); 
	}
}

2517 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp> 
	gS∑r£M©_
<_Tp>::
	$begö
() const

2518 {  
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>(
this
); 
	}
}

2520 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp> 
	gS∑r£M©_
<_Tp>::
	$íd
()

2521 { 
S∑r£M©Iãøt‹_
<
_Tp
> 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2523 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp> 
	gS∑r£M©_
<_Tp>::
	$íd
() const

2524 { 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
> 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2526 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2527 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
>::
	$S∑r£M©C⁄°Iãøt‹_
()

2528 {
	}
}

2530 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe


2531 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>::S∑r£M©C⁄°Iãøt‹_(c⁄° 
S∑r£M©_
<_Tp>* 
_m
)

2532 : 
	$S∑r£M©C⁄°Iãøt‹
(
_m
)

2533 {
	}
}

2535 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe


2536 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>::
	$S∑r£M©C⁄°Iãøt‹_
(c⁄° 
S∑r£M©
* 
_m
)

2537 : 
	$S∑r£M©C⁄°Iãøt‹
(
_m
)

2539 
	`CV_As£π
–
_m
->
	`ty≥
(Ë=
D©aTy≥
<
_Tp
>::
ty≥
 );

2540 
	}
}

2542 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2543 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
>::
S∑r£M©C⁄°Iãøt‹_
(c⁄° S∑r£M©C⁄°Iãøt‹_<
_Tp
>& 
ô
)

2544 : 
	$S∑r£M©C⁄°Iãøt‹
(
ô
)

2545 {
	}
}

2547 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
S∑r£M©C⁄°Iãøt‹_
<_Tp>&

2548 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>::
›î©‹
 = (c⁄° S∑r£M©C⁄°Iãøt‹_<_Tp>& 
ô
)

2549 {  
ªöãΩªt_ˇ°
<
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>&>

2550 (*
ªöãΩªt_ˇ°
<
S∑r£M©C⁄°Iãøt‹
*>(
this
) =

2551 
ªöãΩªt_ˇ°
<c⁄° 
S∑r£M©C⁄°Iãøt‹
&>(
ô
)); }

2553 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 const _Tp&

2554 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
>::
›î©‹
 *() const

2555 {  *(c⁄° 
_Tp
*)
this
->
±r
; }

2557 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp>&

2558 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
>::
›î©‹
 ++()

2560 
S∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++();

2561  *
	gthis
;

2564 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp>

2565 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
>::
›î©‹
 ++()

2567 
S∑r£M©C⁄°Iãøt‹
 
ô
 = *
this
;

2568 
	gS∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++();

2569  
	gô
;

2572 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2573 
	gS∑r£M©Iãøt‹_
<
	g_Tp
>::
	$S∑r£M©Iãøt‹_
()

2574 {
	}
}

2576 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe


2577 
S∑r£M©Iãøt‹_
<
_Tp
>::S∑r£M©Iãøt‹_(
S∑r£M©_
<_Tp>* 
_m
)

2578 : 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>(
_m
)

2581 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe


2582 
S∑r£M©Iãøt‹_
<
_Tp
>::
	$S∑r£M©Iãøt‹_
(
S∑r£M©
* 
_m
)

2583 : 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>(
_m
)

2584 {
	}
}

2586 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe


2587 
S∑r£M©Iãøt‹_
<
_Tp
>::S∑r£M©Iãøt‹_(c⁄° S∑r£M©Iãøt‹_<_Tp>& 
ô
)

2588 : 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>(
ô
)

2591 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
S∑r£M©Iãøt‹_
<_Tp>&

2592 
S∑r£M©Iãøt‹_
<
_Tp
>::
›î©‹
 = (c⁄° S∑r£M©Iãøt‹_<_Tp>& 
ô
)

2593 {  
ªöãΩªt_ˇ°
<
S∑r£M©Iãøt‹_
<
_Tp
>&>

2594 (*
ªöãΩªt_ˇ°
<
S∑r£M©C⁄°Iãøt‹
*>(
this
) =

2595 
ªöãΩªt_ˇ°
<c⁄° 
S∑r£M©C⁄°Iãøt‹
&>(
ô
)); }

2597 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp&

2598 
	gS∑r£M©Iãøt‹_
<
	g_Tp
>::
›î©‹
 *() const

2599 {  *(
_Tp
*)
this
->
±r
; }

2601 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp>&

2602 
	gS∑r£M©Iãøt‹_
<
	g_Tp
>::
›î©‹
 ++()

2604 
S∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++();

2605  *
	gthis
;

2608 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp>

2609 
	gS∑r£M©Iãøt‹_
<
	g_Tp
>::
›î©‹
 ++()

2611 
S∑r£M©Iãøt‹
 
ô
 = *
this
;

2612 
	gS∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++();

2613  
	gô
;

	@/usr/include/opencv2/core/operations.hpp

43 #i‚de‡
__OPENCV_CORE_OPERATIONS_HPP__


44 
	#__OPENCV_CORE_OPERATIONS_HPP__


	)

46 #i‚de‡
SKIP_INCLUDES


47 
	~<°rög.h
>

48 
	~<limôs.h
>

52 #ifde‡
__˝lu•lus


55 #i‡
deföed
 
__INTEL_COMPILER
 && !(deföed 
WIN32
 || deföed 
_WIN32
)

56 
	#CV_XADD
(
addr
,
dñè
Ë
	`_I¡îlockedExch™geAdd
(
c⁄°_ˇ°
<*>(
ªöãΩªt_ˇ°
<vﬁ©ûê*>◊ddr)), dñè)

	)

57 #ñi‡
deföed
 
__GNUC__


59 #i‡
deföed
 
__˛™g__
 && 
__˛™g_maj‹__
 >3 && !deföed 
__ANDROID__
 && !deföed 
__EMSCRIPTEN__


60 #ifde‡
__ATOMIC_SEQ_CST


61 
	#CV_XADD
(
addr
, 
dñè
Ë
	`__c11_©omic_„tch_add
((
	`_Atomic
()*)◊ddr), (dñè), 
__ATOMIC_SEQ_CST
)

	)

63 
	#CV_XADD
(
addr
, 
dñè
Ë
	`__©omic_„tch_add
((
	`_Atomic
()*)◊ddr), (dñè), 5)

	)

65 #ñi‡
__GNUC__
*10 + 
__GNUC_MINOR__
 >= 42

67 #i‡!(
deföed
 
WIN32
 || deföed 
_WIN32
Ë&& (deföed 
__i486__
 || deföed 
__i586__
 || \

68 
deföed
 
	g__i686__
 || deföed 
	g__MMX__
 || deföed 
	g__SSE__
 || deföed 
	g__µc__
) || \

69 (
deföed
 
	g__GNUC__
 && deföed 
	g_STLPORT_MAJOR
) || \

70 
deföed
 
	g__EMSCRIPTEN__


72 
	#CV_XADD
 
__sync_„tch_™d_add


	)

74 
	~<ext/©omicôy.h
>

75 
	#CV_XADD
 
__gnu_cxx
::
__exch™ge_™d_add


	)

79 
	~<bôs/©omicôy.h
>

80 #i‡
__GNUC__
*10 + 
__GNUC_MINOR__
 >= 34

81 
	#CV_XADD
 
__gnu_cxx
::
__exch™ge_™d_add


	)

83 
	#CV_XADD
 
__exch™ge_™d_add


	)

87 #ñi‡
deföed
 
WIN32
 || deföed 
_WIN32
 || deföed 
WINCE


88 
«me•a˚
 
	gcv
 { 
CV_EXPORTS
 
_öãæockedExch™geAdd
(* 
addr
, 
dñè
); }

89 
	#CV_XADD
 
cv
::
_öãæockedExch™geAdd


	)

92 
ölöe
 
	$CV_XADD
(* 
addr
, 
dñè
)

93 { 
tmp
 = *
addr
; *add∏+
dñè
; Åmp; 
	}
}

96 
	~<limôs
>

98 #ifde‡
_MSC_VER


99 #¥agm®
w¨nög
(
push
)

100 #¥agm®
w¨nög
(
dißbÀ
:4127)

103 
«me•a˚
 
	gcv


106 
usög
 
	g°d
::
cos
;

107 
usög
 
	g°d
::
sö
;

108 
usög
 
	g°d
::
max
;

109 
usög
 
	g°d
::
mö
;

110 
usög
 
	g°d
::
exp
;

111 
usög
 
	g°d
::
log
;

112 
usög
 
	g°d
::
pow
;

113 
usög
 
	g°d
::
sqπ
;

118 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
uch¨
 
v
) {  _Tp(v); }

119 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
sch¨
 
v
) {  _Tp(v); }

120 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
ush‹t
 
v
) {  _Tp(v); }

121 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
v
) {  _Tp(v); }

122 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
v
) {  _Tp(v); }

123 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
v
) {  _Tp(v); }

124 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
v
) {  _Tp(v); }

125 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
v
) {  _Tp(v); }

127 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
sch¨
 
	gv
)

128 {  (
	guch¨
)
	g°d
::
max
(()
v
, 0); }

129 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
ush‹t
 
	gv
)

130 {  (
	guch¨
)
	g°d
::
mö
(()
v
, ()
UCHAR_MAX
); }

131 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
	gv
)

132 {  (
	guch¨
)(()
	gv
 <
UCHAR_MAX
 ? 
v
 : v > 0 ? UCHAR_MAX : 0); }

133 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
	gv
)

134 {  
	gßtuøã_ˇ°
<
	guch¨
>(()
	gv
); }

135 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
	gv
)

136 {  (
	guch¨
)
	g°d
::
mö
(
v
, ()
UCHAR_MAX
); }

137 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
	gv
)

138 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	guch¨
>(iv); }

139 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
	gv
)

140 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	guch¨
>(iv); }

142 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
uch¨
 
	gv
)

143 {  (
	gsch¨
)
	g°d
::
mö
(()
v
, 
SCHAR_MAX
); }

144 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
ush‹t
 
	gv
)

145 {  (
	gsch¨
)
	g°d
::
mö
(()
v
, ()
SCHAR_MAX
); }

146 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
	gv
)

148  (
	gsch¨
)(()(
	gv
-
	gSCHAR_MIN
Ë<()
UCHAR_MAX
 ?

149 
v
 : v > 0 ? 
SCHAR_MAX
 : 
SCHAR_MIN
);

151 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
	gv
)

152 {  
	gßtuøã_ˇ°
<
	gsch¨
>(()
	gv
); }

153 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
	gv
)

154 {  (
	gsch¨
)
	g°d
::
mö
(
v
, ()
SCHAR_MAX
); }

156 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
	gv
)

157 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	gsch¨
>(iv); }

158 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
	gv
)

159 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	gsch¨
>(iv); }

161 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
sch¨
 
	gv
)

162 {  (
	gush‹t
)
	g°d
::
max
(()
v
, 0); }

163 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
	gv
)

164 {  (
	gush‹t
)
	g°d
::
max
(()
v
, 0); }

165 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
	gv
)

166 {  (
	gush‹t
)(()
	gv
 <()
USHRT_MAX
 ? 
v
 : v > 0 ? USHRT_MAX : 0); }

167 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
	gv
)

168 {  (
	gush‹t
)
	g°d
::
mö
(
v
, ()
USHRT_MAX
); }

169 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
	gv
)

170 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	gush‹t
>(iv); }

171 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
	gv
)

172 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	gush‹t
>(iv); }

174 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
ush‹t
 
	gv
)

175 {  ()
	g°d
::
mö
(()
v
, 
SHRT_MAX
); }

176 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
)

178  ()(()(
	gv
 - 
	gSHRT_MIN
Ë<()
USHRT_MAX
 ?

179 
v
 : v > 0 ? 
SHRT_MAX
 : 
SHRT_MIN
);

181 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
)

182 {  ()
	g°d
::
mö
(
v
, ()
SHRT_MAX
); }

183 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
)

184 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<>(iv); }

185 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
)

186 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<>(iv); }

188 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
Ë{  
cvRound
(
v
); }

189 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
Ë{  
cvRound
(
v
); }

192 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
){  
cvRound
(
v
); }

193 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
Ë{  
cvRound
(
v
); }

195 
ölöe
 
Á°_abs
(
uch¨
 
v
Ë{  
	gv
; }

196 
ölöe
 
Á°_abs
(
sch¨
 
v
Ë{  
	g°d
::
abs
(()v); }

197 
ölöe
 
Á°_abs
(
ush‹t
 
v
Ë{  
	gv
; }

198 
ölöe
 
Á°_abs
(
v
Ë{  
	g°d
::
abs
(()v); }

199 
ölöe
 
Á°_abs
(
v
Ë{  
	g°d
::
abs
(v); }

200 
ölöe
 
Á°_abs
(
v
Ë{  
	g°d
::
abs
(v); }

201 
ölöe
 
Á°_abs
(
v
Ë{  
	g°d
::
abs
(v); }

206 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
()

208 
i
 = 0; 
	gi
 < 
	gch™√ls
; i++Ë
	gvÆ
[i] = 
_Tp
(0);

211 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
)

213 
vÆ
[0] = 
v0
;

214 
	gi
 = 1; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

217 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
)

219 
as£π
(
ch™√ls
 >= 2);

220 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
;

221 
	gi
 = 2; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

224 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
)

226 
as£π
(
ch™√ls
 >= 3);

227 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
;

228 
	gi
 = 3; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

231 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
)

233 
as£π
(
ch™√ls
 >= 4);

234 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

235 
	gi
 = 4; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

238 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
)

240 
as£π
(
ch™√ls
 >= 5);

241 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
; vÆ[4] = 
v4
;

242 
	gi
 = 5; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

245 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

246 
_Tp
 
v4
, _T∞
v5
)

248 
as£π
(
ch™√ls
 >= 6);

249 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

250 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
;

251 
	gi
 = 6; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

254 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

255 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
)

257 
as£π
(
ch™√ls
 >= 7);

258 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

259 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
;

260 
	gi
 = 7; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

263 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

264 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
)

266 
as£π
(
ch™√ls
 >= 8);

267 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

268 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
; vÆ[7] = 
v7
;

269 
	gi
 = 8; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

272 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

273 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

274 
_Tp
 
v8
)

276 
as£π
(
ch™√ls
 >= 9);

277 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

278 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
; vÆ[7] = 
v7
;

279 
	gvÆ
[8] = 
v8
;

280 
	gi
 = 9; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

283 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

284 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

285 
_Tp
 
v8
, _T∞
v9
)

287 
as£π
(
ch™√ls
 >= 10);

288 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

289 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
; vÆ[7] = 
v7
;

290 
	gvÆ
[8] = 
v8
; vÆ[9] = 
v9
;

291 
	gi
 = 10; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

295 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>

296 
ölöe
 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

297 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

298 
_Tp
 
v8
, _T∞
v9
, _T∞
v10
, _T∞
v11
)

300 
as£π
(
ch™√ls
 == 12);

301 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

302 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
; vÆ[7] = 
v7
;

303 
	gvÆ
[8] = 
v8
; vÆ[9] = 
v9
; vÆ[10] = 
v10
; vÆ[11] = 
v11
;

306 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>

307 
ölöe
 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

308 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

309 
_Tp
 
v8
, _T∞
v9
, _T∞
v10
, _T∞
v11
,

310 
_Tp
 
v12
, _T∞
v13
, _T∞
v14
, _T∞
v15
)

312 
as£π
(
ch™√ls
 == 16);

313 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

314 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
; vÆ[7] = 
v7
;

315 
	gvÆ
[8] = 
v8
; vÆ[9] = 
v9
; vÆ[10] = 
v10
; vÆ[11] = 
v11
;

316 
	gvÆ
[12] = 
v12
; vÆ[13] = 
v13
; vÆ[14] = 
v14
; vÆ[15] = 
v15
;

319 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(c⁄° 
_Tp
* 
vÆues
)

321  
i
 = 0; 
	gi
 < 
	gch™√ls
; i++ ) 
	gvÆ
[i] = 
vÆues
[i];

324 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç> M©x<_Tp, m,Ç>::
Æl
(
_Tp
 
Æpha
)

326 
M©x
<
_Tp
, 
	gm
, 
	gn
> 
	gM
;

327  
	gi
 = 0; i < 
m
*
	gn
; i++ ) 
	gM
.
	gvÆ
[
i
] = 
Æpha
;

328  
	gM
;

331 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


332 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
zîos
()

334  
Æl
(0);

337 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


338 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
⁄es
()

340  
Æl
(1);

343 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


344 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
eye
()

346 
M©x
<
_Tp
,
	gm
,
	gn
> 
	gM
;

347 
	gi
 = 0; i < 
MIN
(
m
,
n
); i++)

348 
M
(
i
,i) = 1;

349  
	gM
;

352 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
_Tp
 
	gM©x
<_Tp, m,Ç>::
dŸ
(c⁄° 
M©x
<_Tp, 
m
, 
n
>& 
M
) const

354 
_Tp
 
	gs
 = 0;

355  
	gi
 = 0; i < 
m
*
	gn
; i++ ) 
	gs
 +
vÆ
[
i
]*
M
.val[i];

356  
	gs
;

360 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
ddŸ
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
M
) const

362 
	gs
 = 0;

363  
	gi
 = 0; i < 
m
*
	gn
; i++ ) 
	gs
 +()
vÆ
[
i
]*
M
.val[i];

364  
	gs
;

369 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


370 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
düg
(c⁄° 
ty≥«me
 
M©x
<
_Tp
,
m
,
n
>::
düg_ty≥
& 
d
)

372 
M©x
<
_Tp
,
	gm
,
	gn
> 
	gM
;

373 
	gi
 = 0; i < 
MIN
(
m
,
n
); i++)

374 
M
(
i
,iË
d
(i, 0);

375  
	gM
;

378 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


379 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
øndu
(
_Tp
 
a
, _T∞
b
)

381 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> 
	gM
;

382 
M©
 
m©M
(
M
, 
Ál£
);

383 
	gcv
::
øndu
(
m©M
, 
Sˇœr
(
a
), Sˇœr(
b
));

384  
	gM
;

387 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


388 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
øndn
(
_Tp
 
a
, _T∞
b
)

390 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> 
	gM
;

391 
M©
 
m©M
(
M
, 
Ál£
);

392 
	gcv
::
øndn
(
m©M
, 
Sˇœr
(
a
), Sˇœr(
b
));

393  
	gM
;

396 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<ty≥«mê
	gT2
>

397 
ölöe
 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>::
›î©‹
 
M©x
<
T2
, m,Ç>() const

399 
	gM©x
<
	gT2
, 
	gm
, 
	gn
> 
	gM
;

400  
	gi
 = 0; i < 
m
*
	gn
; i++ ) 
	gM
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
T2
>(
vÆ
[i]);

401  
	gM
;

405 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<
	gm1
, 
	gn1
> 
ölöe


406 
	gM©x
<
	g_Tp
, 
	gm1
, 
	gn1
> M©x<_Tp, 
	gm
, 
	gn
>::
ªsh≠e
() const

408 
CV_DbgAs£π
(
m1
*
n1
 =
m
*
n
);

409  (c⁄° 
	gM©x
<
	g_Tp
, 
	gm1
, 
	gn1
>&)*
	gthis
;

413 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>

414 
	gãm∂©e
<
	gm1
, 
	gn1
> 
ölöe


415 
	gM©x
<
	g_Tp
, 
	gm1
, 
	gn1
> M©x<_Tp, 
	gm
, 
	gn
>::
gë_mö‹
(
i
, 
j
) const

417 
CV_DbgAs£π
(0 <
i
 && i+
m1
 <
m
 && 0 <
j
 && j+
n1
 <
n
);

418 
	gM©x
<
	g_Tp
, 
	gm1
, 
	gn1
> 
	gs
;

419  
	gdi
 = 0; dò< 
	gm1
; di++ )

420  
	gdj
 = 0; dj < 
	gn1
; dj++ )

421 
s
(
di
, 
dj
Ë(*
this
)(
i
+di, 
	gj
+
	gdj
);

422  
	gs
;

426 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


427 
	gM©x
<
	g_Tp
, 1, 
	gn
> M©x<_Tp, 
	gm
,Ç>::
row
(
i
) const

429 
CV_DbgAs£π
(()
i
 < ()
m
);

430  
	gM©x
<
	g_Tp
, 1, 
	gn
>(&
	gvÆ
[
i
*
n
]);

434 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


435 
	gM©x
<
	g_Tp
, 
	gm
, 1> M©x<_Tp, m, 
	gn
>::
cﬁ
(
j
) const

437 
CV_DbgAs£π
(()
j
 < ()
n
);

438 
	gM©x
<
	g_Tp
, 
	gm
, 1> 
	gv
;

439  
	gi
 = 0; i < 
	gm
; i++ )

440 
	gv
.
	gvÆ
[
i
] = 
vÆ
[i*
n
 + 
j
];

441  
	gv
;

445 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


446 
ty≥«me
 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>::
düg_ty≥
 
M©x
<
_Tp
, m,Ç>::
düg
() const

448 
düg_ty≥
 
d
;

449  
	gi
 = 0; i < 
MIN
(
m
, 
n
); i++ )

450 
	gd
.
	gvÆ
[
i
] = 
vÆ
[i*
n
 + i];

451  
	gd
;

455 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


456 c⁄° 
	g_Tp
& 
	gM©x
<_Tp, 
	gm
, 
	gn
>::
›î©‹
 ()(
i
, 
	gj
) const

458 
CV_DbgAs£π
–()
i
 < ()
m
 && ()
j
 < ()
n
 );

459  
	gthis
->
	gvÆ
[
i
*
n
 + 
j
];

463 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


464 
	g_Tp
& 
	gM©x
<_Tp, 
	gm
, 
	gn
>::
›î©‹
 ()(
i
, 
	gj
)

466 
CV_DbgAs£π
–()
i
 < ()
m
 && ()
j
 < ()
n
 );

467  
	gvÆ
[
i
*
n
 + 
j
];

471 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


472 c⁄° 
	g_Tp
& 
	gM©x
<_Tp, 
	gm
, 
	gn
>::
›î©‹
 ()(
i
) const

474 
CV_DbgAs£π
–(
m
 =1 || 
n
 =1Ë&& ()
i
 < ()(m+n-1) );

475  
	gvÆ
[
i
];

479 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


480 
	g_Tp
& 
	gM©x
<_Tp, 
	gm
, 
	gn
>::
›î©‹
 ()(
i
)

482 
CV_DbgAs£π
–(
m
 =1 || 
n
 =1Ë&& ()
i
 < ()(m+n-1) );

483  
	gvÆ
[
i
];

487 
	gãm∂©e
<
ty≥«me
 
	g_Tp1
,Åy≥«mê
	g_Tp2
, 
	gm
, 
	gn
> 
ölöe


488 
	gM©x
<
	g_Tp1
, 
	gm
, 
	gn
>& 
	g›î©‹
 +(
M©x
<
_Tp1
, m,Ç>& 
	ga
, c⁄° M©x<
	g_Tp2
, m,Ç>& 
	gb
)

490  
	gi
 = 0; i < 
m
*
	gn
; i++ )

491 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp1
>(
a
.
vÆ
[i] + 
b
.val[i]);

492  
	ga
;

496 
	gãm∂©e
<
ty≥«me
 
	g_Tp1
,Åy≥«mê
	g_Tp2
, 
	gm
, 
	gn
> 
ölöe


497 
	gM©x
<
	g_Tp1
, 
	gm
, 
	gn
>& 
	g›î©‹
 -(
M©x
<
_Tp1
, m,Ç>& 
	ga
, c⁄° M©x<
	g_Tp2
, m,Ç>& 
	gb
)

499  
	gi
 = 0; i < 
m
*
	gn
; i++ )

500 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp1
>(
a
.
vÆ
[i] - 
b
.val[i]);

501  
	ga
;

505 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


506 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_AddOp
)

508  
	gi
 = 0; i < 
m
*
	gn
; i++ )

509 
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] + 
b
.val[i]);

513 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


514 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_SubOp
)

516  
	gi
 = 0; i < 
m
*
	gn
; i++ )

517 
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] - 
b
.val[i]);

521 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<ty≥«mê
	g_T2
> 
ölöe


522 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, 
_T2
 
Æpha
, 
M©x_SˇÀOp
)

524  
	gi
 = 0; i < 
m
*
	gn
; i++ )

525 
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] * 
Æpha
);

529 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


530 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_MulOp
)

532  
	gi
 = 0; i < 
m
*
	gn
; i++ )

533 
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] * 
b
.val[i]);

537 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<
	gl
> 
ölöe


538 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
m
, 
l
>& 
a
, c⁄° M©x<_Tp,Ü, 
n
>& 
b
, 
M©x_M©MulOp
)

540  
	gi
 = 0; i < 
	gm
; i++ )

541  
	gj
 = 0; j < 
	gn
; j++ )

543 
_Tp
 
	gs
 = 0;

544  
	gk
 = 0; k < 
	gl
; k++ )

545 
	gs
 +
a
(
i
, 
k
Ë* 
b
(k, 
j
);

546 
	gvÆ
[
i
*
n
 + 
j
] = 
s
;

551 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


552 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
n
, 
m
>& 
a
, 
M©x_TOp
)

554  
	gi
 = 0; i < 
	gm
; i++ )

555  
	gj
 = 0; j < 
	gn
; j++ )

556 
	gvÆ
[
i
*
n
 + 
j
] = 
a
(j, i);

560 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


561 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 + (c⁄° M©x<_Tp, m,Ç>& 
	ga
, c⁄° M©x<_Tp, m,Ç>& 
	gb
)

563  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gb
, 
M©x_AddOp
());

567 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


568 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 - (c⁄° M©x<_Tp, m,Ç>& 
	ga
, c⁄° M©x<_Tp, m,Ç>& 
	gb
)

570  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gb
, 
M©x_SubOp
());

574 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


575 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>& 
	g›î©‹
 *(
M©x
<
_Tp
, m,Ç>& 
	ga
, 
	gÆpha
)

577  
	gi
 = 0; i < 
m
*
	gn
; i++ )

578 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] * 
Æpha
);

579  
	ga
;

582 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


583 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>& 
	g›î©‹
 *(
M©x
<
_Tp
, m,Ç>& 
	ga
, 
	gÆpha
)

585  
	gi
 = 0; i < 
m
*
	gn
; i++ )

586 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] * 
Æpha
);

587  
	ga
;

590 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


591 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>& 
	g›î©‹
 *(
M©x
<
_Tp
, m,Ç>& 
	ga
, 
	gÆpha
)

593  
	gi
 = 0; i < 
m
*
	gn
; i++ )

594 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] * 
Æpha
);

595  
	ga
;

598 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


599 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (c⁄° M©x<_Tp, m,Ç>& 
	ga
, 
	gÆpha
)

601  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

604 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


605 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (c⁄° M©x<_Tp, m,Ç>& 
	ga
, 
	gÆpha
)

607  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

610 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


611 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (c⁄° M©x<_Tp, m,Ç>& 
	ga
, 
	gÆpha
)

613  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

616 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


617 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (
	gÆpha
, c⁄° M©x<_Tp, m,Ç>& 
	ga
)

619  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

622 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


623 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (
	gÆpha
, c⁄° M©x<_Tp, m,Ç>& 
	ga
)

625  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

628 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


629 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (
	gÆpha
, c⁄° M©x<_Tp, m,Ç>& 
	ga
)

631  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

634 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


635 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 - (c⁄° M©x<_Tp, m,Ç>& 
	ga
)

637  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, -1, 
M©x_SˇÀOp
());

641 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gl
> 
ölöe


642 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (c⁄° M©x<_Tp, m, 
	gl
>& 
	ga
, c⁄° M©x<_Tp,Ü,Ç>& 
	gb
)

644  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gb
, 
M©x_M©MulOp
());

648 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


649 
	gVec
<
	g_Tp
, 
	gm
> 
	g›î©‹
 * (c⁄° 
	gM©x
<_Tp, m, 
	gn
>& 
	ga
, c⁄° Vec<_Tp,Ç>& 
	gb
)

651 
	gM©x
<
	g_Tp
, 
	gm
, 1> 
c
(
a
, 
b
, 
M©x_M©MulOp
());

652  
	gªöãΩªt_ˇ°
<c⁄° 
	gVec
<
	g_Tp
, 
	gm
>&>(
	gc
);

656 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


657 
	gPoöt_
<
	g_Tp
> 
	g›î©‹
 * (c⁄° 
	gM©x
<_Tp, 2, 2>& 
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

659 
	gM©x
<
	g_Tp
, 2, 1> 
	gtmp
 = 
a
*
Vec
<
_Tp
,2>(
	gb
.
	gx
, b.
	gy
);

660  
	gPoöt_
<
	g_Tp
>(
	gtmp
.
	gvÆ
[0],Åmp.val[1]);

664 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


665 
	gPoöt3_
<
	g_Tp
> 
	g›î©‹
 * (c⁄° 
	gM©x
<_Tp, 3, 3>& 
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

667 
	gM©x
<
	g_Tp
, 3, 1> 
	gtmp
 = 
a
*
Vec
<
_Tp
,3>(
	gb
.
	gx
, b.
	gy
, b.
	gz
);

668  
	gPoöt3_
<
	g_Tp
>(
	gtmp
.
	gvÆ
[0],Åmp.val[1],Åmp.val[2]);

672 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


673 
	gPoöt3_
<
	g_Tp
> 
	g›î©‹
 * (c⁄° 
	gM©x
<_Tp, 3, 3>& 
	ga
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
)

675 
	gM©x
<
	g_Tp
, 3, 1> 
	gtmp
 = 
a
*
Vec
<
_Tp
,3>(
	gb
.
	gx
, b.
	gy
, 1);

676  
	gPoöt3_
<
	g_Tp
>(
	gtmp
.
	gvÆ
[0],Åmp.val[1],Åmp.val[2]);

680 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


681 
	gM©x
<
	g_Tp
, 4, 1> 
	g›î©‹
 * (c⁄° M©x<_Tp, 4, 4>& 
	ga
, c⁄° 
	gPoöt3_
<_Tp>& 
	gb
)

683  
a
*
	gM©x
<
	g_Tp
, 4, 1>(
	gb
.
	gx
, b.
	gy
, b.
	gz
, 1);

687 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


688 
Sˇœr
 
	g›î©‹
 * (c⁄° 
	gM©x
<
	g_Tp
, 4, 4>& 
	ga
, c⁄° 
	gSˇœr
& 
	gb
)

690 
	gM©x
<, 4, 1> 
c
(
M©x
<, 4, 4>(
a
), 
b
, 
M©x_M©MulOp
());

691  
	g°©ic_ˇ°
<c⁄° 
	gSˇœr
&>(
	gc
);

695 
ölöe


696 
Sˇœr
 
	g›î©‹
 * (c⁄° 
	gM©x
<, 4, 4>& 
	ga
, c⁄° 
	gSˇœr
& 
	gb
)

698 
	gM©x
<, 4, 1> 
c
(
a
, 
b
, 
M©x_M©MulOp
());

699  
	g°©ic_ˇ°
<c⁄° 
	gSˇœr
&>(
	gc
);

703 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


704 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> M©x<_Tp, m,Ç>::
mul
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
) const

706  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(*
	gthis
, 
	ga
, 
M©x_MulOp
());

710 
CV_EXPORTS
 
LU
(* 
A
, 
size_t
 
a°ï
, 
m
, * 
b
, size_à
b°ï
, 
n
);

711 
CV_EXPORTS
 
LU
(* 
A
, 
size_t
 
a°ï
, 
m
, * 
b
, size_à
b°ï
, 
n
);

712 
CV_EXPORTS
 
boﬁ
 
Chﬁesky
(* 
A
, 
size_t
 
a°ï
, 
m
, * 
b
, size_à
b°ï
, 
n
);

713 
CV_EXPORTS
 
boﬁ
 
Chﬁesky
(* 
A
, 
size_t
 
a°ï
, 
m
, * 
b
, size_à
b°ï
, 
n
);

716 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
> 
	sM©x_DëOp


718 
›î©‹
 ()(c⁄° 
	gM©x
<
	g_Tp
, 
	gm
, m>& 
	ga
) const

720 
	gM©x
<
	g_Tp
, 
	gm
, m> 
	gãmp
 = 
a
;

721 
	gp
 = 
LU
(
ãmp
.
vÆ
, 
m
*(
_Tp
), m, 0, 0, 0);

722 if–
	gp
 == 0 )

723  
p
;

724  
	gi
 = 0; i < 
	gm
; i++ )

725 
	gp
 *
ãmp
(
i
, i);

726  1./
	gp
;

731 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_DëOp
<_Tp, 1>

733 
›î©‹
 ()(c⁄° 
	gM©x
<
	g_Tp
, 1, 1>& 
	ga
) const

735  
a
(0,0);

740 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_DëOp
<_Tp, 2>

742 
›î©‹
 ()(c⁄° 
	gM©x
<
	g_Tp
, 2, 2>& 
	ga
) const

744  
a
(0,0)*a(1,1) -á(0,1)*a(1,0);

749 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_DëOp
<_Tp, 3>

751 
›î©‹
 ()(c⁄° 
	gM©x
<
	g_Tp
, 3, 3>& 
	ga
) const

753  
a
(0,0)*(a(1,1)*a(2,2) -á(2,1)*a(1,2)) -

754 
a
(0,1)*(a(1,0)*a(2,2) -á(2,0)*a(1,2)) +

755 
a
(0,2)*(a(1,0)*a(2,1) -á(2,0)*a(1,1));

759 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
> 
ölöe


760 
dëîmö™t
(c⁄° 
M©x
<
_Tp
, 
m
, m>& 
a
)

762  
	gM©x_DëOp
<
	g_Tp
, 
	gm
>()(
	ga
);

766 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


767 
åa˚
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
)

769 
_Tp
 
	gs
 = 0;

770  
	gi
 = 0; i < 
	g°d
::
mö
(
m
, 
n
); i++ )

771 
	gs
 +
a
(
i
,i);

772  
	gs
;

776 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


777 
	gM©x
<
	g_Tp
, 
	gn
, 
	gm
> M©x<_Tp, m,Ç>::
t
() const

779  
M©x
<
_Tp
, 
	gn
, 
	gm
>(*
	gthis
, 
M©x_TOp
());

783 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
> 
	sM©x_Fa°InvOp


785 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 
	gm
, m>& 
	ga
, M©x<_Tp, m, m>& 
	gb
, 
	gmëhod
) const

787 
	gM©x
<
	g_Tp
, 
	gm
, m> 
	gãmp
 = 
a
;

790  
	gi
 = 0; i < 
	gm
; i++ )

791 
b
(
i
, iË(
_Tp
)1;

793 if–
	gmëhod
 =
DECOMP_CHOLESKY
 )

794  
Chﬁesky
(
ãmp
.
vÆ
, 
m
*(
_Tp
), m, 
b
.val, m*(_Tp), m);

796  
LU
(
ãmp
.
vÆ
, 
m
*(
_Tp
), m, 
b
.val, m*(_Tp), m) != 0;

801 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_Fa°InvOp
<_Tp, 2>

803 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 2, 2>& 
	ga
, M©x<_Tp, 2, 2>& 
	gb
, ) const

805 
_Tp
 
	gd
 = 
dëîmö™t
(
a
);

806 if–
	gd
 == 0 )

807  
Ál£
;

808 
	gd
 = 1/
d
;

809 
b
(1,1Ë
a
(0,0)*
	gd
;

810 
b
(0,0Ë
a
(1,1)*
	gd
;

811 
b
(0,1Ë-
a
(0,1)*
	gd
;

812 
b
(1,0Ë-
a
(1,0)*
	gd
;

813  
	gåue
;

818 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_Fa°InvOp
<_Tp, 3>

820 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 3, 3>& 
	ga
, M©x<_Tp, 3, 3>& 
	gb
, ) const

822 
_Tp
 
	gd
 = (_Tp)
dëîmö™t
(
a
);

823 if–
	gd
 == 0 )

824  
Ál£
;

825 
	gd
 = 1/
d
;

826 
b
(0,0Ë(
a
(1,1Ë*á(2,2Ë-á(1,2Ë*á(2,1)Ë* 
	gd
;

827 
b
(0,1Ë(
a
(0,2Ë*á(2,1Ë-á(0,1Ë*á(2,2)Ë* 
	gd
;

828 
b
(0,2Ë(
a
(0,1Ë*á(1,2Ë-á(0,2Ë*á(1,1)Ë* 
	gd
;

830 
b
(1,0Ë(
a
(1,2Ë*á(2,0Ë-á(1,0Ë*á(2,2)Ë* 
	gd
;

831 
b
(1,1Ë(
a
(0,0Ë*á(2,2Ë-á(0,2Ë*á(2,0)Ë* 
	gd
;

832 
b
(1,2Ë(
a
(0,2Ë*á(1,0Ë-á(0,0Ë*á(1,2)Ë* 
	gd
;

834 
b
(2,0Ë(
a
(1,0Ë*á(2,1Ë-á(1,1Ë*á(2,0)Ë* 
	gd
;

835 
b
(2,1Ë(
a
(0,1Ë*á(2,0Ë-á(0,0Ë*á(2,1)Ë* 
	gd
;

836 
b
(2,2Ë(
a
(0,0Ë*á(1,1Ë-á(0,1Ë*á(1,0)Ë* 
	gd
;

837  
	gåue
;

842 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


843 
	gM©x
<
	g_Tp
, 
	gn
, 
	gm
> M©x<_Tp, m,Ç>::
öv
(
mëhod
) const

845 
M©x
<
_Tp
, 
	gn
, 
	gm
> 
	gb
;

846 
boﬁ
 
	gok
;

847 if–
	gmëhod
 =
DECOMP_LU
 || 
mëhod
 =
DECOMP_CHOLESKY
 )

848 
ok
 = 
M©x_Fa°InvOp
<
_Tp
, 
	gm
>()(*
	gthis
, 
	gb
, 
	gmëhod
);

851 
M©
 
A
(*
this
, 
Ál£
), 
B
(
b
, false);

852 
	gok
 = (
övît
(
A
, 
B
, 
mëhod
) != 0);

854  
	gok
 ? 
	gb
 : 
M©x
<
_Tp
, 
	gn
, 
	gm
>::
zîos
();

858 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
	sM©x_Fa°SﬁveOp


860 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 
	gm
, m>& 
	ga
, c⁄° M©x<_Tp, m, 
	gn
>& 
	gb
,

861 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>& 
	gx
, 
	gmëhod
) const

863 
	gM©x
<
	g_Tp
, 
	gm
, m> 
	gãmp
 = 
a
;

864 
	gx
 = 
b
;

865 if–
	gmëhod
 =
DECOMP_CHOLESKY
 )

866  
Chﬁesky
(
ãmp
.
vÆ
, 
m
*(
_Tp
), m, 
x
.vÆ, 
n
*(_Tp),Ç);

868  
LU
(
ãmp
.
vÆ
, 
m
*(
_Tp
), m, 
x
.vÆ, 
n
*(_Tp),Ç) != 0;

873 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_Fa°SﬁveOp
<_Tp, 2, 1>

875 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 2, 2>& 
	ga
, c⁄° M©x<_Tp, 2, 1>& 
	gb
,

876 
	gM©x
<
	g_Tp
, 2, 1>& 
	gx
, ) const

878 
_Tp
 
	gd
 = 
dëîmö™t
(
a
);

879 if–
	gd
 == 0 )

880  
Ál£
;

881 
	gd
 = 1/
d
;

882 
x
(0Ë(
b
(0)*
a
(1,1Ë- b(1)*a(0,1))*
	gd
;

883 
x
(1Ë(
b
(1)*
a
(0,0Ë- b(0)*a(1,0))*
	gd
;

884  
	gåue
;

889 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_Fa°SﬁveOp
<_Tp, 3, 1>

891 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 3, 3>& 
	ga
, c⁄° M©x<_Tp, 3, 1>& 
	gb
,

892 
	gM©x
<
	g_Tp
, 3, 1>& 
	gx
, ) const

894 
_Tp
 
	gd
 = (_Tp)
dëîmö™t
(
a
);

895 if–
	gd
 == 0 )

896  
Ál£
;

897 
	gd
 = 1/
d
;

898 
x
(0Ë
d
*(
b
(0)*(
a
(1,1)*a(2,2) -á(1,2)*a(2,1)) -

899 
a
(0,1)*(
b
(1)*a(2,2) -á(1,2)*b(2)) +

900 
a
(0,2)*(
b
(1)*a(2,1) -á(1,1)*b(2)));

902 
x
(1Ë
d
*(
a
(0,0)*(
b
(1)*a(2,2) -á(1,2)*b(2)) -

903 
b
(0)*(
a
(1,0)*a(2,2) -á(1,2)*a(2,0)) +

904 
a
(0,2)*◊(1,0)*
b
(2) - b(1)*a(2,0)));

906 
x
(2Ë
d
*(
a
(0,0)*◊(1,1)*
b
(2) - b(1)*a(2,1)) -

907 
a
(0,1)*◊(1,0)*
b
(2) - b(1)*a(2,0)) +

908 
b
(0)*(
a
(1,0)*a(2,1) -á(1,1)*a(2,0)));

909  
	gåue
;

914 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<
	gl
> 
ölöe


915 
	gM©x
<
	g_Tp
, 
	gn
, 
	gl
> M©x<_Tp, 
	gm
,Ç>::
sﬁve
(c⁄° 
M©x
<
_Tp
, 
m
, 
l
>& 
rhs
, 
mëhod
) const

917 
	gM©x
<
	g_Tp
, 
	gn
, 
	gl
> 
	gx
;

918 
boﬁ
 
	gok
;

919 if–
	gmëhod
 =
DECOMP_LU
 || 
mëhod
 =
DECOMP_CHOLESKY
 )

920 
ok
 = 
M©x_Fa°SﬁveOp
<
_Tp
, 
	gm
, 
	gl
>()(*
	gthis
, 
	grhs
, 
	gx
, 
	gmëhod
);

923 
M©
 
A
(*
this
, 
Ál£
), 
B
(
rhs
, fÆ£), 
X
(
x
, false);

924 
	gok
 = 
cv
::
sﬁve
(
A
, 
B
, 
X
, 
mëhod
);

927  
	gok
 ? 
	gx
 : 
M©x
<
_Tp
, 
	gn
, 
	gl
>::
zîos
();

930 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


931 
	gVec
<
	g_Tp
, 
	gn
> 
	gM©x
<_Tp, 
	gm
,Ç>::
sﬁve
(c⁄° 
Vec
<
_Tp
, 
m
>& 
rhs
, 
mëhod
) const

933 
	gM©x
<
	g_Tp
, 
	gn
, 1> 
	gx
 = 
sﬁve
(
ªöãΩªt_ˇ°
<c⁄° 
M©x
<
_Tp
, 
m
, 1>&>(
rhs
), 
mëhod
);

934  
	gªöãΩªt_ˇ°
<
	gVec
<
	g_Tp
, 
	gn
>&>(
	gx
);

937 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


938 
_AccTp
 
n‹mL2Sqr
(c⁄° 
_Tp
* 
a
, 
n
)

940 
_AccTp
 
	gs
 = 0;

941 
	gi
=0;

942 #i‡
CV_ENABLE_UNROLLED


943  ; 
	gi
 <
n
 - 4; i += 4 )

945 
_AccTp
 
v0
 = 
a
[
i
], 
	gv1
 =á[i+1], 
	gv2
 =á[i+2], 
	gv3
 =á[i+3];

946 
	gs
 +
v0
*v0 + 
v1
*v1 + 
v2
*v2 + 
v3
*v3;

949  ; 
	gi
 < 
	gn
; i++ )

951 
_AccTp
 
	gv
 = 
a
[
i
];

952 
	gs
 +
v
*v;

954  
	gs
;

958 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


959 
_AccTp
 
n‹mL1
(c⁄° 
_Tp
* 
a
, 
n
)

961 
_AccTp
 
	gs
 = 0;

962 
	gi
 = 0;

963 #i‡
CV_ENABLE_UNROLLED


964 ; 
	gi
 <
n
 - 4; i += 4 )

966 
s
 +(
_AccTp
)
Á°_abs
(
a
[
i
]) + (_AccTp)fast_abs(a[i+1]) +

967 (
_AccTp
)
Á°_abs
(
a
[
i
+2]) + (_AccTp)fast_abs(a[i+3]);

970  ; 
	gi
 < 
	gn
; i++ )

971 
	gs
 +
Á°_abs
(
a
[
i
]);

972  
	gs
;

976 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


977 
_AccTp
 
n‹mInf
(c⁄° 
_Tp
* 
a
, 
n
)

979 
_AccTp
 
	gs
 = 0;

980  
	gi
 = 0; i < 
	gn
; i++ )

981 
	gs
 = 
°d
::
max
(
s
, (
_AccTp
)
Á°_abs
(
a
[
i
]));

982  
	gs
;

986 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


987 
_AccTp
 
n‹mL2Sqr
(c⁄° 
_Tp
* 
a
, c⁄° _Tp* 
b
, 
n
)

989 
_AccTp
 
	gs
 = 0;

990 
	gi
= 0;

991 #i‡
CV_ENABLE_UNROLLED


992 ; 
	gi
 <
n
 - 4; i += 4 )

994 
_AccTp
 
v0
 = _AccTp(
a
[
i
] - 
b
[i]), 
	gv1
 = _AccTp◊[i+1] - b[i+1]), 
	gv2
 = _AccTp◊[i+2] - b[i+2]), 
	gv3
 = _AccTp(a[i+3] - b[i+3]);

995 
	gs
 +
v0
*v0 + 
v1
*v1 + 
v2
*v2 + 
v3
*v3;

998  ; 
	gi
 < 
	gn
; i++ )

1000 
_AccTp
 
	gv
 = _AccTp(
a
[
i
] - 
b
[i]);

1001 
	gs
 +
v
*v;

1003  
	gs
;

1006 
CV_EXPORTS
 
n‹mL2Sqr_
(c⁄° * 
a
, c⁄° * 
b
, 
n
);

1007 
CV_EXPORTS
 
n‹mL1_
(c⁄° * 
a
, c⁄° * 
b
, 
n
);

1008 
CV_EXPORTS
 
n‹mL1_
(c⁄° 
uch¨
* 
a
, c⁄° uch¨* 
b
, 
n
);

1009 
CV_EXPORTS
 
n‹mHammög
(c⁄° 
uch¨
* 
a
, c⁄° uch¨* 
b
, 
n
);

1010 
CV_EXPORTS
 
n‹mHammög
(c⁄° 
uch¨
* 
a
, c⁄° uch¨* 
b
, 
n
, 
˚ŒSize
);

1012 
	gãm∂©e
<> 
ölöe
 
n‹mL2Sqr
(c⁄° * 
a
, c⁄° * 
b
, 
n
)

1014 if–
	gn
 >= 8 )

1015  
n‹mL2Sqr_
(
a
, 
b
, 
n
);

1016 
	gs
 = 0;

1017  
	gi
 = 0; i < 
	gn
; i++ )

1019 
	gv
 = 
a
[
i
] - 
b
[i];

1020 
	gs
 +
v
*v;

1022  
	gs
;

1026 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


1027 
_AccTp
 
n‹mL1
(c⁄° 
_Tp
* 
a
, c⁄° _Tp* 
b
, 
n
)

1029 
_AccTp
 
	gs
 = 0;

1030 
	gi
= 0;

1031 #i‡
CV_ENABLE_UNROLLED


1032 ; 
	gi
 <
n
 - 4; i += 4 )

1034 
_AccTp
 
v0
 = _AccTp(
a
[
i
] - 
b
[i]), 
	gv1
 = _AccTp◊[i+1] - b[i+1]), 
	gv2
 = _AccTp◊[i+2] - b[i+2]), 
	gv3
 = _AccTp(a[i+3] - b[i+3]);

1035 
	gs
 +
°d
::
abs
(
v0
Ë+ std::abs(
v1
Ë+ std::abs(
v2
Ë+ std::abs(
v3
);

1038  ; 
	gi
 < 
	gn
; i++ )

1040 
_AccTp
 
	gv
 = _AccTp(
a
[
i
] - 
b
[i]);

1041 
	gs
 +
°d
::
abs
(
v
);

1043  
	gs
;

1046 
	gãm∂©e
<> 
ölöe
 
n‹mL1
(c⁄° * 
a
, c⁄° * 
b
, 
n
)

1048 if–
	gn
 >= 8 )

1049  
n‹mL1_
(
a
, 
b
, 
n
);

1050 
	gs
 = 0;

1051  
	gi
 = 0; i < 
	gn
; i++ )

1053 
	gv
 = 
a
[
i
] - 
b
[i];

1054 
	gs
 +
°d
::
abs
(
v
);

1056  
	gs
;

1059 
	gãm∂©e
<> 
ölöe
 
n‹mL1
(c⁄° 
uch¨
* 
a
, c⁄° uch¨* 
b
, 
n
)

1061  
n‹mL1_
(
a
, 
b
, 
n
);

1064 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


1065 
_AccTp
 
n‹mInf
(c⁄° 
_Tp
* 
a
, c⁄° _Tp* 
b
, 
n
)

1067 
_AccTp
 
	gs
 = 0;

1068  
	gi
 = 0; i < 
	gn
; i++ )

1070 
_AccTp
 
	gv0
 = 
a
[
i
] - 
b
[i];

1071 
	gs
 = 
°d
::
max
(
s
, std::
abs
(
v0
));

1073  
	gs
;

1077 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1078 
n‹m
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
M
)

1080  
	g°d
::
sqπ
(
n‹mL2Sqr
<
_Tp
, >(
M
.
vÆ
, 
m
*
n
));

1084 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1085 
n‹m
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
M
, 
n‹mTy≥
)

1087  
	gn‹mTy≥
 =
NORM_INF
 ? ()
n‹mInf
<
_Tp
, 
ty≥«me
 
	gD©aTy≥
<
	g_Tp
>::
w‹k_ty≥
>(
M
.
vÆ
, 
m
*
	gn
) :

1088 
n‹mTy≥
 =
NORM_L1
 ? ()
n‹mL1
<
_Tp
, 
ty≥«me
 
	gD©aTy≥
<
	g_Tp
>::
w‹k_ty≥
>(
M
.
vÆ
, 
m
*
	gn
) :

1089 
°d
::
sqπ
(()
n‹mL2Sqr
<
_Tp
, 
ty≥«me
 
D©aTy≥
<_Tp>::
w‹k_ty≥
>(
M
.
vÆ
, 
m
*
n
));

1093 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1094 
boﬁ
 
	g›î©‹
 =(c⁄° 
M©x
<
_Tp
, 
	gm
, 
	gn
>& 
	ga
, c⁄° 
	gM©x
<
	g_Tp
, m,Ç>& 
	gb
)

1096  
	gi
 = 0; i < 
m
*
	gn
; i++ )

1097 if–
	ga
.
	gvÆ
[
i
] !
b
.
vÆ
[i] )  
Ál£
;

1098  
	gåue
;

1101 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1102 
boﬁ
 
	g›î©‹
 !(c⁄° 
M©x
<
_Tp
, 
	gm
, 
	gn
>& 
	ga
, c⁄° 
	gM©x
<
	g_Tp
, m,Ç>& 
	gb
)

1104  !(
	ga
 =
b
);

1108 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_T2
, 
	gm
, 
	gn
> 
ölöe


1109 
	gM©xCommaInôülizî
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 << (c⁄° 
	gM©x
<_Tp, m,Ç>& 
	gmtx
, 
_T2
 
	gvÆ
)

1111 
	gM©xCommaInôülizî
<
	g_Tp
, 
	gm
, 
	gn
> 
commaInôülizî
((
M©x
<
_Tp
, 
m
, 
n
>*)&
mtx
);

1112  (
	gcommaInôülizî
, 
	gvÆ
);

1115 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1116 
	gM©xCommaInôülizî
<
	g_Tp
, 
	gm
, 
	gn
>::
M©xCommaInôülizî
(
M©x
<
_Tp
, 
m
, 
n
>* 
_mtx
)

1117 : 
d°
(
_mtx
), 
idx
(0)

1120 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<ty≥«mê
	g_T2
> 
ölöe


1121 
	gM©xCommaInôülizî
<
	g_Tp
, 
	gm
, 
	gn
>& M©xCommaInôülizî<_Tp, m,Ç>::
›î©‹
 , (
_T2
 
	gvÆue
)

1123 
CV_DbgAs£π
–
idx
 < 
m
*
n
 );

1124 
	gd°
->
	gvÆ
[
idx
++] = 
ßtuøã_ˇ°
<
_Tp
>(
vÆue
);

1125  *
	gthis
;

1128 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1129 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	gM©xCommaInôülizî
<_Tp, m,Ç>::
›î©‹
 *() const

1131 
CV_DbgAs£π
–
idx
 =
n
*
m
 );

1132  *
	gd°
;

1137 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
()

1140 
ãm∂©e
<
ty≥«me
 
_Tp
, 
	g˙
> 
ölöe
 
	gVec
<
	g_Tp
, cn>::
Vec
(_T∞
v0
)

1141 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
)

1144 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
)

1145 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
)

1148 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
)

1149 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
)

1152 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
)

1153 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
)

1156 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
)

1157 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
)

1160 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
)

1161 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
, 
	gv5
)

1164 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

1165 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
)

1166 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
, 
	gv5
, 
	gv6
)

1169 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

1170 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
)

1171 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
, 
	gv5
, 
	gv6
, 
	gv7
)

1174 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

1175 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

1176 
_Tp
 
v8
)

1177 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
, 
	gv5
, 
	gv6
, 
	gv7
, 
	gv8
)

1180 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

1181 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

1182 
_Tp
 
v8
, _T∞
v9
)

1183 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
, 
	gv5
, 
	gv6
, 
	gv7
, 
	gv8
, 
	gv9
)

1186 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(c⁄° 
_Tp
* 
vÆues
)

1187 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gvÆues
)

1191 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(c⁄° Vec<
_Tp
, 
˙
>& 
m
)

1192 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gm
.
	gvÆ
)

1195 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1196 
	gVec
<
	g_Tp
, 
	g˙
>::
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, c⁄° M©x<_Tp, cn, 1>& 
b
, 
M©x_AddOp
 
›
)

1197 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	ga
, 
	gb
, 
	g›
)

1200 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1201 
	gVec
<
	g_Tp
, 
	g˙
>::
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, c⁄° M©x<_Tp, cn, 1>& 
b
, 
M©x_SubOp
 
›
)

1202 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	ga
, 
	gb
, 
	g›
)

1205 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
>Åem∂©e<ty≥«mê
	g_T2
> 
ölöe


1206 
	gVec
<
	g_Tp
, 
	g˙
>::
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, 
_T2
 
Æpha
, 
M©x_SˇÀOp
 
›
)

1207 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	ga
, 
	gÆpha
, 
	g›
)

1210 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn> Vec<_Tp, cn>::
Æl
(
_Tp
 
Æpha
)

1212 
Vec
 
v
;

1213  
	gi
 = 0; i < 
	g˙
; i++ ) 
	gv
.
	gvÆ
[
i
] = 
Æpha
;

1214  
	gv
;

1217 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn> Vec<_Tp, cn>::
mul
(c⁄° 
Vec
<
_Tp
, 
˙
>& 
v
) const

1219 
	gVec
<
	g_Tp
, 
	g˙
> 
	gw
;

1220  
	gi
 = 0; i < 
	g˙
; i++ ) 
	gw
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
this
->
vÆ
[i]*
v
.val[i]);

1221  
	gw
;

1224 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gVec
<_Tp, 2> 
c⁄jug©e
(c⁄° 
Vec
<
_Tp
, 2>& 
v
)

1226  
	gVec
<
	g_Tp
, 2>(
	gv
[0], -v[1]);

1229 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gVec
<_Tp, 4> 
c⁄jug©e
(c⁄° 
Vec
<
_Tp
, 4>& 
v
)

1231  
	gVec
<
	g_Tp
, 4>(
	gv
[0], -v[1], -v[2], -v[3]);

1234 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 2> Vec<, 2>::
c⁄j
() const

1236  
c⁄jug©e
(*
this
);

1239 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 2> Vec<, 2>::
c⁄j
() const

1241  
c⁄jug©e
(*
this
);

1244 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 4> Vec<, 4>::
c⁄j
() const

1246  
c⁄jug©e
(*
this
);

1249 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 4> Vec<, 4>::
c⁄j
() const

1251  
c⁄jug©e
(*
this
);

1254 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn> Vec<_Tp, cn>::
¸oss
(c⁄° 
Vec
<
_Tp
, 
˙
>&) const

1256 
CV_Eº‹
(
CV_StsEº‹
, "forárbitrary-size vectorÅhere isÇo cross-product defined");

1257  
	gVec
<
	g_Tp
, 
	g˙
>();

1260 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
>Åem∂©e<ty≥«mê
	gT2
>

1261 
ölöe
 
	gVec
<
	g_Tp
, 
	g˙
>::
›î©‹
 
Vec
<
T2
, cn>() const

1263 
	gVec
<
	gT2
, 
	g˙
> 
	gv
;

1264  
	gi
 = 0; i < 
	g˙
; i++ ) 
	gv
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
T2
>(
this
->
vÆ
[i]);

1265  
	gv
;

1268 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
›î©‹
 
CvSˇœr
() const

1270 
CvSˇœr
 
s
 = {{0,0,0,0}};

1271 
	gi
;

1272  
	gi
 = 0; i < 
	g°d
::
mö
(
˙
, 4); i++ ) 
	gs
.
	gvÆ
[
i
] = 
this
->
vÆ
[i];

1273  ; 
	gi
 < 4; i++ ) 
	gs
.
	gvÆ
[
i
] = 0;

1274  
	gs
;

1277 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 c⁄° _Tp& 
	gVec
<_Tp, cn>::
›î©‹
 [](
i
) const

1279 
CV_DbgAs£π
–()
i
 < ()
˙
 );

1280  
	gthis
->
	gvÆ
[
i
];

1283 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 _Tp& 
	gVec
<_Tp, cn>::
›î©‹
 [](
i
)

1285 
CV_DbgAs£π
–()
i
 < ()
˙
 );

1286  
	gthis
->
	gvÆ
[
i
];

1289 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 c⁄° _Tp& 
	gVec
<_Tp, cn>::
›î©‹
 ()(
i
) const

1291 
CV_DbgAs£π
–()
i
 < ()
˙
 );

1292  
	gthis
->
	gvÆ
[
i
];

1295 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 _Tp& 
	gVec
<_Tp, cn>::
›î©‹
 ()(
i
)

1297 
CV_DbgAs£π
–()
i
 < ()
˙
 );

1298  
	gthis
->
	gvÆ
[
i
];

1301 
	gãm∂©e
<
ty≥«me
 
	g_Tp1
,Åy≥«mê
	g_Tp2
, 
	g˙
> 
ölöe
 
	gVec
<_Tp1, cn>&

1302 
	g›î©‹
 +(
Vec
<
_Tp1
, 
	g˙
>& 
	ga
, c⁄° 
	gVec
<
	g_Tp2
, cn>& 
	gb
)

1304  
	gi
 = 0; i < 
	g˙
; i++ )

1305 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp1
>(
a
.
vÆ
[i] + 
b
.val[i]);

1306  
	ga
;

1309 
	gãm∂©e
<
ty≥«me
 
	g_Tp1
,Åy≥«mê
	g_Tp2
, 
	g˙
> 
ölöe
 
	gVec
<_Tp1, cn>&

1310 
	g›î©‹
 -(
Vec
<
_Tp1
, 
	g˙
>& 
	ga
, c⁄° 
	gVec
<
	g_Tp2
, cn>& 
	gb
)

1312  
	gi
 = 0; i < 
	g˙
; i++ )

1313 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp1
>(
a
.
vÆ
[i] - 
b
.val[i]);

1314  
	ga
;

1317 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1318 
	g›î©‹
 + (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, c⁄° Vec<_Tp, cn>& 
	gb
)

1320  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gb
, 
M©x_AddOp
());

1323 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1324 
	g›î©‹
 - (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, c⁄° Vec<_Tp, cn>& 
	gb
)

1326  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gb
, 
M©x_SubOp
());

1329 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1330 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 *(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1332  
	gi
 = 0; i < 
	g˙
; i++ )

1333 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
Æpha
);

1334  
	ga
;

1337 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1338 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 *(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1340  
	gi
 = 0; i < 
	g˙
; i++ )

1341 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
Æpha
);

1342  
	ga
;

1345 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1346 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 *(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1348  
	gi
 = 0; i < 
	g˙
; i++ )

1349 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
Æpha
);

1350  
	ga
;

1353 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1354 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 /(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1356 
	güÕha
 = 1./
Æpha
;

1357  
	gi
 = 0; i < 
	g˙
; i++ )

1358 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
üÕha
);

1359  
	ga
;

1362 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1363 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 /(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1365 
	güÕha
 = 1.f/
Æpha
;

1366  
	gi
 = 0; i < 
	g˙
; i++ )

1367 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
üÕha
);

1368  
	ga
;

1371 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1372 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 /(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1374 
	güÕha
 = 1./
Æpha
;

1375  
	gi
 = 0; i < 
	g˙
; i++ )

1376 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
üÕha
);

1377  
	ga
;

1380 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1381 
	g›î©‹
 * (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1383  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1386 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1387 
	g›î©‹
 * (
	gÆpha
, c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
)

1389  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1392 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1393 
	g›î©‹
 * (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1395  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1398 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1399 
	g›î©‹
 * (
	gÆpha
, c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
)

1401  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1404 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1405 
	g›î©‹
 * (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1407  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1410 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1411 
	g›î©‹
 * (
	gÆpha
, c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
)

1413  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1416 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1417 
	g›î©‹
 / (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1419  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 1./
	gÆpha
, 
M©x_SˇÀOp
());

1422 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1423 
	g›î©‹
 / (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1425  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 1.f/
	gÆpha
, 
M©x_SˇÀOp
());

1428 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1429 
	g›î©‹
 / (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1431  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 1./
	gÆpha
, 
M©x_SˇÀOp
());

1434 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1435 
	g›î©‹
 - (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
)

1437 
	gVec
<
	g_Tp
,
	g˙
> 
	gt
;

1438  
	gi
 = 0; i < 
	g˙
; i++ ) 
	gt
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(-
a
.
vÆ
[i]);

1439  
	gt
;

1442 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gVec
<_Tp, 4> 
	g›î©‹
 * (c⁄° Vec<_Tp, 4>& 
	gv1
, c⁄° Vec<_Tp, 4>& 
	gv2
)

1444  
	gVec
<
	g_Tp
, 4>(
	gßtuøã_ˇ°
<_Tp>(
	gv1
[0]*
	gv2
[0] - v1[1]*v2[1] - v1[2]*v2[2] - v1[3]*v2[3]),

1445 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gv1
[0]*
	gv2
[1] + v1[1]*v2[0] + v1[2]*v2[3] - v1[3]*v2[2]),

1446 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gv1
[0]*
	gv2
[2] - v1[1]*v2[3] + v1[2]*v2[0] + v1[3]*v2[1]),

1447 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gv1
[0]*
	gv2
[3] + v1[1]*v2[2] - v1[2]*v2[1] + v1[3]*v2[0]));

1450 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gVec
<_Tp, 4>& 
	g›î©‹
 *(
Vec
<
_Tp
, 4>& 
	gv1
, c⁄° Vec<_Tp, 4>& 
	gv2
)

1452 
	gv1
 = 
v1
 * 
v2
;

1453  
	gv1
;

1456 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 3> Vec<, 3>::
¸oss
(c⁄° 
Vec
<, 3>& 
v
) const

1458  
	gVec
<,3>(
	gvÆ
[1]*
	gv
.val[2] - val[2]*v.val[1],

1459 
	gvÆ
[2]*
	gv
.val[0] - val[0]*v.val[2],

1460 
	gvÆ
[0]*
	gv
.val[1] - val[1]*v.val[0]);

1463 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 3> Vec<, 3>::
¸oss
(c⁄° 
Vec
<, 3>& 
v
) const

1465  
	gVec
<,3>(
	gvÆ
[1]*
	gv
.val[2] - val[2]*v.val[1],

1466 
	gvÆ
[2]*
	gv
.val[0] - val[0]*v.val[2],

1467 
	gvÆ
[0]*
	gv
.val[1] - val[1]*v.val[0]);

1470 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn> 
n‹mÆize
(c⁄° 
Vec
<
_Tp
, 
˙
>& 
v
)

1472 
	gnv
 = 
n‹m
(
v
);

1473  
	gv
 * (
	gnv
 ? 1./nv : 0.);

1476 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_T2
, 
	g˙
> 
ölöe


1477 
	gVecCommaInôülizî
<
	g_Tp
, 
	g˙
> 
	g›î©‹
 << (c⁄° 
	gVec
<_Tp, cn>& 
	gvec
, 
_T2
 
	gvÆ
)

1479 
	gVecCommaInôülizî
<
	g_Tp
, 
	g˙
> 
commaInôülizî
((
Vec
<
_Tp
, 
˙
>*)&
vec
);

1480  (
	gcommaInôülizî
, 
	gvÆ
);

1483 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1484 
	gVecCommaInôülizî
<
	g_Tp
, 
	g˙
>::
VecCommaInôülizî
(
Vec
<
_Tp
, 
˙
>* 
_vec
)

1485 : 
M©xCommaInôülizî
<
_Tp
, 
	g˙
, 1>(
	g_vec
)

1488 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
>Åem∂©e<ty≥«mê
	g_T2
> 
ölöe


1489 
	gVecCommaInôülizî
<
	g_Tp
, 
	g˙
>& VecCommaInôülizî<_Tp, cn>::
›î©‹
 , (
_T2
 
	gvÆue
)

1491 
CV_DbgAs£π
–
this
->
idx
 < 
˙
 );

1492 
	gthis
->
	gd°
->
	gvÆ
[
this
->
idx
++] = 
ßtuøã_ˇ°
<
_Tp
>(
vÆue
);

1493  *
	gthis
;

1496 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1497 
	gVec
<
	g_Tp
, 
	g˙
> 
	gVecCommaInôülizî
<_Tp, cn>::
›î©‹
 *() const

1499 
CV_DbgAs£π
–
this
->
idx
 =
˙
 );

1500  *
	gthis
->
	gd°
;

1505 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gCom∂ex
<_Tp>::
Com∂ex
(Ë: 
ª
(0), 
im
(0) {}

1506 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gCom∂ex
<_Tp>::
Com∂ex
–
_Tp
 
_ª
, _T∞
_im
 ) : 
ª
(_ª), 
im
(_im) {}

1507 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	gT2
> 
ölöe
 
	gCom∂ex
<_Tp>::
›î©‹
 
Com∂ex
<
T2
>() const

1508 {  
Com∂ex
<
T2
>(
ßtuøã_ˇ°
<T2>(
ª
), 
	gßtuøã_ˇ°
<
	gT2
>(
	gim
)); }

1509 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gCom∂ex
<_Tp> Com∂ex<_Tp>::
c⁄j
() const

1510 {  
Com∂ex
<
_Tp
>(
ª
, -
	gim
); }

1512 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1513 
boﬁ
 
	g›î©‹
 =(c⁄° 
Com∂ex
<
_Tp
>& 
a
, c⁄° 
	gCom∂ex
<
	g_Tp
>& 
	gb
)

1514 {  
	ga
.
	gª
 =
b
.
ª
 && 
a
.
im
 == b.im; }

1516 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1517 
boﬁ
 
	g›î©‹
 !(c⁄° 
Com∂ex
<
_Tp
>& 
a
, c⁄° 
	gCom∂ex
<
	g_Tp
>& 
	gb
)

1518 {  
	ga
.
	gª
 !
b
.
ª
 || 
a
.
im
 != b.im; }

1520 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1521 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 + (c⁄° Com∂ex<_Tp>& 
	ga
, c⁄° Com∂ex<_Tp>& 
	gb
)

1522 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
	gª
 + 
	gb
.ª,á.
	gim
 + b.im ); }

1524 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1525 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 +(
Com∂ex
<
_Tp
>& 
a
, c⁄° Com∂ex<_Tp>& 
	gb
)

1526 { 
	ga
.
	gª
 +
b
.
ª
;á.
	gim
 +b.
im
; á; }

1528 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1529 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 - (c⁄° Com∂ex<_Tp>& 
	ga
, c⁄° Com∂ex<_Tp>& 
	gb
)

1530 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
	gª
 - 
	gb
.ª,á.
	gim
 - b.im ); }

1532 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1533 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 -(
Com∂ex
<
_Tp
>& 
a
, c⁄° Com∂ex<_Tp>& 
	gb
)

1534 { 
	ga
.
	gª
 -
b
.
ª
;á.
	gim
 -b.
im
; á; }

1536 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1537 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 - (c⁄° Com∂ex<_Tp>& 
	ga
)

1538 {  
	gCom∂ex
<
	g_Tp
>(-
	ga
.
	gª
, -a.
	gim
); }

1540 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1541 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 * (c⁄° Com∂ex<_Tp>& 
	ga
, c⁄° Com∂ex<_Tp>& 
	gb
)

1542 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
ª
*
	gb
.
	gª
 -á.
im
*b.
	gim
,á.re*b.im +á.im*b.re ); }

1544 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1545 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 * (c⁄° Com∂ex<_Tp>& 
	ga
, 
_Tp
 
	gb
)

1546 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
ª
*
	gb
,á.
im
*b ); }

1548 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1549 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 * (
_Tp
 
	gb
, c⁄° Com∂ex<_Tp>& 
	ga
)

1550 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
ª
*
	gb
,á.
im
*b ); }

1552 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1553 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 + (c⁄° Com∂ex<_Tp>& 
	ga
, 
_Tp
 
	gb
)

1554 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
	gª
 + 
	gb
,á.
	gim
 ); }

1556 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1557 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 - (c⁄° Com∂ex<_Tp>& 
	ga
, 
_Tp
 
	gb
)

1558 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
	gª
 - 
	gb
,á.
	gim
 ); }

1560 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1561 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 + (
_Tp
 
	gb
, c⁄° Com∂ex<_Tp>& 
	ga
)

1562 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
	gª
 + 
	gb
,á.
	gim
 ); }

1564 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1565 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 - (
_Tp
 
	gb
, c⁄° Com∂ex<_Tp>& 
	ga
)

1566 {  
	gCom∂ex
<
	g_Tp
>–
	gb
 - 
	ga
.
	gª
, -a.
	gim
 ); }

1568 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1569 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 +(
Com∂ex
<
_Tp
>& 
a
, _T∞
	gb
)

1570 { 
	ga
.
	gª
 +
b
; á; }

1572 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1573 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 -(
Com∂ex
<
_Tp
>& 
a
, _T∞
	gb
)

1574 { 
	ga
.
	gª
 -
b
; á; }

1576 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1577 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 *(
Com∂ex
<
_Tp
>& 
a
, _T∞
	gb
)

1578 { 
	ga
.
	gª
 *
b
;á.
	gim
 *= b; á; }

1580 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1581 
abs
(c⁄° 
Com∂ex
<
_Tp
>& 
a
)

1582 {  
	g°d
::
sqπ
–()
a
.
ª
*a.ª + (Ô.
im
*a.im); }

1584 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1585 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 / (c⁄° Com∂ex<_Tp>& 
	ga
, c⁄° Com∂ex<_Tp>& 
	gb
)

1587 
	gt
 = 1./(()
b
.
ª
*b.ª + ()b.
im
*b.im);

1588  
	gCom∂ex
<
	g_Tp
>–(_Tp)((
	ga
.
ª
*
	gb
.
	gª
 +á.
im
*b.
	gim
)*
	gt
),

1589 (
	g_Tp
)((-
	ga
.
ª
*
	gb
.
	gim
 +á.
im
*b.
	gª
)*
	gt
) );

1592 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1593 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 /(
Com∂ex
<
_Tp
>& 
a
, c⁄° Com∂ex<_Tp>& 
	gb
)

1595  (
	ga
 = 
a
 / 
b
);

1598 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1599 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 / (c⁄° Com∂ex<_Tp>& 
	ga
, 
_Tp
 
	gb
)

1601 
_Tp
 
	gt
 = (_Tp)1/
b
;

1602  
	gCom∂ex
<
	g_Tp
>–
	ga
.
ª
*
	gt
,á.
im
*t );

1605 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1606 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 / (
_Tp
 
	gb
, c⁄° Com∂ex<_Tp>& 
	ga
)

1608  
	gCom∂ex
<
	g_Tp
>(
	gb
)/
	ga
;

1611 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1612 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 /(c⁄° 
Com∂ex
<
_Tp
>& 
a
, _T∞
	gb
)

1614 
_Tp
 
	gt
 = (_Tp)1/
b
;

1615 
	ga
.
	gª
 *
t
;á.
	gim
 *=Å; á;

1620 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(Ë: 
x
(0), 
y
(0) {}

1621 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(
_Tp
 
_x
, _T∞
_y
Ë: 
x
(_x), 
y
(_y) {}

1622 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(c⁄° Poöt_& 
±
Ë: 
x
’t.x), 
y
(pt.y) {}

1623 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(c⁄° 
CvPoöt
& 
±
Ë: 
x
((
_Tp
Ìt.x), 
y
((_Tp)pt.y) {}

1624 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(c⁄° 
CvPoöt2D32f
& 
±
)

1625 : 
x
(
ßtuøã_ˇ°
<
_Tp
>(
±
.x)), 
y
(saturate_cast<_Tp>(pt.y)) {}

1626 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(c⁄° 
Size_
<
_Tp
>& 
sz
Ë: 
x
(sz.
width
), 
y
(sz.
height
) {}

1627 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(c⁄° 
Vec
<
_Tp
,2>& 
v
Ë: 
x
(v[0]), 
y
(v[1]) {}

1628 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>& Poöt_<_Tp>::
›î©‹
 = (c⁄° 
Poöt_
& 
±
)

1629 { 
x
 = 
±
.x; 
	gy
 =Öt.
y
;  *
	gthis
; }

1631 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 
	gPoöt_
<_Tp>::
›î©‹
 
Poöt_
<
_Tp2
>() const

1632 {  
Poöt_
<
_Tp2
>(
ßtuøã_ˇ°
<_Tp2>(
x
), 
	gßtuøã_ˇ°
<
	g_Tp2
>(
	gy
)); }

1633 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
›î©‹
 
CvPoöt
() const

1634 {  
cvPoöt
(
ßtuøã_ˇ°
<>(
x
), s©uøã_ˇ°<>(
y
)); }

1635 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
›î©‹
 
CvPoöt2D32f
() const

1636 {  
cvPoöt2D32f
(()
x
, ()
y
); }

1637 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
›î©‹
 
Vec
<
_Tp
, 2>() const

1638 {  
	gVec
<
	g_Tp
, 2>(
	gx
, 
	gy
); }

1640 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gPoöt_
<_Tp>::
dŸ
(c⁄° 
Poöt_
& 
±
) const

1641 {  
ßtuøã_ˇ°
<
_Tp
>(
x
*
±
.x + 
y
*pt.y); }

1642 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
ddŸ
(c⁄° 
Poöt_
& 
±
) const

1643 {  ()
x
*
±
.x + ()
y
*pt.y; }

1645 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
¸oss
(c⁄° 
Poöt_
& 
±
) const

1646 {  ()
x
*
±
.
y
 - ()y*pt.x; }

1648 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>&

1649 
	g›î©‹
 +(
Poöt_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<
	g_Tp
>& 
	gb
)

1651 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
 + 
b
.x);

1652 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
 + 
b
.y);

1653  
	ga
;

1656 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>&

1657 
	g›î©‹
 -(
Poöt_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<
	g_Tp
>& 
	gb
)

1659 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
 - 
b
.x);

1660 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
 - 
b
.y);

1661  
	ga
;

1664 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>&

1665 
	g›î©‹
 *(
Poöt_
<
_Tp
>& 
a
, 
	gb
)

1667 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1668 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1669  
	ga
;

1672 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>&

1673 
	g›î©‹
 *(
Poöt_
<
_Tp
>& 
a
, 
	gb
)

1675 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1676 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1677  
	ga
;

1680 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>&

1681 
	g›î©‹
 *(
Poöt_
<
_Tp
>& 
a
, 
	gb
)

1683 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1684 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1685  
	ga
;

1688 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
n‹m
(c⁄° 
Poöt_
<
_Tp
>& 
±
)

1689 {  
	g°d
::
sqπ
(()
±
.
x
*±.x + (Ìt.
y
*pt.y); }

1691 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
Poöt_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
)

1692 {  
	ga
.
	gx
 =
b
.
x
 && 
a
.
y
 == b.y; }

1694 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
Poöt_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
)

1695 {  
	ga
.
	gx
 !
b
.
x
 || 
a
.
y
 != b.y; }

1697 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 + (c⁄° Poöt_<_Tp>& 
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

1698 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gx
 + 
	gb
.x), s©uøã_ˇ°<_Tp>◊.
	gy
 + b.y) ); }

1700 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 - (c⁄° Poöt_<_Tp>& 
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

1701 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gx
 - 
	gb
.x), s©uøã_ˇ°<_Tp>◊.
	gy
 - b.y) ); }

1703 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 - (c⁄° Poöt_<_Tp>& 
	ga
)

1704 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(-
	ga
.
	gx
), s©uøã_ˇ°<_Tp>(-a.
	gy
) ); }

1706 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt_<_Tp>& 
	ga
, 
	gb
)

1707 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
), s©uøã_ˇ°<_Tp>◊.
y
*b) ); }

1709 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

1710 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
), s©uøã_ˇ°<_Tp>(b.
y
*a) ); }

1712 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt_<_Tp>& 
	ga
, 
	gb
)

1713 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
), s©uøã_ˇ°<_Tp>◊.
y
*b) ); }

1715 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

1716 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
), s©uøã_ˇ°<_Tp>(b.
y
*a) ); }

1718 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt_<_Tp>& 
	ga
, 
	gb
)

1719 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
), s©uøã_ˇ°<_Tp>◊.
y
*b) ); }

1721 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

1722 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
), s©uøã_ˇ°<_Tp>(b.
y
*a) ); }

1726 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(Ë: 
x
(0), 
y
(0), 
z
(0) {}

1727 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(
_Tp
 
_x
, _T∞
_y
, _T∞
_z
Ë: 
x
(_x), 
y
(_y), 
z
(_z) {}

1728 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(c⁄° Poöt3_& 
±
Ë: 
x
’t.x), 
y
’t.y), 
z
(pt.z) {}

1729 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(c⁄° 
Poöt_
<
_Tp
>& 
±
Ë: 
x
’t.x), 
y
’t.y), 
z
(_Tp()) {}

1730 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(c⁄° 
CvPoöt3D32f
& 
±
) :

1731 
x
(
ßtuøã_ˇ°
<
_Tp
>(
±
.x)), 
y
(ßtuøã_ˇ°<_Tp>’t.y)), 
z
(saturate_cast<_Tp>(pt.z)) {}

1732 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(c⁄° 
Vec
<
_Tp
, 3>& 
v
Ë: 
x
(v[0]), 
y
(v[1]), 
z
(v[2]) {}

1734 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 
	gPoöt3_
<_Tp>::
›î©‹
 
Poöt3_
<
_Tp2
>() const

1735 {  
Poöt3_
<
_Tp2
>(
ßtuøã_ˇ°
<_Tp2>(
x
), 
	gßtuøã_ˇ°
<
	g_Tp2
>(
	gy
), s©uøã_ˇ°<_Tp2>(
	gz
)); }

1737 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
›î©‹
 
CvPoöt3D32f
() const

1738 {  
cvPoöt3D32f
(()
x
, ()
y
, ()
z
); }

1740 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
›î©‹
 
Vec
<
_Tp
, 3>() const

1741 {  
	gVec
<
	g_Tp
, 3>(
	gx
, 
	gy
, 
	gz
); }

1743 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>& Poöt3_<_Tp>::
›î©‹
 = (c⁄° 
Poöt3_
& 
±
)

1744 { 
x
 = 
±
.x; 
	gy
 =Öt.
y
; 
	gz
 =Öt.
z
;  *
	gthis
; }

1746 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gPoöt3_
<_Tp>::
dŸ
(c⁄° 
Poöt3_
& 
±
) const

1747 {  
ßtuøã_ˇ°
<
_Tp
>(
x
*
±
.x + 
y
*±.y + 
z
*pt.z); }

1748 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
ddŸ
(c⁄° 
Poöt3_
& 
±
) const

1749 {  ()
x
*
±
.x + ()
y
*±.y + ()
z
*pt.z; }

1751 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> Poöt3_<_Tp>::
¸oss
(c⁄° 
Poöt3_
<
_Tp
>& 
±
) const

1753  
Poöt3_
<
_Tp
>(
y
*
±
.
z
 - z*±.y, z*
	g±
.
	gx
 - 
x
*±.
	gz
, x*±.
	gy
 - y*pt.x);

1756 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>&

1757 
	g›î©‹
 +(
Poöt3_
<
_Tp
>& 
a
, c⁄° 
	gPoöt3_
<
	g_Tp
>& 
	gb
)

1759 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
 + 
b
.x);

1760 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
 + 
b
.y);

1761 
	ga
.
	gz
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
z
 + 
b
.z);

1762  
	ga
;

1765 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>&

1766 
	g›î©‹
 -(
Poöt3_
<
_Tp
>& 
a
, c⁄° 
	gPoöt3_
<
	g_Tp
>& 
	gb
)

1768 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
 - 
b
.x);

1769 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
 - 
b
.y);

1770 
	ga
.
	gz
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
z
 - 
b
.z);

1771  
	ga
;

1774 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>&

1775 
	g›î©‹
 *(
Poöt3_
<
_Tp
>& 
a
, 
	gb
)

1777 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1778 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1779 
	ga
.
	gz
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
z
*
b
);

1780  
	ga
;

1783 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>&

1784 
	g›î©‹
 *(
Poöt3_
<
_Tp
>& 
a
, 
	gb
)

1786 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1787 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1788 
	ga
.
	gz
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
z
*
b
);

1789  
	ga
;

1792 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>&

1793 
	g›î©‹
 *(
Poöt3_
<
_Tp
>& 
a
, 
	gb
)

1795 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1796 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1797 
	ga
.
	gz
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
z
*
b
);

1798  
	ga
;

1801 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
n‹m
(c⁄° 
Poöt3_
<
_Tp
>& 
±
)

1802 {  
	g°d
::
sqπ
(()
±
.
x
*±.x + (Ìt.
y
*±.y + (Ìt.
z
*pt.z); }

1804 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
Poöt3_
<
_Tp
>& 
a
, c⁄° 
	gPoöt3_
<_Tp>& 
	gb
)

1805 {  
	ga
.
	gx
 =
b
.
x
 && 
a
.
y
 =b.y &&á.
z
 == b.z; }

1807 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
Poöt3_
<
_Tp
>& 
a
, c⁄° 
	gPoöt3_
<_Tp>& 
	gb
)

1808 {  
	ga
.
	gx
 !
b
.
x
 || 
a
.
y
 !b.y ||á.
z
 != b.z; }

1810 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 + (c⁄° Poöt3_<_Tp>& 
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

1811 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gx
 + 
	gb
.x),

1812 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gy
 + 
	gb
.y),

1813 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gz
 + 
	gb
.z)); }

1815 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 - (c⁄° Poöt3_<_Tp>& 
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

1816 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gx
 - 
	gb
.x),

1817 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gy
 - 
	gb
.y),

1818 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gz
 - 
	gb
.z)); }

1820 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 - (c⁄° Poöt3_<_Tp>& 
	ga
)

1821 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(-
	ga
.
	gx
),

1822 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	ga
.
	gy
),

1823 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	ga
.
	gz
) ); }

1825 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt3_<_Tp>& 
	ga
, 
	gb
)

1826 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
),

1827 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
y
*
	gb
),

1828 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
z
*
	gb
) ); }

1830 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

1831 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
),

1832 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
y
*
	ga
),

1833 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
z
*
	ga
) ); }

1835 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt3_<_Tp>& 
	ga
, 
	gb
)

1836 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
),

1837 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
y
*
	gb
),

1838 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
z
*
	gb
) ); }

1840 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

1841 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
),

1842 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
y
*
	ga
),

1843 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
z
*
	ga
) ); }

1845 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt3_<_Tp>& 
	ga
, 
	gb
)

1846 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
),

1847 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
y
*
	gb
),

1848 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
z
*
	gb
) ); }

1850 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

1851 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
),

1852 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
y
*
	ga
),

1853 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
z
*
	ga
) ); }

1857 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
()

1858 : 
width
(0), 
height
(0) {}

1859 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
(
_Tp
 
_width
, _T∞
_height
)

1860 : 
width
(
_width
), 
height
(
_height
) {}

1861 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
(c⁄° Size_& 
sz
)

1862 : 
width
(
sz
.width), 
height
(sz.height) {}

1863 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
(c⁄° 
CvSize
& 
sz
)

1864 : 
width
(
ßtuøã_ˇ°
<
_Tp
>(
sz
.width)), 
height
(saturate_cast<_Tp>(sz.height)) {}

1865 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
(c⁄° 
CvSize2D32f
& 
sz
)

1866 : 
width
(
ßtuøã_ˇ°
<
_Tp
>(
sz
.width)), 
height
(saturate_cast<_Tp>(sz.height)) {}

1867 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
(c⁄° 
Poöt_
<
_Tp
>& 
±
Ë: 
width
’t.
x
), 
height
’t.
y
) {}

1869 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 
	gSize_
<_Tp>::
›î©‹
 
Size_
<
_Tp2
>() const

1870 {  
Size_
<
_Tp2
>(
ßtuøã_ˇ°
<_Tp2>(
width
), 
	gßtuøã_ˇ°
<
	g_Tp2
>(
	gheight
)); }

1871 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
›î©‹
 
CvSize
() const

1872 {  
cvSize
(
ßtuøã_ˇ°
<>(
width
), s©uøã_ˇ°<>(
height
)); }

1873 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
›î©‹
 
CvSize2D32f
() const

1874 {  
cvSize2D32f
(()
width
, ()
height
); }

1876 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>& Size_<_Tp>::
›î©‹
 = (c⁄° 
Size_
<
_Tp
>& 
sz
)

1877 { 
width
 = 
sz
.width; 
	gheight
 = sz.
height
;  *
	gthis
; }

1878 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp> 
	g›î©‹
 * (c⁄° Size_<_Tp>& 
	ga
, 
_Tp
 
	gb
)

1879 {  
	gSize_
<
	g_Tp
>(
	ga
.
width
 * 
	gb
,á.
height
 * b); }

1880 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp> 
	g›î©‹
 + (c⁄° Size_<_Tp>& 
	ga
, c⁄° Size_<_Tp>& 
	gb
)

1881 {  
	gSize_
<
	g_Tp
>(
	ga
.
	gwidth
 + 
	gb
.width,á.
	gheight
 + b.height); }

1882 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp> 
	g›î©‹
 - (c⁄° Size_<_Tp>& 
	ga
, c⁄° Size_<_Tp>& 
	gb
)

1883 {  
	gSize_
<
	g_Tp
>(
	ga
.
	gwidth
 - 
	gb
.width,á.
	gheight
 - b.height); }

1884 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gSize_
<_Tp>::
¨ó
(Ëc⁄° {  
width
*
height
; }

1886 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>& 
	g›î©‹
 +(
Size_
<
_Tp
>& 
a
, c⁄° Size_<_Tp>& 
	gb
)

1887 { 
	ga
.
	gwidth
 +
b
.
width
;á.
	gheight
 +b.
height
; á; }

1888 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>& 
	g›î©‹
 -(
Size_
<
_Tp
>& 
a
, c⁄° Size_<_Tp>& 
	gb
)

1889 { 
	ga
.
	gwidth
 -
b
.
width
;á.
	gheight
 -b.
height
; á; }

1891 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
Size_
<
_Tp
>& 
a
, c⁄° 
	gSize_
<_Tp>& 
	gb
)

1892 {  
	ga
.
	gwidth
 =
b
.
width
 && 
a
.
height
 == b.height; }

1893 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
Size_
<
_Tp
>& 
a
, c⁄° 
	gSize_
<_Tp>& 
	gb
)

1894 {  
	ga
.
	gwidth
 !
b
.
width
 || 
a
.
height
 != b.height; }

1899 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(Ë: 
x
(0), 
y
(0), 
width
(0), 
height
(0) {}

1900 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(
_Tp
 
_x
, _T∞
_y
, _T∞
_width
, _T∞
_height
Ë: 
x
(_x), 
y
(_y), 
width
(_width), 
height
(_height) {}

1901 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(c⁄° Re˘_<
_Tp
>& 
r
Ë: 
x
‘.x), 
y
‘.y), 
width
‘.width), 
height
(r.height) {}

1902 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(c⁄° 
CvRe˘
& 
r
Ë: 
x
((
_Tp
Ï.x), 
y
((_TpÏ.y), 
width
((_TpÏ.width), 
height
((_Tp)r.height) {}

1903 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(c⁄° 
Poöt_
<
_Tp
>& 
‹g
, c⁄° 
Size_
<_Tp>& 
sz
) :

1904 
x
(
‹g
.x), 
y
(‹g.y), 
width
(
sz
.width), 
height
(sz.height) {}

1905 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(c⁄° 
Poöt_
<
_Tp
>& 
±1
, c⁄° Poöt_<_Tp>& 
±2
)

1907 
	gx
 = 
°d
::
mö
(
±1
.
x
, 
±2
.x); 
	gy
 = std::mö’t1.
y
,Öt2.y);

1908 
	gwidth
 = 
°d
::
max
(
±1
.
x
, 
±2
.xË- 
	gx
; 
	gheight
 = std::max’t1.
y
,Öt2.yË- 
	gy
;

1910 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& Re˘_<_Tp>::
›î©‹
 = ( c⁄° 
Re˘_
<
_Tp
>& 
r
 )

1911 { 
x
 = 
r
.x; 
	gy
 =Ñ.
y
; 
	gwidth
 =Ñ.
width
; 
	gheight
 =Ñ.
height
;  *
	gthis
; }

1913 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	gRe˘_
<_Tp>::
é
(Ëc⁄° {  
Poöt_
<
_Tp
>(
x
,
	gy
); }

1914 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	gRe˘_
<_Tp>::
br
(Ëc⁄° {  
Poöt_
<
_Tp
>(
x
+
width
, 
	gy
+
	gheight
); }

1916 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 +–
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
 )

1917 { 
	ga
.
	gx
 +
b
.
x
;á.
	gy
 +b.
y
; á; }

1918 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 -–
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
 )

1919 { 
	ga
.
	gx
 -
b
.
x
;á.
	gy
 -b.
y
; á; }

1921 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 +–
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gSize_
<_Tp>& 
	gb
 )

1922 { 
	ga
.
	gwidth
 +
b
.
width
;á.
	gheight
 +b.
height
; á; }

1924 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 -–
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gSize_
<_Tp>& 
	gb
 )

1925 { 
	ga
.
	gwidth
 -
b
.
width
;á.
	gheight
 -b.
height
; á; }

1927 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 &–
Re˘_
<
_Tp
>& 
a
, c⁄° Re˘_<_Tp>& 
	gb
 )

1929 
_Tp
 
	gx1
 = 
°d
::
max
(
a
.
x
, 
b
.x), 
	gy1
 = std::max◊.
y
, b.y);

1930 
	ga
.
	gwidth
 = 
°d
::
mö
(
a
.
x
 +á.
width
, 
b
.x + b.widthË- 
	gx1
;

1931 
	ga
.
	gheight
 = 
°d
::
mö
(
a
.
y
 +á.
height
, 
b
.y + b.heightË- 
	gy1
;

1932 
	ga
.
	gx
 = 
x1
;á.
	gy
 = 
y1
;

1933 if–
	ga
.
	gwidth
 <0 || 
a
.
height
 <= 0 )

1934 
a
 = 
Re˘
();

1935  
	ga
;

1938 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 |–
Re˘_
<
_Tp
>& 
a
, c⁄° Re˘_<_Tp>& 
	gb
 )

1940 
_Tp
 
	gx1
 = 
°d
::
mö
(
a
.
x
, 
b
.x), 
	gy1
 = std::mö◊.
y
, b.y);

1941 
	ga
.
	gwidth
 = 
°d
::
max
(
a
.
x
 +á.
width
, 
b
.x + b.widthË- 
	gx1
;

1942 
	ga
.
	gheight
 = 
°d
::
max
(
a
.
y
 +á.
height
, 
b
.y + b.heightË- 
	gy1
;

1943 
	ga
.
	gx
 = 
x1
;á.
	gy
 = 
y1
;

1944  
	ga
;

1947 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp> 
	gRe˘_
<_Tp>::
size
(Ëc⁄° {  
Size_
<
_Tp
>(
width
, 
	gheight
); }

1948 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gRe˘_
<_Tp>::
¨ó
(Ëc⁄° {  
width
*
height
; }

1950 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 
	gRe˘_
<_Tp>::
›î©‹
 
Re˘_
<
_Tp2
>() const

1951 {  
Re˘_
<
_Tp2
>(
ßtuøã_ˇ°
<_Tp2>(
x
), 
	gßtuøã_ˇ°
<
	g_Tp2
>(
	gy
),

1952 
	gßtuøã_ˇ°
<
	g_Tp2
>(
	gwidth
), s©uøã_ˇ°<_Tp2>(
	gheight
)); }

1953 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
›î©‹
 
CvRe˘
() const

1954 {  
cvRe˘
(
ßtuøã_ˇ°
<>(
x
), s©uøã_ˇ°<>(
y
),

1955 
ßtuøã_ˇ°
<>(
width
), s©uøã_ˇ°<>(
height
)); }

1957 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	gRe˘_
<_Tp>::
c⁄èös
(c⁄° 
Poöt_
<
_Tp
>& 
±
) const

1958 {  
x
 <
±
.x &&Öt.x < x + 
width
 && 
y
 <±.y &&Öt.y < y + 
height
; }

1960 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gRe˘_
<_Tp>& 
	gb
)

1962  
	ga
.
	gx
 =
b
.
x
 && 
a
.
y
 =b.y &&á.
width
 =b.width &&á.
height
 == b.height;

1965 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gRe˘_
<_Tp>& 
	gb
)

1967  
	ga
.
	gx
 !
b
.
x
 || 
a
.
y
 !b.y ||á.
width
 !b.width ||á.
height
 != b.height;

1970 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp> 
	g›î©‹
 + (c⁄° Re˘_<_Tp>& 
	ga
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
)

1972  
	gRe˘_
<
	g_Tp
>–
	ga
.
	gx
 + 
	gb
.x,á.
	gy
 + b.y,á.
	gwidth
,á.
	gheight
 );

1975 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp> 
	g›î©‹
 - (c⁄° Re˘_<_Tp>& 
	ga
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
)

1977  
	gRe˘_
<
	g_Tp
>–
	ga
.
	gx
 - 
	gb
.x,á.
	gy
 - b.y,á.
	gwidth
,á.
	gheight
 );

1980 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp> 
	g›î©‹
 + (c⁄° Re˘_<_Tp>& 
	ga
, c⁄° 
	gSize_
<_Tp>& 
	gb
)

1982  
	gRe˘_
<
	g_Tp
>–
	ga
.
	gx
,á.
	gy
,á.
	gwidth
 + 
	gb
.width,á.
	gheight
 + b.height );

1985 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp> 
	g›î©‹
 & (c⁄° Re˘_<_Tp>& 
	ga
, c⁄° Re˘_<_Tp>& 
	gb
)

1987 
	gRe˘_
<
	g_Tp
> 
	gc
 = 
a
;

1988  
	gc
 &
b
;

1991 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp> 
	g›î©‹
 | (c⁄° Re˘_<_Tp>& 
	ga
, c⁄° Re˘_<_Tp>& 
	gb
)

1993 
	gRe˘_
<
	g_Tp
> 
	gc
 = 
a
;

1994  
	gc
 |
b
;

1997 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	gPoöt_
<_Tp>::
öside
–c⁄° 
Re˘_
<
_Tp
>& 
r
 ) const

1999  
r
.
c⁄èös
(*
this
);

2002 
ölöe
 
	gRŸ©edRe˘
::
RŸ©edRe˘
(Ë{ 
™gÀ
 = 0; }

2003 
ölöe
 
	gRŸ©edRe˘
::
RŸ©edRe˘
(c⁄° 
Poöt2f
& 
_˚¡î
, c⁄° 
Size2f
& 
_size
, 
_™gÀ
)

2004 : 
˚¡î
(
_˚¡î
), 
size
(
_size
), 
™gÀ
(
_™gÀ
) {}

2005 
ölöe
 
	gRŸ©edRe˘
::
RŸ©edRe˘
(c⁄° 
CvBox2D
& 
box
)

2006 : 
˚¡î
(
box
.˚¡î), 
size
(box.size), 
™gÀ
(box.angle) {}

2007 
ölöe
 
	gRŸ©edRe˘
::
›î©‹
 
CvBox2D
() const

2009 
CvBox2D
 
box
; 
	gbox
.
	g˚¡î
 = 
˚¡î
; box.
	gsize
 = 
size
; box.
	g™gÀ
 = 
™gÀ
;

2010  
	gbox
;

2015 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>::
Sˇœr_
()

2016 { 
this
->
vÆ
[0] =Åhis->val[1] =Åhis->val[2] =Åhis->val[3] = 0; }

2018 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>::
Sˇœr_
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
)

2019 { 
	gthis
->
	gvÆ
[0] = 
v0
;Åhis->vÆ[1] = 
v1
;Åhis->vÆ[2] = 
v2
;Åhis->vÆ[3] = 
v3
; }

2021 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>::
Sˇœr_
(c⁄° 
CvSˇœr
& 
s
)

2023 
this
->
vÆ
[0] = 
ßtuøã_ˇ°
<
_Tp
>(
s
.val[0]);

2024 
	gthis
->
	gvÆ
[1] = 
ßtuøã_ˇ°
<
_Tp
>(
s
.
vÆ
[1]);

2025 
	gthis
->
	gvÆ
[2] = 
ßtuøã_ˇ°
<
_Tp
>(
s
.
vÆ
[2]);

2026 
	gthis
->
	gvÆ
[3] = 
ßtuøã_ˇ°
<
_Tp
>(
s
.
vÆ
[3]);

2029 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>::
Sˇœr_
(
_Tp
 
v0
)

2030 { 
this
->
vÆ
[0] = 
v0
; 
	gthis
->
	gvÆ
[1] =Åhis->val[2] =Åhis->val[3] = 0; }

2032 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> Sˇœr_<_Tp>::
Æl
(
_Tp
 
v0
)

2033 {  
Sˇœr_
<
_Tp
>(
v0
, 
	gv0
, v0, v0); }

2034 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>::
›î©‹
 
CvSˇœr
() const

2035 {  
cvSˇœr
(
this
->
vÆ
[0],Åhis->val[1],Åhis->val[2],Åhis->val[3]); }

2037 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	gT2
> 
ölöe
 
	gSˇœr_
<_Tp>::
›î©‹
 
Sˇœr_
<
T2
>() const

2039  
Sˇœr_
<
T2
>(
ßtuøã_ˇ°
<T2>(
this
->
vÆ
[0]),

2040 
	gßtuøã_ˇ°
<
	gT2
>(
	gthis
->
	gvÆ
[1]),

2041 
	gßtuøã_ˇ°
<
	gT2
>(
	gthis
->
	gvÆ
[2]),

2042 
	gßtuøã_ˇ°
<
	gT2
>(
	gthis
->
	gvÆ
[3]));

2045 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>& 
	g›î©‹
 +(
Sˇœr_
<
_Tp
>& 
a
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2047 
	ga
.
	gvÆ
[0] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[0] + 
b
.val[0]);

2048 
	ga
.
	gvÆ
[1] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[1] + 
b
.val[1]);

2049 
	ga
.
	gvÆ
[2] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[2] + 
b
.val[2]);

2050 
	ga
.
	gvÆ
[3] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[3] + 
b
.val[3]);

2051  
	ga
;

2054 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>& 
	g›î©‹
 -(
Sˇœr_
<
_Tp
>& 
a
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2056 
	ga
.
	gvÆ
[0] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[0] - 
b
.val[0]);

2057 
	ga
.
	gvÆ
[1] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[1] - 
b
.val[1]);

2058 
	ga
.
	gvÆ
[2] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[2] - 
b
.val[2]);

2059 
	ga
.
	gvÆ
[3] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[3] - 
b
.val[3]);

2060  
	ga
;

2063 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>& 
	g›î©‹
 *–
Sˇœr_
<
_Tp
>& 
a
, _T∞
	gv
 )

2065 
	ga
.
	gvÆ
[0] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[0] * 
v
);

2066 
	ga
.
	gvÆ
[1] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[1] * 
v
);

2067 
	ga
.
	gvÆ
[2] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[2] * 
v
);

2068 
	ga
.
	gvÆ
[3] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[3] * 
v
);

2069  
	ga
;

2072 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> Sˇœr_<_Tp>::
mul
(c⁄° 
Sˇœr_
<
_Tp
>& 
t
, 
sˇÀ
 ) const

2074  
	gSˇœr_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gthis
->
	gvÆ
[0]*
	gt
.vÆ[0]*
	gsˇÀ
),

2075 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gthis
->
	gvÆ
[1]*
	gt
.vÆ[1]*
	gsˇÀ
),

2076 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gthis
->
	gvÆ
[2]*
	gt
.vÆ[2]*
	gsˇÀ
),

2077 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gthis
->
	gvÆ
[3]*
	gt
.vÆ[3]*
	gsˇÀ
));

2080 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =–c⁄° 
Sˇœr_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr_
<_Tp>& 
	gb
 )

2082  
	ga
.
	gvÆ
[0] =
b
.
vÆ
[0] && 
a
.val[1] == b.val[1] &&

2083 
a
.
vÆ
[2] =
b
.val[2] &&á.val[3] == b.val[3];

2086 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !–c⁄° 
Sˇœr_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr_
<_Tp>& 
	gb
 )

2088  
	ga
.
	gvÆ
[0] !
b
.
vÆ
[0] || 
a
.val[1] != b.val[1] ||

2089 
a
.
vÆ
[2] !
b
.val[2] ||á.val[3] != b.val[3];

2092 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> 
	g›î©‹
 + (c⁄° Sˇœr_<_Tp>& 
	ga
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2094  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gvÆ
[0] + 
	gb
.val[0]),

2095 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[1] + 
	gb
.val[1]),

2096 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[2] + 
	gb
.val[2]),

2097 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[3] + 
	gb
.val[3]));

2100 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> 
	g›î©‹
 - (c⁄° Sˇœr_<_Tp>& 
	ga
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2102  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gvÆ
[0] - 
	gb
.val[0]),

2103 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[1] - 
	gb
.val[1]),

2104 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[2] - 
	gb
.val[2]),

2105 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[3] - 
	gb
.val[3]));

2108 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> 
	g›î©‹
 * (c⁄° Sˇœr_<_Tp>& 
	ga
, 
_Tp
 
	gÆpha
)

2110  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gvÆ
[0] * 
	gÆpha
),

2111 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[1] * 
	gÆpha
),

2112 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[2] * 
	gÆpha
),

2113 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[3] * 
	gÆpha
));

2116 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> 
	g›î©‹
 * (
_Tp
 
	gÆpha
, c⁄° Sˇœr_<_Tp>& 
	ga
)

2118  
a
*
	gÆpha
;

2121 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> 
	g›î©‹
 - (c⁄° Sˇœr_<_Tp>& 
	ga
)

2123  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(-
	ga
.
	gvÆ
[0]), saturate_cast<_Tp>(-a.val[1]),

2124 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	ga
.
	gvÆ
[2]), saturate_cast<_Tp>(-a.val[3]));

2128 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>

2129 
	g›î©‹
 * (c⁄° 
	gSˇœr_
<
	g_Tp
>& 
	ga
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2131  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(
	ga
[0]*
	gb
[0] -á[1]*b[1] -á[2]*b[2] -á[3]*b[3]),

2132 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
[0]*
	gb
[1] +á[1]*b[0] +á[2]*b[3] -á[3]*b[2]),

2133 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
[0]*
	gb
[2] -á[1]*b[3] +á[2]*b[0] +á[3]*b[1]),

2134 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
[0]*
	gb
[3] +á[1]*b[2] -á[2]*b[1] +á[3]*b[0]));

2137 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>&

2138 
	g›î©‹
 *(
Sˇœr_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr_
<
	g_Tp
>& 
	gb
)

2140 
	ga
 = 
a
*
b
;

2141  
	ga
;

2144 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> Sˇœr_<_Tp>::
c⁄j
() const

2146  
Sˇœr_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>(
this
->
vÆ
[0]),

2147 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	gthis
->
	gvÆ
[1]),

2148 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	gthis
->
	gvÆ
[2]),

2149 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	gthis
->
	gvÆ
[3]));

2152 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	gSˇœr_
<_Tp>::
isRól
() const

2154  
this
->
vÆ
[1] == 0 &&Åhis->val[2] == 0 &&Åhis->val[3] == 0;

2157 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2158 
	gSˇœr_
<
	g_Tp
> 
	g›î©‹
 / (c⁄° Sˇœr_<_Tp>& 
	ga
, 
_Tp
 
	gÆpha
)

2160  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gvÆ
[0] / 
	gÆpha
),

2161 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[1] / 
	gÆpha
),

2162 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[2] / 
	gÆpha
),

2163 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[3] / 
	gÆpha
));

2166 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2167 
	gSˇœr_
<> 
	g›î©‹
 / (c⁄° Sˇœr_<>& 
	ga
, 
	gÆpha
)

2169 
	gs
 = 1/
Æpha
;

2170  
	gSˇœr_
<>(
	ga
.
	gvÆ
[0]*
	gs
,á.val[1]*s,á.val[2]*s,á.val[3]*s);

2173 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2174 
	gSˇœr_
<> 
	g›î©‹
 / (c⁄° Sˇœr_<>& 
	ga
, 
	gÆpha
)

2176 
	gs
 = 1/
Æpha
;

2177  
	gSˇœr_
<>(
	ga
.
	gvÆ
[0]*
	gs
,á.val[1]*s,á.val[2]*s,á.val[3]*s);

2180 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2181 
	gSˇœr_
<
	g_Tp
>& 
	g›î©‹
 /(
Sˇœr_
<
_Tp
>& 
a
, _T∞
	gÆpha
)

2183 
	ga
 = 
a
/
Æpha
;

2184  
	ga
;

2187 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2188 
	gSˇœr_
<
	g_Tp
> 
	g›î©‹
 / (
_Tp
 
	ga
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2190 
_Tp
 
	gs
 = 
a
/(
b
[0]*b[0] + b[1]*b[1] + b[2]*b[2] + b[3]*b[3]);

2191  
	gb
.
c⁄j
()*
	gs
;

2194 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2195 
	gSˇœr_
<
	g_Tp
> 
	g›î©‹
 / (c⁄° Sˇœr_<_Tp>& 
	ga
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2197  
	ga
*((
	g_Tp
)1/
	gb
);

2200 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2201 
	gSˇœr_
<
	g_Tp
>& 
	g›î©‹
 /(
Sˇœr_
<
_Tp
>& 
a
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2203 
	ga
 = 
a
/
b
;

2204  
	ga
;

2209 
ölöe
 
	gR™ge
::
R™ge
(Ë: 
°¨t
(0), 
íd
(0) {}

2210 
ölöe
 
	gR™ge
::
R™ge
(
_°¨t
, 
_íd
Ë: 
°¨t
(_°¨t), 
íd
(_end) {}

2211 
ölöe
 
	gR™ge
::
R™ge
(c⁄° 
CvSli˚
& 
¶i˚
Ë: 
°¨t
(¶i˚.
°¨t_ödex
), 
íd
(¶i˚.
íd_ödex
)

2213 if–
	g°¨t
 =0 && 
íd
 =
CV_WHOLE_SEQ_END_INDEX
 )

2214 *
this
 = 
R™ge
::
Æl
();

2217 
ölöe
 
	gR™ge
::
size
(Ëc⁄° {  
íd
 - 
°¨t
; }

2218 
ölöe
 
boﬁ
 
	gR™ge
::
em±y
(Ëc⁄° {  
°¨t
 =
íd
; }

2219 
ölöe
 
R™ge
 
	gR™ge
::
Æl
(Ë{  R™ge(
INT_MIN
, 
INT_MAX
); }

2221 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
R™ge
& 
r1
, c⁄° 
	gR™ge
& 
	gr2
)

2222 {  
	gr1
.
	g°¨t
 =
r2
.
°¨t
 && 
r1
.
íd
 ==Ñ2.end; }

2224 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
R™ge
& 
r1
, c⁄° 
	gR™ge
& 
	gr2
)

2225 {  !(
	gr1
 =
r2
); }

2227 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
	gR™ge
& 
	gr
)

2228 {  
	gr
.
	g°¨t
 =
r
.
íd
; }

2230 
ölöe
 
R™ge
 
	g›î©‹
 & (c⁄° 
	gR™ge
& 
	gr1
, c⁄° R™ge& 
	gr2
)

2232 
R™ge
 
r
(
°d
::
max
(
r1
.
°¨t
, 
r2
.°¨t), std::
mö
‘1.
íd
,Ñ2.end));

2233 
	gr
.
	gíd
 = 
°d
::
max
(
r
.
íd
,Ñ.
°¨t
);

2234  
	gr
;

2237 
ölöe
 
	gR™ge
& 
	g›î©‹
 &(
R™ge
& 
r1
, c⁄° R™ge& 
	gr2
)

2239 
	gr1
 = 
r1
 & 
r2
;

2240  
	gr1
;

2243 
ölöe
 
R™ge
 
	g›î©‹
 + (c⁄° 
	gR™ge
& 
	gr1
, 
	gdñè
)

2245  
R™ge
(
r1
.
°¨t
 + 
dñè
,Ñ1.
íd
 + delta);

2248 
ölöe
 
R™ge
 
	g›î©‹
 + (
	gdñè
, c⁄° 
	gR™ge
& 
	gr1
)

2250  
R™ge
(
r1
.
°¨t
 + 
dñè
,Ñ1.
íd
 + delta);

2253 
ölöe
 
R™ge
 
	g›î©‹
 - (c⁄° 
	gR™ge
& 
	gr1
, 
	gdñè
)

2255  
	gr1
 + (-
	gdñè
);

2258 
ölöe
 
	gR™ge
::
›î©‹
 
CvSli˚
() const

2259 {  *
this
 !
R™ge
::
Æl
(Ë? 
cvSli˚
(
°¨t
, 
íd
Ë: 
CV_WHOLE_SEQ
; }

2270 
	gãm∂©e
 <
ty≥«me
 
	g_Tp
> cœs†
	cVe˘‹


2272 
	gpublic
:

2273 
_Tp
 
	tvÆue_ty≥
;

2274 
_Tp
* 
	tôî©‹
;

2275 c⁄° 
	t_Tp
* 
	tc⁄°_ôî©‹
;

2276 
	g_Tp
& 
	tª„ªn˚
;

2277 c⁄° 
	t_Tp
& 
	tc⁄°_ª„ªn˚
;

2279 
	sHdr


2281 
Hdr
(Ë: 
d©a
(0), 
d©a°¨t
(0), 
ªfcou¡
(0), 
size
(0), 
ˇ∑côy
(0) {};

2282 
_Tp
* 
	gd©a
;

2283 
_Tp
* 
	gd©a°¨t
;

2284 
_Atomic_w‹d
* 
	gªfcou¡
;

2285 
size_t
 
	gsize
;

2286 
size_t
 
	gˇ∑côy
;

2289 
Ve˘‹
() {}

2290 
Ve˘‹
(
size_t
 
_size
Ë{ 
ªsize
(_size); }

2291 
Ve˘‹
(
size_t
 
_size
, c⁄° 
_Tp
& 
vÆ
)

2293 
ªsize
(
_size
);

2294 
size_t
 
	gi
 = 0; i < 
	g_size
; i++)

2295 
	ghdr
.
	gd©a
[
i
] = 
vÆ
;

2297 
Ve˘‹
(
_Tp
* 
_d©a
, 
size_t
 
_size
, 
boﬁ
 
_c›yD©a
=
Ál£
)

2298 { 
£t
(
_d©a
, 
_size
, 
_c›yD©a
); }

2300 
	gãm∂©e
<
	gn
> 
Ve˘‹
(c⁄° 
Vec
<
_Tp
, 
n
>& 
vec
)

2301 { 
£t
((
_Tp
*)&
vec
.
vÆ
[0], 
n
, 
åue
); }

2303 
Ve˘‹
(c⁄° 
°d
::
ve˘‹
<
_Tp
>& 
vec
, 
boﬁ
 
_c›yD©a
=
Ál£
)

2304 { 
£t
(!
vec
.
em±y
(Ë? (
_Tp
*)&vec[0] : 0, vec.
size
(), 
_c›yD©a
); }

2306 
Ve˘‹
(c⁄° Ve˘‹& 
d
Ë{ *
	gthis
 = d; }

2308 
Ve˘‹
(c⁄° Ve˘‹& 
d
, c⁄° 
R™ge
& 
r_
)

2310 
R™ge
 
	gr
 = 
r_
 =R™ge::
Æl
(Ë? R™ge(0, 
d
.
size
()) :Ñ_;

2313 if–
	gr
.
size
(Ë> 0 &&Ñ.
	g°¨t
 >0 && 
r
.
íd
 <
d
.size() )

2315 if–
d
.
hdr
.
ªfcou¡
 )

2316 
CV_XADD
(
d
.
hdr
.
ªfcou¡
, 1);

2317 
	ghdr
.
	gªfcou¡
 = 
d
.
hdr
.
ªfcou¡
;

2318 
	ghdr
.
	gd©a°¨t
 = 
d
.
hdr
.
d©a°¨t
;

2319 
	ghdr
.
	gd©a
 = 
d
.
hdr
.
d©a
 + 
r
.
°¨t
;

2320 
	ghdr
.
	gˇ∑côy
 = 
hdr
.
size
 = 
r
.size();

2324 
	gVe˘‹
<
	g_Tp
>& 
	g›î©‹
 = (c⁄° 
Ve˘‹
& 
d
)

2326 if–
this
 !&
d
 )

2328 if–
d
.
hdr
.
ªfcou¡
 )

2329 
CV_XADD
(
d
.
hdr
.
ªfcou¡
, 1);

2330 
ªÀa£
();

2331 
	ghdr
 = 
d
.
hdr
;

2333  *
	gthis
;

2336 ~
Ve˘‹
(Ë{ 
ªÀa£
(); }

2338 
	gVe˘‹
<
	g_Tp
> 
˛⁄e
() const

2339 {  
	ghdr
.
	gd©a
 ? 
	gVe˘‹
<
	g_Tp
>(hdr.d©a, hdr.
	gsize
, 
	gåue
Ë: 
Ve˘‹
<
_Tp
>(); }

2341 
c›yTo
(
Ve˘‹
<
_Tp
>& 
vec
) const

2343 
size_t
 
	gi
, 
	gsz
 = 
size
();

2344 
	gvec
.
ªsize
(
sz
);

2345 c⁄° 
_Tp
* 
	g§c
 = 
hdr
.
d©a
;

2346 
_Tp
* 
	gd°
 = 
vec
.
hdr
.
d©a
;

2347  
	gi
 = 0; i < 
	gsz
; i++ )

2348 
	gd°
[
i
] = 
§c
[i];

2351 
c›yTo
(
°d
::
ve˘‹
<
_Tp
>& 
vec
) const

2353 
size_t
 
i
, 
	gsz
 = 
size
();

2354 
	gvec
.
ªsize
(
sz
);

2355 c⁄° 
_Tp
* 
	g§c
 = 
hdr
.
d©a
;

2356 
_Tp
* 
	gd°
 = 
sz
 ? &
vec
[0] : 0;

2357  
	gi
 = 0; i < 
	gsz
; i++ )

2358 
	gd°
[
i
] = 
§c
[i];

2361 
›î©‹
 
CvM©
() const

2362 {  
cvM©
(()
size
(), 1, 
ty≥
(), (*)
hdr
.
d©a
); }

2364 
	g_Tp
& 
	g›î©‹
 [] (
size_t
 
	gi
Ë{ 
CV_DbgAs£π
–
i
 < 
size
(Ë);  
	ghdr
.
	gd©a
[i]; }

2365 c⁄° 
	g_Tp
& 
	g›î©‹
 [] (
size_t
 
	gi
Ëc⁄° { 
CV_DbgAs£π
–
i
 < 
size
(Ë);  
	ghdr
.
	gd©a
[i]; }

2366 
Ve˘‹
 
›î©‹
(Ë(c⁄° 
	gR™ge
& 
	gr
Ëc⁄° {  Ve˘‹(*
this
, 
r
); }

2367 
	g_Tp
& 
back
(Ë{ 
CV_DbgAs£π
(!
em±y
());  
	ghdr
.
	gd©a
[
hdr
.
size
-1]; }

2368 c⁄° 
	g_Tp
& 
back
(Ëc⁄° { 
CV_DbgAs£π
(!
em±y
());  
	ghdr
.
	gd©a
[
hdr
.
size
-1]; }

2369 
	g_Tp
& 
‰⁄t
(Ë{ 
CV_DbgAs£π
(!
em±y
());  
	ghdr
.
	gd©a
[0]; }

2370 c⁄° 
	g_Tp
& 
‰⁄t
(Ëc⁄° { 
CV_DbgAs£π
(!
em±y
());  
	ghdr
.
	gd©a
[0]; }

2372 
_Tp
* 
begö
(Ë{  
	ghdr
.
	gd©a
; }

2373 
_Tp
* 
íd
(Ë{  
	ghdr
.
	gd©a
 + hdr.
	gsize
; }

2374 c⁄° 
_Tp
* 
begö
(Ëc⁄° {  
	ghdr
.
	gd©a
; }

2375 c⁄° 
_Tp
* 
íd
(Ëc⁄° {  
	ghdr
.
	gd©a
 + hdr.
	gsize
; }

2377 
addªf
(Ë{ if–
	ghdr
.
	gªfcou¡
 ) 
CV_XADD
(
hdr
.
ªfcou¡
, 1); }

2378 
ªÀa£
()

2380 if–
	ghdr
.
	gªfcou¡
 && 
CV_XADD
(
hdr
.
ªfcou¡
, -1) == 1 )

2382 
dñëe
[] 
hdr
.
d©a°¨t
;

2383 
dñëe
 
	ghdr
.
	gªfcou¡
;

2385 
	ghdr
 = 
Hdr
();

2388 
£t
(
_Tp
* 
_d©a
, 
size_t
 
_size
, 
boﬁ
 
_c›yD©a
=
Ál£
)

2390 if–!
_c›yD©a
 )

2392 
ªÀa£
();

2393 
	ghdr
.
	gd©a
 = 
hdr
.
d©a°¨t
 = 
_d©a
;

2394 
	ghdr
.
	gsize
 = 
hdr
.
ˇ∑côy
 = 
_size
;

2395 
	ghdr
.
	gªfcou¡
 = 0;

2399 
ª£rve
(
_size
);

2400  
size_t
 
	gi
 = 0; i < 
	g_size
; i++ )

2401 
	ghdr
.
	gd©a
[
i
] = 
_d©a
[i];

2402 
	ghdr
.
	gsize
 = 
_size
;

2406 
ª£rve
(
size_t
 
√wC≠acôy
)

2408 
_Tp
* 
	g√wD©a
;

2409 * 
	g√wRefcou¡
;

2410 
size_t
 
	gi
, 
	gﬁdSize
 = 
hdr
.
size
;

2411 if–(!
	ghdr
.
	gªfcou¡
 || *hdr.ªfcou¡ =1Ë&& 
hdr
.
ˇ∑côy
 >
√wC≠acôy
 )

2413 
	g√wC≠acôy
 = 
°d
::
max
(
√wC≠acôy
, 
ﬁdSize
);

2414 
	g√wD©a
 = 
√w
 
_Tp
[
√wC≠acôy
];

2415 
	g√wRefcou¡
 = 
√w
 (1);

2416  
	gi
 = 0; i < 
	gﬁdSize
; i++ )

2417 
	g√wD©a
[
i
] = 
hdr
.
d©a
[i];

2418 
ªÀa£
();

2419 
	ghdr
.
	gd©a
 = 
hdr
.
d©a°¨t
 = 
√wD©a
;

2420 
	ghdr
.
	gˇ∑côy
 = 
√wC≠acôy
;

2421 
	ghdr
.
	gsize
 = 
ﬁdSize
;

2422 
	ghdr
.
	gªfcou¡
 = 
√wRefcou¡
;

2425 
ªsize
(
size_t
 
√wSize
)

2427 
size_t
 
	gi
;

2428 
	g√wSize
 = 
°d
::
max
(
√wSize
, (
size_t
)0);

2429 if–(!
	ghdr
.
	gªfcou¡
 || *hdr.ªfcou¡ =1Ë&& 
hdr
.
size
 =
√wSize
 )

2431 if–
	g√wSize
 > 
	ghdr
.
	gˇ∑côy
 )

2432 
ª£rve
(
°d
::
max
(
√wSize
, std::max((
size_t
)4, 
hdr
.
ˇ∑côy
*2)));

2433  
	gi
 = 
hdr
.
size
; i < 
	g√wSize
; i++ )

2434 
	ghdr
.
	gd©a
[
i
] = 
_Tp
();

2435 
	ghdr
.
	gsize
 = 
√wSize
;

2438 
	gVe˘‹
<
	g_Tp
>& 
push_back
(c⁄° 
_Tp
& 
ñem
)

2440 if–
	ghdr
.
	gsize
 =
hdr
.
ˇ∑côy
 )

2441 
ª£rve
–
°d
::
max
((
size_t
)4, 
hdr
.
ˇ∑côy
*2) );

2442 
	ghdr
.
	gd©a
[
hdr
.
size
++] = 
ñem
;

2443  *
	gthis
;

2446 
	gVe˘‹
<
	g_Tp
>& 
p›_back
()

2448 if–
	ghdr
.
	gsize
 > 0 )

2449 --
	ghdr
.
	gsize
;

2450  *
	gthis
;

2453 
size_t
 
size
(Ëc⁄° {  
	ghdr
.
	gsize
; }

2454 
size_t
 
ˇ∑côy
(Ëc⁄° {  
	ghdr
.
	gˇ∑côy
; }

2455 
boﬁ
 
em±y
(Ëc⁄° {  
	ghdr
.
	gsize
 == 0; }

2456 
˛ór
(Ë{ 
ªsize
(0); }

2457 
ty≥
(Ëc⁄° {  
	gD©aTy≥
<
	g_Tp
>::type; }

2459 
	g¥Ÿe˘ed
:

2460 
Hdr
 
hdr
;

2464 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
Åy≥«mê
	gD©aTy≥
<_Tp>::
w‹k_ty≥


2465 
dŸ
(c⁄° 
Ve˘‹
<
_Tp
>& 
v1
, c⁄° Ve˘‹<_Tp>& 
v2
)

2467 
ty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
 
	t_Tw
;

2468 
size_t
 
	gi
 = 0, 
	gn
 = 
v1
.
size
();

2469 
as£π
(
v1
.
size
(Ë=
v2
.size());

2471 
_Tw
 
	gs
 = 0;

2472 c⁄° 
_Tp
 *
	g±r1
 = &
v1
[0], *
	g±r2
 = &
v2
[0];

2473  ; 
	gi
 < 
	gn
; i++ )

2474 
	gs
 +(
_Tw
)
±r1
[
i
]*
±r2
[i];

2476  
	gs
;

2480 
ölöe
 
	gRNG
::
	$RNG
(Ë{ 
°©e
 = 0xffffffff; 
	}
}

2481 
ölöe
 
	gRNG
::
	$RNG
(
uöt64
 
_°©e
Ë{ 
°©e
 = _°©ê? _°©ê: 0xffffffff; 
	}
}

2482 
ölöe
 
	gRNG
::
	$√xt
()

2484 
°©e
 = (
uöt64
)()°©e*
CV_RNG_COEFF
 + ()(state >> 32);

2485  ()
°©e
;

2486 
	}
}

2488 
ölöe
 
	gRNG
::
›î©‹
 
	$uch¨
(Ë{  (
uch¨
)
	`√xt
(); 
	}
}

2489 
ölöe
 
	gRNG
::
›î©‹
 
	$sch¨
(Ë{  (
sch¨
)
	`√xt
(); 
	}
}

2490 
ölöe
 
	gRNG
::
›î©‹
 
	$ush‹t
(Ë{  (
ush‹t
)
	`√xt
(); 
	}
}

2491 
ölöe
 
	gRNG
::
›î©‹
 (Ë{  ()
	`√xt
(); 
	}
}

2492 
ölöe
 
	gRNG
::
›î©‹
 (Ë{  
	`√xt
(); 
	}
}

2493 
ölöe
 
	gRNG
::
	$›î©‹
 ()(
N
Ë{ ()
	`unif‹m
(0,N);
	}
}

2494 
ölöe
 
	gRNG
::
	$›î©‹
 ()(Ë{ 
	`√xt
();
	}
}

2495 
ölöe
 
	gRNG
::
›î©‹
 (Ë{  ()
	`√xt
(); 
	}
}

2497 
ölöe
 
	gRNG
::
›î©‹
 (Ë{  
	`√xt
()*2.3283064365386962890625e-10f; 
	}
}

2498 
ölöe
 
	gRNG
::
›î©‹
 ()

2500 
t
 = 
	`√xt
();

2501  (((
uöt64
)
t
 << 32Ë| 
	`√xt
())*5.4210108624275221700372640043497e-20;

2502 
	}
}

2503 
ölöe
 
	gRNG
::
	$unif‹m
(
a
, 
b
Ë{ á =b ?á : ()(
	`√xt
()%(b -áË+á); 
	}
}

2504 
ölöe
 
	gRNG
::
	$unif‹m
(
a
, 
b
Ë{  (()*
this
)*(b -áË+á; 
	}
}

2505 
ölöe
 
	gRNG
::
	$unif‹m
(
a
, 
b
Ë{  (()*
this
)*(b -áË+á; 
	}
}

2507 
ölöe
 
	gTîmCrôîü
::
	$TîmCrôîü
(Ë: 
	`ty≥
(0), 
	`maxCou¡
(0), 
	$ïsû⁄
(0Ë{
	}
}

2508 
ölöe
 
	gTîmCrôîü
::
	$TîmCrôîü
(
_ty≥
, 
_maxCou¡
, 
_ïsû⁄
)

2509 : 
	`ty≥
(
_ty≥
), 
	`maxCou¡
(
_maxCou¡
), 
	$ïsû⁄
(
_ïsû⁄
Ë{
	}
}

2510 
ölöe
 
	gTîmCrôîü
::
	$TîmCrôîü
(c⁄° 
CvTîmCrôîü
& 
¸ôîü
)

2511 : 
	`ty≥
(
¸ôîü
.
ty≥
), 
	`maxCou¡
(¸ôîü.
max_ôî
), 
	$ïsû⁄
(
¸ôîü
.
ïsû⁄
Ë{
	}
}

2512 
ölöe
 
	gTîmCrôîü
::
›î©‹
 
	$CvTîmCrôîü
() const

2513 {  
	`cvTîmCrôîü
(
ty≥
, 
maxCou¡
, 
ïsû⁄
); 
	}
}

2515 
ölöe
 
uch¨
* 
	gLöeIãøt‹
::
›î©‹
 *(Ë{  
±r
; }

2516 
ölöe
 
	gLöeIãøt‹
& LöeIãøt‹::
›î©‹
 ++()

2518 
mask
 = 
îr
 < 0 ? -1 : 0;

2519 
	gîr
 +
möusDñè
 + (
∂usDñè
 & 
mask
);

2520 
	g±r
 +
möusSãp
 + (
∂usSãp
 & 
mask
);

2521  *
	gthis
;

2523 
ölöe
 
LöeIãøt‹
 
	gLöeIãøt‹
::
›î©‹
 ++()

2525 
LöeIãøt‹
 
ô
 = *
this
;

2526 ++(*
	gthis
);

2527  
	gô
;

2529 
ölöe
 
Poöt
 
	gLöeIãøt‹
::
	$pos
() const

2531 
Poöt
 
p
;

2532 
p
.
y
 = ()((
±r
 - 
±r0
)/
°ï
);

2533 
p
.
x
 = ()(((
±r
 - 
±r0
Ë-Ö.
y
*
°ï
)/
ñemSize
);

2534  
p
;

2535 
	}
}

2539 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
	$AutoBuf„r
()

2541 
±r
 = 
buf
;

2542 
size
 = 
fixed_size
;

2543 
	}
}

2545 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
	$AutoBuf„r
(
size_t
 
_size
)

2547 
±r
 = 
buf
;

2548 
size
 = 
fixed_size
;

2549 
	`Æloˇã
(
_size
);

2550 
	}
}

2552 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::~
	$AutoBuf„r
()

2553 { 
	`dóŒoˇã
(); 
	}
}

2555 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
	$Æloˇã
(
size_t
 
_size
)

2557 if(
_size
 <
size
)

2559 
	`dóŒoˇã
();

2560 if(
_size
 > 
fixed_size
)

2562 
±r
 = 
cv
::
Æloˇã
<
_Tp
>(
_size
);

2563 
size
 = 
_size
;

2565 
	}
}

2567 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
	$dóŒoˇã
()

2569 if–
±r
 !
buf
 )

2571 
cv
::
dóŒoˇã
<
_Tp
>(
±r
, 
size
);

2572 
±r
 = 
buf
;

2573 
size
 = 
fixed_size
;

2575 
	}
}

2577 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
›î©‹
 
_Tp
* ()

2578 {  
±r
; }

2580 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
›î©‹
 c⁄° 
_Tp
* () const

2581 {  
±r
; }

2586 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
	$På
(Ë: 
	`obj
(0), 
	$ªfcou¡
(0Ë{
	}
}

2587 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
	$På
(
_Tp
* 
_obj
Ë: 
	$obj
(
_obj
)

2589 if(
obj
)

2591 
ªfcou¡
 = (
_Atomic_w‹d
*)
	`Á°MÆloc
((*refcount));

2592 *
ªfcou¡
 = 1;

2595 
ªfcou¡
 = 0;

2596 
	}
}

2598 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
	$addªf
()

2599 { if–
ªfcou¡
 ) 
	`CV_XADD
‘efcou¡, 1); 
	}
}

2601 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
	$ªÀa£
()

2603 if–
ªfcou¡
 && 
	`CV_XADD
(refcount, -1) == 1 )

2605 
	`dñëe_obj
();

2606 
	`Á°Fªe
(
ªfcou¡
);

2608 
ªfcou¡
 = 0;

2609 
obj
 = 0;

2610 
	}
}

2612 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
	$dñëe_obj
()

2614 if–
obj
 ) 
dñëe
 obj;

2615 
	}
}

2617 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::~
	$På
(Ë{ 
	`ªÀa£
(); 
	}
}

2619 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
På
(c⁄° På<
_Tp
>& 
_±r
)

2621 
obj
 = 
_±r
.obj;

2622 
	gªfcou¡
 = 
_±r
.
ªfcou¡
;

2623 
addªf
();

2626 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>& På<_Tp>::
›î©‹
 = (c⁄° 
På
<
_Tp
>& 
_±r
)

2628 
_Atomic_w‹d
* 
_ªfcou¡
 = 
_±r
.
ªfcou¡
;

2629 if–
	g_ªfcou¡
 )

2630 
CV_XADD
(
_ªfcou¡
, 1);

2631 
ªÀa£
();

2632 
	gobj
 = 
_±r
.
obj
;

2633 
	gªfcou¡
 = 
_ªfcou¡
;

2634  *
	gthis
;

2637 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
	gPå
<_Tp>::
›î©‹
 -> (Ë{  
obj
; }

2638 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gPå
<_Tp>::
›î©‹
 -> (Ëc⁄° {  
obj
; }

2640 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
›î©‹
 
_Tp
* (Ë{  
obj
; }

2641 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
›î©‹
 c⁄° 
_Tp
*(Ëc⁄° {  
obj
; }

2643 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	gPå
<_Tp>::
	$em±y
(Ëc⁄° {  
obj
 =0; 
	}
}

2645 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
	gPå
<_Tp>::
På
(c⁄° På<
_Tp2
>& 
p
)

2646 : 
obj
(0), 
	$ªfcou¡
(0)

2648 i‡(
p
.
	`em±y
())

2651 
_Tp
* 
p_ˇ°ed
 = 
dy«mic_ˇ°
<_Tp*>(
p
.
obj
);

2652 i‡(!
p_ˇ°ed
)

2655 
obj
 = 
p_ˇ°ed
;

2656 
ªfcou¡
 = 
p
.refcount;

2657 
	`addªf
();

2658 
	}
}

2660 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 
	gPå
<_Tp2> På<_Tp>::
	$±r
()

2662 
På
<
_Tp2
> 
p
;

2663 if–!
obj
 )

2664  
p
;

2666 
_Tp2
* 
obj_ˇ°ed
 = 
dy«mic_ˇ°
<_Tp2*>(
obj
);

2667 i‡(!
obj_ˇ°ed
)

2668  
p
;

2670 if–
ªfcou¡
 )

2671 
	`CV_XADD
(
ªfcou¡
, 1);

2673 
p
.
obj
 = 
obj_ˇ°ed
;

2674 
p
.
ªfcou¡
 =Ñefcount;

2675  
p
;

2676 
	}
}

2678 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 c⁄° 
	gPå
<_Tp2> På<_Tp>::
	$±r
() const

2680 
På
<
_Tp2
> 
p
;

2681 if–!
obj
 )

2682  
p
;

2684 
_Tp2
* 
obj_ˇ°ed
 = 
dy«mic_ˇ°
<_Tp2*>(
obj
);

2685 i‡(!
obj_ˇ°ed
)

2686  
p
;

2688 if–
ªfcou¡
 )

2689 
	`CV_XADD
(
ªfcou¡
, 1);

2691 
p
.
obj
 = 
obj_ˇ°ed
;

2692 
p
.
ªfcou¡
 =Ñefcount;

2693  
p
;

2694 
	}
}

2698 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvM©
>::
dñëe_obj
();

2699 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gI∂Image
>::
dñëe_obj
();

2700 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvM©ND
>::
dñëe_obj
();

2701 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvS∑r£M©
>::
dñëe_obj
();

2702 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvMemSt‹age
>::
dñëe_obj
();

2703 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvFûeSt‹age
>::
dñëe_obj
();

2707 
CV_EXPORTS_W
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, 
vÆue
 );

2708 
CV_EXPORTS_W
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, 
vÆue
 );

2709 
CV_EXPORTS_W
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, 
vÆue
 );

2710 
CV_EXPORTS_W
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° såög& 
vÆue
 );

2712 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	$wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
_Tp
& 
vÆue
)

2713 { 
	`wrôe
(
fs
, 
	`°rög
(), 
vÆue
); 
	}
}

2715 
CV_EXPORTS
 
wrôeSˇœr
–
FûeSt‹age
& 
fs
, 
vÆue
 );

2716 
CV_EXPORTS
 
wrôeSˇœr
–
FûeSt‹age
& 
fs
, 
vÆue
 );

2717 
CV_EXPORTS
 
wrôeSˇœr
–
FûeSt‹age
& 
fs
, 
vÆue
 );

2718 
CV_EXPORTS
 
wrôeSˇœr
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
vÆue
 );

2720 
	gãm∂©e
<> 
ölöe
 
	$wrôe
–
FûeSt‹age
& 
fs
, c⁄° & 
vÆue
 )

2722 
	`wrôeSˇœr
(
fs
, 
vÆue
);

2723 
	}
}

2725 
	gãm∂©e
<> 
ölöe
 
	$wrôe
–
FûeSt‹age
& 
fs
, c⁄° & 
vÆue
 )

2727 
	`wrôeSˇœr
(
fs
, 
vÆue
);

2728 
	}
}

2730 
	gãm∂©e
<> 
ölöe
 
	$wrôe
–
FûeSt‹age
& 
fs
, c⁄° & 
vÆue
 )

2732 
	`wrôeSˇœr
(
fs
, 
vÆue
);

2733 
	}
}

2735 
	gãm∂©e
<> 
ölöe
 
	$wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
vÆue
 )

2737 
	`wrôeSˇœr
(
fs
, 
vÆue
);

2738 
	}
}

2740 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Poöt_
<
_Tp
>& 
±
 )

2742 
wrôe
(
fs
, 
±
.
x
);

2743 
wrôe
(
fs
, 
±
.
y
);

2746 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Poöt3_
<
_Tp
>& 
±
 )

2748 
wrôe
(
fs
, 
±
.
x
);

2749 
wrôe
(
fs
, 
±
.
y
);

2750 
wrôe
(
fs
, 
±
.
z
);

2753 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Size_
<
_Tp
>& 
sz
 )

2755 
wrôe
(
fs
, 
sz
.
width
);

2756 
wrôe
(
fs
, 
sz
.
height
);

2759 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Com∂ex
<
_Tp
>& 
c
 )

2761 
wrôe
(
fs
, 
c
.
ª
);

2762 
wrôe
(
fs
, 
c
.
im
);

2765 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Re˘_
<
_Tp
>& 
r
 )

2767 
wrôe
(
fs
, 
r
.
x
);

2768 
wrôe
(
fs
, 
r
.
y
);

2769 
wrôe
(
fs
, 
r
.
width
);

2770 
wrôe
(
fs
, 
r
.
height
);

2773 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Vec
<
_Tp
, 
˙
>& 
v
 )

2775 
	gi
 = 0; i < 
	g˙
; i++)

2776 
wrôe
(
fs
, 
v
.
vÆ
[
i
]);

2779 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Sˇœr_
<
_Tp
>& 
s
 )

2781 
wrôe
(
fs
, 
s
.
vÆ
[0]);

2782 
wrôe
(
fs
, 
s
.
vÆ
[1]);

2783 
wrôe
(
fs
, 
s
.
vÆ
[2]);

2784 
wrôe
(
fs
, 
s
.
vÆ
[3]);

2787 
ölöe
 
	$wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
R™ge
& 
r
 )

2789 
	`wrôe
(
fs
, 
r
.
°¨t
);

2790 
	`wrôe
(
fs
, 
r
.
íd
);

2791 
	}
}

2793 ˛as†
	cCV_EXPORTS
 
	gWrôeSåu˘C⁄ãxt


2795 
	gpublic
:

2796 
WrôeSåu˘C⁄ãxt
(
FûeSt‹age
& 
_fs
, c⁄° 
°rög
& 
«me
,

2797 
Êags
, c⁄° 
°rög
& 
ty≥Name
=string());

2798 ~
WrôeSåu˘C⁄ãxt
();

2799 
FûeSt‹age
* 
	gfs
;

2802 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Poöt_
<
_Tp
>& 
±
 )

2804 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2805 
wrôe
(
fs
, 
±
.
x
);

2806 
wrôe
(
fs
, 
±
.
y
);

2809 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Poöt3_
<
_Tp
>& 
±
 )

2811 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2812 
wrôe
(
fs
, 
±
.
x
);

2813 
wrôe
(
fs
, 
±
.
y
);

2814 
wrôe
(
fs
, 
±
.
z
);

2817 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Size_
<
_Tp
>& 
sz
 )

2819 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2820 
wrôe
(
fs
, 
sz
.
width
);

2821 
wrôe
(
fs
, 
sz
.
height
);

2824 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Com∂ex
<
_Tp
>& 
c
 )

2826 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2827 
wrôe
(
fs
, 
c
.
ª
);

2828 
wrôe
(
fs
, 
c
.
im
);

2831 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Re˘_
<
_Tp
>& 
r
 )

2833 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2834 
wrôe
(
fs
, 
r
.
x
);

2835 
wrôe
(
fs
, 
r
.
y
);

2836 
wrôe
(
fs
, 
r
.
width
);

2837 
wrôe
(
fs
, 
r
.
height
);

2840 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Vec
<
_Tp
, 
˙
>& 
v
 )

2842 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2843 
	gi
 = 0; i < 
	g˙
; i++)

2844 
wrôe
(
fs
, 
v
.
vÆ
[
i
]);

2847 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Sˇœr_
<
_Tp
>& 
s
 )

2849 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2850 
wrôe
(
fs
, 
s
.
vÆ
[0]);

2851 
wrôe
(
fs
, 
s
.
vÆ
[1]);

2852 
wrôe
(
fs
, 
s
.
vÆ
[2]);

2853 
wrôe
(
fs
, 
s
.
vÆ
[3]);

2856 
ölöe
 
	$wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
R™ge
& 
r
 )

2858 
WrôeSåu˘C⁄ãxt
 
	`ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2859 
	`wrôe
(
fs
, 
r
.
°¨t
);

2860 
	`wrôe
(
fs
, 
r
.
íd
);

2861 
	}
}

2863 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gnumÊag
> cœs†
	cVecWrôîProxy


2865 
	gpublic
:

2866 
VecWrôîProxy
–
FûeSt‹age
* 
_fs
 ) : 
fs
(_fs) {}

2867 
›î©‹
()(c⁄° 
ve˘‹
<
_Tp
>& 
vec
) const

2869 
size_t
 
i
, 
	gcou¡
 = 
vec
.
size
();

2870  
	gi
 = 0; i < 
	gcou¡
; i++ )

2871 
wrôe
–*
fs
, 
vec
[
i
] );

2873 
FûeSt‹age
* 
	gfs
;

2876 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gVecWrôîProxy
<_Tp,1>

2878 
	gpublic
:

2879 
VecWrôîProxy
–
FûeSt‹age
* 
_fs
 ) : 
fs
(_fs) {}

2880 
›î©‹
()(c⁄° 
ve˘‹
<
_Tp
>& 
vec
) const

2882 
_fmt
 = 
D©aTy≥
<
_Tp
>::
fmt
;

2883 
	gfmt
[] = { ()((
_fmt
>>8)+'1'), ()_fmt, '\0' };

2884 
	gfs
->
wrôeRaw
–
°rög
(
fmt
), !
vec
.
em±y
(Ë? (
uch¨
*)&vec[0] : 0, vec.
size
()*(
_Tp
) );

2886 
FûeSt‹age
* 
	gfs
;

2889 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
ve˘‹
<
_Tp
>& 
vec
 )

2891 
	gVecWrôîProxy
<
	g_Tp
, 
	gD©aTy≥
<_Tp>::
fmt
 !0> 
w
(&
fs
);

2892 
w
(
vec
);

2895 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
,

2896 c⁄° 
ve˘‹
<
_Tp
>& 
vec
 )

2898 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+(
D©aTy≥
<
_Tp
>::
fmt
 !0 ? 
CV_NODE_FLOW
 : 0));

2899 
wrôe
(
fs
, 
vec
);

2902 
CV_EXPORTS_W
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
M©
& 
vÆue
 );

2903 
CV_EXPORTS
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
S∑r£M©
& 
vÆue
 );

2905 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gFûeSt‹age
& 
	g›î©‹
 << (FûeSt‹age& 
	gfs
, c⁄° _Tp& 
	gvÆue
)

2907 if–!
	gfs
.
isO≥√d
() )

2908  
	gfs
;

2909 if–
	gfs
.
	g°©e
 =
FûeSt‹age
::
NAME_EXPECTED
 + FûeSt‹age::
INSIDE_MAP
 )

2910 
CV_Eº‹
–
CV_StsEº‹
, "NoÉlementÇame has been given" );

2911 
wrôe
–
fs
, fs.
ñ«me
, 
vÆue
 );

2912 if–
	gfs
.
	g°©e
 & 
	gFûeSt‹age
::
INSIDE_MAP
 )

2913 
fs
.
°©e
 = 
FûeSt‹age
::
NAME_EXPECTED
 + FûeSt‹age::
INSIDE_MAP
;

2914  
	gfs
;

2917 
CV_EXPORTS
 
	gFûeSt‹age
& 
	g›î©‹
 << (FûeSt‹age& 
	gfs
, c⁄° 
	g°rög
& 
	g°r
);

2919 
ölöe
 
	gFûeSt‹age
& 
	g›î©‹
 << (FûeSt‹age& 
	gfs
, c⁄° * 
	g°r
)

2920 {  (
	gfs
 << 
°rög
(
°r
)); }

2922 
ölöe
 
	gFûeSt‹age
& 
	g›î©‹
 << (FûeSt‹age& 
	gfs
, * 
	gvÆue
)

2923 {  (
	gfs
 << 
°rög
(
vÆue
)); }

2925 
ölöe
 
	gFûeNode
::
	$FûeNode
(Ë: 
	`fs
(0), 
	$node
(0Ë{
	}
}

2926 
ölöe
 
	gFûeNode
::
	$FûeNode
(c⁄° 
CvFûeSt‹age
* 
_fs
, c⁄° 
CvFûeNode
* 
_node
)

2927 : 
	`fs
(
_fs
), 
	$node
(
_node
Ë{
	}
}

2929 
ölöe
 
	gFûeNode
::
	$FûeNode
(c⁄° 
FûeNode
& 
_node
Ë: 
	`fs
(_node.
fs
), 
	$node
(
_node
.
node
Ë{
	}
}

2931 
ölöe
 
	gFûeNode
::
	$ty≥
(Ëc⁄° {  !
node
 ? 
NONE
 : (node->
èg
 & 
TYPE_MASK
); 
	}
}

2932 
ölöe
 
boﬁ
 
	gFûeNode
::
	$em±y
(Ëc⁄° {  
node
 =0; 
	}
}

2933 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isN⁄e
(Ëc⁄° {  
	`ty≥
(Ë=
NONE
; 
	}
}

2934 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isSeq
(Ëc⁄° {  
	`ty≥
(Ë=
SEQ
; 
	}
}

2935 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isM≠
(Ëc⁄° {  
	`ty≥
(Ë=
MAP
; 
	}
}

2936 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isI¡
(Ëc⁄° {  
	`ty≥
(Ë=
INT
; 
	}
}

2937 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isRól
(Ëc⁄° {  
	`ty≥
(Ë=
REAL
; 
	}
}

2938 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isSåög
(Ëc⁄° {  
	`ty≥
(Ë=
STR
; 
	}
}

2939 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isNamed
(Ëc⁄° {  !
node
 ? 
Ál£
 : (node->
èg
 & 
NAMED
Ë!0; 
	}
}

2940 
ölöe
 
size_t
 
	gFûeNode
::
	$size
() const

2942 
t
 = 
	`ty≥
();

2943  
t
 =
MAP
 ? (
size_t
)((
CvSë
*)
node
->
d©a
.
m≠
)->
a˘ive_cou¡
 :

2944 
t
 =
SEQ
 ? (
size_t
)
node
->
d©a
.
£q
->
tŸÆ
 : (size_t)!
	`isN⁄e
();

2945 
	}
}

2947 
ölöe
 
CvFûeNode
* 
	gFûeNode
::
›î©‹
 *(Ë{  (CvFûeNode*)
node
; }

2948 
ölöe
 c⁄° 
CvFûeNode
* 
	gFûeNode
::
›î©‹
* (Ëc⁄° {  
node
; }

2950 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, & 
vÆue
, 
deÁu…_vÆue
)

2952 
vÆue
 = !
node
.nodê? 
deÁu…_vÆue
 :

2953 
	`CV_NODE_IS_INT
(
node
.node->
èg
Ë?Çode.node->
d©a
.
i
 :

2954 
	`CV_NODE_IS_REAL
(
node
.node->
èg
Ë? 
	`cvRound
“ode.node->
d©a
.
f
) : 0x7fffffff;

2955 
	}
}

2957 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
boﬁ
& 
vÆue
, boﬁ 
deÁu…_vÆue
)

2959 
ãmp
; 
	`ªad
(
node
,Åemp, ()
deÁu…_vÆue
);

2960 
vÆue
 = 
ãmp
 != 0;

2961 
	}
}

2963 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
uch¨
& 
vÆue
, uch¨ 
deÁu…_vÆue
)

2965 
ãmp
; 
	`ªad
(
node
,Åemp, ()
deÁu…_vÆue
);

2966 
vÆue
 = 
ßtuøã_ˇ°
<
uch¨
>(
ãmp
);

2967 
	}
}

2969 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
sch¨
& 
vÆue
, sch¨ 
deÁu…_vÆue
)

2971 
ãmp
; 
	`ªad
(
node
,Åemp, ()
deÁu…_vÆue
);

2972 
vÆue
 = 
ßtuøã_ˇ°
<
sch¨
>(
ãmp
);

2973 
	}
}

2975 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
ush‹t
& 
vÆue
, ush‹à
deÁu…_vÆue
)

2977 
ãmp
; 
	`ªad
(
node
,Åemp, ()
deÁu…_vÆue
);

2978 
vÆue
 = 
ßtuøã_ˇ°
<
ush‹t
>(
ãmp
);

2979 
	}
}

2981 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, & 
vÆue
, 
deÁu…_vÆue
)

2983 
ãmp
; 
	`ªad
(
node
,Åemp, ()
deÁu…_vÆue
);

2984 
vÆue
 = 
ßtuøã_ˇ°
<>(
ãmp
);

2985 
	}
}

2987 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, & 
vÆue
, 
deÁu…_vÆue
)

2989 
vÆue
 = !
node
.nodê? 
deÁu…_vÆue
 :

2990 
	`CV_NODE_IS_INT
(
node
.node->
èg
Ë? (Íode.node->
d©a
.
i
 :

2991 
	`CV_NODE_IS_REAL
(
node
.node->
èg
Ë? (Íode.node->
d©a
.
f
 : 1e30f;

2992 
	}
}

2994 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, & 
vÆue
, 
deÁu…_vÆue
)

2996 
vÆue
 = !
node
.nodê? 
deÁu…_vÆue
 :

2997 
	`CV_NODE_IS_INT
(
node
.node->
èg
Ë? (Íode.node->
d©a
.
i
 :

2998 
	`CV_NODE_IS_REAL
(
node
.node->
èg
Ë?Çode.node->
d©a
.
f
 : 1e300;

2999 
	}
}

3001 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
°rög
& 
vÆue
, c⁄° såög& 
deÁu…_vÆue
)

3003 
vÆue
 = !
node
.nodê? 
deÁu…_vÆue
 : 
	`CV_NODE_IS_STRING
“ode.node->
èg
Ë? 
	`°rög
“ode.node->
d©a
.
°r
.
±r
) : string("");

3004 
	}
}

3006 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Poöt_
<
_Tp
>& 
vÆue
, c⁄° Poöt_<_Tp>& 
deÁu…_vÆue
)

3008 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3009 
	gvÆue
 = 
ãmp
.
size
(Ë!2 ? 
deÁu…_vÆue
 : 
Poöt_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]));

3012 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Poöt3_
<
_Tp
>& 
vÆue
, c⁄° Poöt3_<_Tp>& 
deÁu…_vÆue
)

3014 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3015 
	gvÆue
 = 
ãmp
.
size
(Ë!3 ? 
deÁu…_vÆue
 : 
Poöt3_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]),

3016 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[2]));

3019 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Size_
<
_Tp
>& 
vÆue
, c⁄° Size_<_Tp>& 
deÁu…_vÆue
)

3021 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3022 
	gvÆue
 = 
ãmp
.
size
(Ë!2 ? 
deÁu…_vÆue
 : 
Size_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]));

3025 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Com∂ex
<
_Tp
>& 
vÆue
, c⁄° Com∂ex<_Tp>& 
deÁu…_vÆue
)

3027 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3028 
	gvÆue
 = 
ãmp
.
size
(Ë!2 ? 
deÁu…_vÆue
 : 
Com∂ex
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]));

3031 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Re˘_
<
_Tp
>& 
vÆue
, c⁄° Re˘_<_Tp>& 
deÁu…_vÆue
)

3033 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3034 
	gvÆue
 = 
ãmp
.
size
(Ë!4 ? 
deÁu…_vÆue
 : 
Re˘_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]),

3035 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[2]), saturate_cast<_Tp>(temp[3]));

3038 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Vec
<
_Tp
, 
˙
>& 
vÆue
, c⁄° Vec<_Tp, cn>& 
deÁu…_vÆue
)

3040 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3041 
	gvÆue
 = 
ãmp
.
size
(Ë!
˙
 ? 
deÁu…_vÆue
 : 
Vec
<
_Tp
, 
	g˙
>(&
	gãmp
[0]);

3044 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Sˇœr_
<
_Tp
>& 
vÆue
, c⁄° Sˇœr_<_Tp>& 
deÁu…_vÆue
)

3046 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3047 
	gvÆue
 = 
ãmp
.
size
(Ë!4 ? 
deÁu…_vÆue
 : 
Sˇœr_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]),

3048 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[2]), saturate_cast<_Tp>(temp[3]));

3051 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
R™ge
& 
vÆue
, c⁄° R™ge& 
deÁu…_vÆue
)

3053 
Poöt2i
 
	`ãmp
(
vÆue
.
°¨t
, vÆue.
íd
); c⁄° Poöt2ò
deÁu…_ãmp
 = 
	`Poöt2i
(
deÁu…_vÆue
.start, default_value.end);

3054 
	`ªad
(
node
, 
ãmp
, 
deÁu…_ãmp
);

3055 
vÆue
.
°¨t
 = 
ãmp
.
x
; vÆue.
íd
 =Åemp.
y
;

3056 
	}
}

3058 
CV_EXPORTS_W
 
ªad
(c⁄° 
FûeNode
& 
node
, 
M©
& 
m©
, c⁄° M©& 
deÁu…_m©
=Mat() );

3059 
CV_EXPORTS
 
ªad
(c⁄° 
FûeNode
& 
node
, 
S∑r£M©
& 
m©
, c⁄° S∑r£M©& 
deÁu…_m©
=SparseMat() );

3061 
ölöe
 
	gFûeNode
::
›î©‹
 () const

3063 
vÆue
;

3064 
	`ªad
(*
this
, 
vÆue
, 0);

3065  
vÆue
;

3066 
	}
}

3067 
ölöe
 
	gFûeNode
::
›î©‹
 () const

3069 
vÆue
;

3070 
	`ªad
(*
this
, 
vÆue
, 0.f);

3071  
vÆue
;

3072 
	}
}

3073 
ölöe
 
	gFûeNode
::
›î©‹
 () const

3075 
vÆue
;

3076 
	`ªad
(*
this
, 
vÆue
, 0.);

3077  
vÆue
;

3078 
	}
}

3079 
ölöe
 
	gFûeNode
::
›î©‹
 
	$°rög
() const

3081 
°rög
 
vÆue
;

3082 
	`ªad
(*
this
, 
vÆue
, value);

3083  
vÆue
;

3084 
	}
}

3086 
ölöe
 
	gFûeNode
::
	$ªadRaw
–c⁄° 
°rög
& 
fmt
, 
uch¨
* 
vec
, 
size_t
 
Àn
 ) const

3088 
	`begö
().
	`ªadRaw
–
fmt
, 
vec
, 
Àn
 );

3089 
	}
}

3091 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gnumÊag
> cœs†
	cVecRódîProxy


3093 
	gpublic
:

3094 
VecRódîProxy
–
FûeNodeIãøt‹
* 
_ô
 ) : 
ô
(_it) {}

3095 
›î©‹
()(
ve˘‹
<
_Tp
>& 
vec
, 
size_t
 
	gcou¡
) const

3097 
	gcou¡
 = 
°d
::
mö
(
cou¡
, 
ô
->
ªmaöög
);

3098 
	gvec
.
ªsize
(
cou¡
);

3099  
size_t
 
	gi
 = 0; i < 
	gcou¡
; i++, ++(*
	gô
) )

3100 
ªad
(**
ô
, 
vec
[
i
], 
_Tp
());

3102 
FûeNodeIãøt‹
* 
	gô
;

3105 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gVecRódîProxy
<_Tp,1>

3107 
	gpublic
:

3108 
VecRódîProxy
–
FûeNodeIãøt‹
* 
_ô
 ) : 
ô
(_it) {}

3109 
›î©‹
()(
ve˘‹
<
_Tp
>& 
vec
, 
size_t
 
	gcou¡
) const

3111 
size_t
 
	gªmaöög
 = 
ô
->
ªmaöög
, 
	g˙
 = 
D©aTy≥
<
_Tp
>::
ch™√ls
;

3112 
	g_fmt
 = 
D©aTy≥
<
_Tp
>::
fmt
;

3113 
	gfmt
[] = { ()((
_fmt
>>8)+'1'), ()_fmt, '\0' };

3114 
size_t
 
	gªmaöög1
 = 
ªmaöög
/
˙
;

3115 
	gcou¡
 = 
cou¡
 < 
ªmaöög1
 ? count :Ñemaining1;

3116 
	gvec
.
ªsize
(
cou¡
);

3117 
	gô
->
ªadRaw
–
°rög
(
fmt
), !
vec
.
em±y
(Ë? (
uch¨
*)&vec[0] : 0, 
cou¡
*(
_Tp
) );

3119 
FûeNodeIãøt‹
* 
	gô
;

3122 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 

3123 
ªad
–
FûeNodeIãøt‹
& 
ô
, 
ve˘‹
<
_Tp
>& 
vec
, 
size_t
 
maxCou¡
=(size_t)
INT_MAX
 )

3125 
VecRódîProxy
<
_Tp
, 
D©aTy≥
<_Tp>::
fmt
 !0> 
r
(&
ô
);

3126 
r
(
vec
, 
maxCou¡
);

3129 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 

3130 
ªad
–c⁄° 
FûeNode
& 
node
, 
ve˘‹
<
_Tp
>& 
vec
, c⁄° ve˘‹<_Tp>& 
deÁu…_vÆue
=vector<_Tp>() )

3132 if(!
node
.node)

3133 
vec
 = 
deÁu…_vÆue
;

3136 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
();

3137 
ªad
–
ô
, 
vec
 );

3141 
ölöe
 
FûeNodeIãøt‹
 
	gFûeNode
::
	$begö
() const

3143  
	`FûeNodeIãøt‹
(
fs
, 
node
);

3144 
	}
}

3146 
ölöe
 
FûeNodeIãøt‹
 
	gFûeNode
::
	$íd
() const

3148  
	`FûeNodeIãøt‹
(
fs
, 
node
, 
	`size
());

3149 
	}
}

3151 
ölöe
 
FûeNode
 
	gFûeNodeIãøt‹
::
›î©‹
 *() const

3152 {  
FûeNode
(
fs
, (c⁄° 
CvFûeNode
*)(*)
ªadî
.
±r
); }

3154 
ölöe
 
FûeNode
 
	gFûeNodeIãøt‹
::
›î©‹
 ->() const

3155 {  
FûeNode
(
fs
, (c⁄° 
CvFûeNode
*)(*)
ªadî
.
±r
); }

3157 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gFûeNodeIãøt‹
& 
	g›î©‹
 >> (FûeNodeIãøt‹& 
	gô
, _Tp& 
	gvÆue
)

3158 { 
ªad
–*
ô
, 
vÆue
, 
_Tp
());  ++
	gô
; }

3160 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


3161 
	gFûeNodeIãøt‹
& 
	g›î©‹
 >> (FûeNodeIãøt‹& 
	gô
, 
	gve˘‹
<
	g_Tp
>& 
	gvec
)

3163 
	gVecRódîProxy
<
	g_Tp
, 
	gD©aTy≥
<_Tp>::
fmt
 !0> 
r
(&
ô
);

3164 
r
(
vec
, (
size_t
)
INT_MAX
);

3165  
	gô
;

3168 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g›î©‹
 >> (c⁄° 
	gFûeNode
& 
	gn
, _Tp& 
	gvÆue
)

3169 { 
ªad
–
n
, 
vÆue
, 
_Tp
()); }

3171 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g›î©‹
 >> (c⁄° 
	gFûeNode
& 
	gn
, 
	gve˘‹
<_Tp>& 
	gvec
)

3172 { 
FûeNodeIãøt‹
 
	gô
 = 
n
.
begö
(); ià>> 
	gvec
; }

3174 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
FûeNodeIãøt‹
& 
ô1
, c⁄° 
	gFûeNodeIãøt‹
& 
	gô2
)

3176  
	gô1
.
	gfs
 =
ô2
.
fs
 && 
ô1
.
c⁄èöî
 == it2.container &&

3177 
ô1
.
ªadî
.
±r
 =
ô2
.ªadî.±∏&& it1.
ªmaöög
 == it2.remaining;

3180 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
FûeNodeIãøt‹
& 
ô1
, c⁄° 
	gFûeNodeIãøt‹
& 
	gô2
)

3182  !(
	gô1
 =
ô2
);

3185 
ölöe
 
±rdiff_t
 
	g›î©‹
 - (c⁄° 
	gFûeNodeIãøt‹
& 
	gô1
, c⁄° FûeNodeIãøt‹& 
	gô2
)

3187  
	gô2
.
	gªmaöög
 - 
	gô1
.remaining;

3190 
ölöe
 
boﬁ
 
	g›î©‹
 < (c⁄° 
	gFûeNodeIãøt‹
& 
	gô1
, c⁄° FûeNodeIãøt‹& 
	gô2
)

3192  
	gô1
.
	gªmaöög
 > 
	gô2
.remaining;

3195 
ölöe
 
FûeNode
 
	gFûeSt‹age
::
	$gëFú°T›LevñNode
() const

3197 
FûeNode
 
r
 = 
	`roŸ
();

3198 
FûeNodeIãøt‹
 
ô
 = 
r
.
	`begö
();

3199  
ô
 !
r
.
	`íd
(Ë? *ô : 
	`FûeNode
();

3200 
	}
}

3204 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	$gcd
(
_Tp
 
a
, _T∞
b
)

3206 if–
a
 < 
b
 )

3207 
°d
::
	`sw≠
(
a
, 
b
);

3208  
b
 > 0 )

3210 
_Tp
 
r
 = 
a
 % 
b
;

3211 
a
 = 
b
;

3212 
b
 = 
r
;

3214  
a
;

3215 
	}
}

3257 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
˛ass
 
	g_LT
> 
s‹t
–
ve˘‹
<
_Tp
>& 
vec
, 
_LT
 
LT
=
	$_LT
() )

3259 
is‹t_thªsh
 = 7;

3260 
•
 = 0;

3264 
_Tp
 *
lb
;

3265 
_Tp
 *
ub
;

3266 } 
°ack
[48];

3268 
size_t
 
tŸÆ
 = 
vec
.
	`size
();

3270 if–
tŸÆ
 <= 1 )

3273 
_Tp
* 
¨r
 = &
vec
[0];

3274 
°ack
[0].
lb
 = 
¨r
;

3275 
°ack
[0].
ub
 = 
¨r
 + (
tŸÆ
 - 1);

3277  
•
 >= 0 )

3279 
_Tp
* 
À·
 = 
°ack
[
•
].
lb
;

3280 
_Tp
* 
right
 = 
°ack
[
•
--].
ub
;

3284 
i
, 
n
 = ()(
right
 - 
À·
Ë+ 1, 
m
;

3285 
_Tp
* 
±r
;

3286 
_Tp
* 
±r2
;

3288 if–
n
 <
is‹t_thªsh
 )

3290 
ö£π_s‹t
:

3291  
±r
 = 
À·
 + 1;Öå <
right
;Ötr++ )

3293  
±r2
 = 
±r
;Öå2 > 
À·
 && 
	`LT
(ptr2[0],ptr2[-1]);Ötr2--)

3294 
°d
::
	`sw≠
–
±r2
[0],Ötr2[-1] );

3300 
_Tp
* 
À·0
;

3301 
_Tp
* 
À·1
;

3302 
_Tp
* 
right0
;

3303 
_Tp
* 
right1
;

3304 
_Tp
* 
pivŸ
;

3305 
_Tp
* 
a
;

3306 
_Tp
* 
b
;

3307 
_Tp
* 
c
;

3308 
sw≠_˙t
 = 0;

3310 
À·0
 = 
À·
;

3311 
right0
 = 
right
;

3312 
pivŸ
 = 
À·
 + (
n
/2);

3314 if–
n
 > 40 )

3316 
d
 = 
n
 / 8;

3317 
a
 = 
À·
, 
b
 =Üe· + 
d
, 
c
 =Üeft + 2*d;

3318 
À·
 = 
	`LT
(*
a
, *
b
Ë? (LT(*b, *
c
) ? b : (LT(*a, *c) ? c :á))

3319 : (
	`LT
(*
c
, *
b
Ë? b : (LT(*
a
, *c) ?á : c));

3321 
a
 = 
pivŸ
 - 
d
, 
b
 =ÖivŸ, 
c
 =Öivot + d;

3322 
pivŸ
 = 
	`LT
(*
a
, *
b
Ë? (LT(*b, *
c
) ? b : (LT(*a, *c) ? c :á))

3323 : (
	`LT
(*
c
, *
b
Ë? b : (LT(*
a
, *c) ?á : c));

3325 
a
 = 
right
 - 2*
d
, 
b
 =Ñighà- d, 
c
 =Ñight;

3326 
right
 = 
	`LT
(*
a
, *
b
Ë? (LT(*b, *
c
) ? b : (LT(*a, *c) ? c :á))

3327 : (
	`LT
(*
c
, *
b
Ë? b : (LT(*
a
, *c) ?á : c));

3330 
a
 = 
À·
, 
b
 = 
pivŸ
, 
c
 = 
right
;

3331 
pivŸ
 = 
	`LT
(*
a
, *
b
Ë? (LT(*b, *
c
) ? b : (LT(*a, *c) ? c :á))

3332 : (
	`LT
(*
c
, *
b
Ë? b : (LT(*
a
, *c) ?á : c));

3333 if–
pivŸ
 !
À·0
 )

3335 
°d
::
	`sw≠
–*
pivŸ
, *
À·0
 );

3336 
pivŸ
 = 
À·0
;

3338 
À·
 = 
À·1
 = 
À·0
 + 1;

3339 
right
 = 
right1
 = 
right0
;

3343  
À·
 <
right
 && !
	`LT
(*
pivŸ
, *left) )

3345 if–!
	`LT
(*
À·
, *
pivŸ
) )

3347 if–
À·
 > 
À·1
 )

3348 
°d
::
	`sw≠
–*
À·1
, *
À·
 );

3349 
sw≠_˙t
 = 1;

3350 
À·1
++;

3352 
À·
++;

3355  
À·
 <
right
 && !
	`LT
(*right, *
pivŸ
) )

3357 if–!
	`LT
(*
pivŸ
, *
right
) )

3359 if–
right
 < 
right1
 )

3360 
°d
::
	`sw≠
–*
right1
, *
right
 );

3361 
sw≠_˙t
 = 1;

3362 
right1
--;

3364 
right
--;

3367 if–
À·
 > 
right
 )

3369 
°d
::
	`sw≠
–*
À·
, *
right
 );

3370 
sw≠_˙t
 = 1;

3371 
À·
++;

3372 
right
--;

3375 if–
sw≠_˙t
 == 0 )

3377 
À·
 = 
À·0
, 
right
 = 
right0
;

3378 
ö£π_s‹t
;

3381 
n
 = 
°d
::
	`mö
–()(
À·1
 - 
À·0
), ()(
À·
 -Üeft1) );

3382  
i
 = 0; i < 
n
; i++ )

3383 
°d
::
	`sw≠
–
À·0
[
i
], 
À·
[i-
n
] );

3385 
n
 = 
°d
::
	`mö
–()(
right0
 - 
right1
), ()‘ight1 - 
right
) );

3386  
i
 = 0; i < 
n
; i++ )

3387 
°d
::
	`sw≠
–
À·
[
i
], 
right0
[i-
n
+1] );

3388 
n
 = ()(
À·
 - 
À·1
);

3389 
m
 = ()(
right1
 - 
right
);

3390 if–
n
 > 1 )

3392 if–
m
 > 1 )

3394 if–
n
 > 
m
 )

3396 
°ack
[++
•
].
lb
 = 
À·0
;

3397 
°ack
[
•
].
ub
 = 
À·0
 + 
n
 - 1;

3398 
À·
 = 
right0
 - 
m
 + 1, 
right
 =Ñight0;

3402 
°ack
[++
•
].
lb
 = 
right0
 - 
m
 + 1;

3403 
°ack
[
•
].
ub
 = 
right0
;

3404 
À·
 = 
À·0
, 
right
 =Üe·0 + 
n
 - 1;

3408 
À·
 = 
À·0
, 
right
 =Üe·0 + 
n
 - 1;

3410 if–
m
 > 1 )

3411 
À·
 = 
right0
 - 
m
 + 1, 
right
 =Ñight0;

3417 
	}
}

3419 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cLessTh™


3421 
	gpublic
:

3422 
boﬁ
 
›î©‹
()(c⁄° 
_Tp
& 
a
, c⁄° 
	g_Tp
& 
	gb
Ëc⁄° {  
	ga
 < b; }

3425 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cGª©îEq


3427 
	gpublic
:

3428 
boﬁ
 
›î©‹
()(c⁄° 
_Tp
& 
a
, c⁄° 
	g_Tp
& 
	gb
Ëc⁄° {  
	ga
 >
b
; }

3431 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cLessTh™Idx


3433 
	gpublic
:

3434 
LessTh™Idx
–c⁄° 
_Tp
* 
_¨r
 ) : 
¨r
(_arr) {}

3435 
boﬁ
 
›î©‹
()(
a
, 
	gb
Ëc⁄° {  
	g¨r
[a] <áº[
b
]; }

3436 c⁄° 
_Tp
* 
	g¨r
;

3439 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cGª©îEqIdx


3441 
	gpublic
:

3442 
Gª©îEqIdx
–c⁄° 
_Tp
* 
_¨r
 ) : 
¨r
(_arr) {}

3443 
boﬁ
 
›î©‹
()(
a
, 
	gb
Ëc⁄° {  
	g¨r
[a] >
¨r
[
b
]; }

3444 c⁄° 
_Tp
* 
	g¨r
;

3454 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
˛ass
 
	g_EqPªdiˇã
> 

3455 
∑πôi⁄
–c⁄° 
ve˘‹
<
_Tp
>& 
_vec
, ve˘‹<>& 
œbñs
,

3456 
_EqPªdiˇã
 
¥ediˇã
=
	$_EqPªdiˇã
())

3458 
i
, 
j
, 
N
 = ()
_vec
.
	`size
();

3459 c⁄° 
_Tp
* 
vec
 = &
_vec
[0];

3461 c⁄° 
PARENT
=0;

3462 c⁄° 
RANK
=1;

3464 
ve˘‹
<> 
	`_nodes
(
N
*2);

3465 (*
nodes
)[2] = ((*)[2])&
_nodes
[0];

3468 
i
 = 0; i < 
N
; i++)

3470 
nodes
[
i
][
PARENT
]=-1;

3471 
nodes
[
i
][
RANK
] = 0;

3475  
i
 = 0; i < 
N
; i++ )

3477 
roŸ
 = 
i
;

3480  
nodes
[
roŸ
][
PARENT
] >= 0 )

3481 
roŸ
 = 
nodes
[roŸ][
PARENT
];

3483  
j
 = 0; j < 
N
; j++ )

3485 if–
i
 =
j
 || !
	`¥ediˇã
(
vec
[i], vec[j]))

3487 
roŸ2
 = 
j
;

3489  
nodes
[
roŸ2
][
PARENT
] >= 0 )

3490 
roŸ2
 = 
nodes
[roŸ2][
PARENT
];

3492 if–
roŸ2
 !
roŸ
 )

3495 
ønk
 = 
nodes
[
roŸ
][
RANK
], 
ønk2
 =Çodes[
roŸ2
][RANK];

3496 if–
ønk
 > 
ønk2
 )

3497 
nodes
[
roŸ2
][
PARENT
] = 
roŸ
;

3500 
nodes
[
roŸ
][
PARENT
] = 
roŸ2
;

3501 
nodes
[
roŸ2
][
RANK
] +
ønk
 =
ønk2
;

3502 
roŸ
 = 
roŸ2
;

3504 
	`as£π
–
nodes
[
roŸ
][
PARENT
] < 0 );

3506 
k
 = 
j
, 
∑ª¡
;

3509  (
∑ª¡
 = 
nodes
[
k
][
PARENT
]) >= 0 )

3511 
nodes
[
k
][
PARENT
] = 
roŸ
;

3512 
k
 = 
∑ª¡
;

3516 
k
 = 
i
;

3517  (
∑ª¡
 = 
nodes
[
k
][
PARENT
]) >= 0 )

3519 
nodes
[
k
][
PARENT
] = 
roŸ
;

3520 
k
 = 
∑ª¡
;

3527 
œbñs
.
	`ªsize
(
N
);

3528 
n˛as£s
 = 0;

3530  
i
 = 0; i < 
N
; i++ )

3532 
roŸ
 = 
i
;

3533  
nodes
[
roŸ
][
PARENT
] >= 0 )

3534 
roŸ
 = 
nodes
[roŸ][
PARENT
];

3536 if–
nodes
[
roŸ
][
RANK
] >= 0 )

3537 
nodes
[
roŸ
][
RANK
] = ~
n˛as£s
++;

3538 
œbñs
[
i
] = ~
nodes
[
roŸ
][
RANK
];

3541  
n˛as£s
;

3542 
	}
}

3548 
CV_EXPORTS
 
sch¨
* 
£qPush
–
CvSeq
* 
£q
, c⁄° * 
ñemít
=0);

3549 
CV_EXPORTS
 
sch¨
* 
£qPushFr⁄t
–
CvSeq
* 
£q
, c⁄° * 
ñemít
=0);

3550 
CV_EXPORTS
 
£qP›
–
CvSeq
* 
£q
, * 
ñemít
=0);

3551 
CV_EXPORTS
 
£qP›Fr⁄t
–
CvSeq
* 
£q
, * 
ñemít
=0);

3552 
CV_EXPORTS
 
£qP›Mu…i
–
CvSeq
* 
£q
, * 
ñemíts
,

3553 
cou¡
, 
ö_‰⁄t
=0 );

3554 
CV_EXPORTS
 
£qRemove
–
CvSeq
* 
£q
, 
ödex
 );

3555 
CV_EXPORTS
 
˛órSeq
–
CvSeq
* 
£q
 );

3556 
CV_EXPORTS
 
sch¨
* 
gëSeqEÀm
–c⁄° 
CvSeq
* 
£q
, 
ödex
 );

3557 
CV_EXPORTS
 
£qRemoveSli˚
–
CvSeq
* 
£q
, 
CvSli˚
 
¶i˚
 );

3558 
CV_EXPORTS
 
£qIn£πSli˚
–
CvSeq
* 
£q
, 
bef‹e_ödex
, c⁄° 
CvAº
* 
‰om_¨r
 );

3560 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$Seq
(Ë: 
	$£q
(0Ë{
	}
}

3561 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
Seq
<_Tp>::
	$Seq
–c⁄° 
CvSeq
* 
_£q
 ) : 
	`£q
((CvSeq*)_seq)

3563 
	`CV_As£π
(!
_£q
 || _£q->
ñem_size
 =(
_Tp
));

3564 
	}
}

3566 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$Seq
–
MemSt‹age
& 
°‹age
,

3567 
hódîSize
 )

3569 
	`CV_As£π
(
hódîSize
 >()(
CvSeq
));

3570 
£q
 = 
	`cvCª©eSeq
(
D©aTy≥
<
_Tp
>::
ty≥
, 
hódîSize
, (_Tp), 
°‹age
);

3571 
	}
}

3573 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gSeq
<_Tp>::
›î©‹
 [](
idx
)

3574 {  *(
_Tp
*)
gëSeqEÀm
(
£q
, 
idx
); }

3576 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gSeq
<_Tp>::
›î©‹
 [](
idx
) const

3577 {  *(
_Tp
*)
gëSeqEÀm
(
£q
, 
idx
); }

3579 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp> 
	gSeq
<_Tp>::
	$begö
() const

3580 {  
SeqIãøt‹
<
_Tp
>(*
this
); 
	}
}

3582 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp> 
	gSeq
<_Tp>::
	$íd
() const

3583 {  
SeqIãøt‹
<
_Tp
>(*
this
, 
åue
); 
	}
}

3585 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gSeq
<_Tp>::
	$size
() const

3586 {  
£q
 ? seq->
tŸÆ
 : 0; 
	}
}

3588 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ty≥
() const

3589 {  
£q
 ? 
	`CV_MAT_TYPE
(£q->
Êags
Ë: 0; 
	}
}

3591 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$dïth
() const

3592 {  
£q
 ? 
	`CV_MAT_DEPTH
(£q->
Êags
Ë: 0; 
	}
}

3594 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ch™√ls
() const

3595 {  
£q
 ? 
	`CV_MAT_CN
(£q->
Êags
Ë: 0; 
	}
}

3597 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gSeq
<_Tp>::
	$ñemSize
() const

3598 {  
£q
 ? seq->
ñem_size
 : 0; 
	}
}

3600 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gSeq
<_Tp>::
	$ödex
(c⁄° 
_Tp
& 
ñem
) const

3601 {  
	`cvSeqEÀmIdx
(
£q
, &
ñem
); 
	}
}

3603 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$push_back
(c⁄° 
_Tp
& 
ñem
)

3604 { 
	`cvSeqPush
(
£q
, &
ñem
); 
	}
}

3606 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$push_‰⁄t
(c⁄° 
_Tp
& 
ñem
)

3607 { 
	`cvSeqPushFr⁄t
(
£q
, &
ñem
); 
	}
}

3609 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$push_back
(c⁄° 
_Tp
* 
ñem
, 
size_t
 
cou¡
)

3610 { 
	`cvSeqPushMu…i
(
£q
, 
ñem
, ()
cou¡
, 0); 
	}
}

3612 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$push_‰⁄t
(c⁄° 
_Tp
* 
ñem
, 
size_t
 
cou¡
)

3613 { 
	`cvSeqPushMu…i
(
£q
, 
ñem
, ()
cou¡
, 1); 
	}
}

3615 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gSeq
<_Tp>::
	$back
()

3616 {  *(
_Tp
*)
	`gëSeqEÀm
(
£q
, -1); 
	}
}

3618 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gSeq
<_Tp>::
	$back
() const

3619 {  *(c⁄° 
_Tp
*)
	`gëSeqEÀm
(
£q
, -1); 
	}
}

3621 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gSeq
<_Tp>::
	$‰⁄t
()

3622 {  *(
_Tp
*)
	`gëSeqEÀm
(
£q
, 0); 
	}
}

3624 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gSeq
<_Tp>::
	$‰⁄t
() const

3625 {  *(c⁄° 
_Tp
*)
	`gëSeqEÀm
(
£q
, 0); 
	}
}

3627 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	gSeq
<_Tp>::
	$em±y
() const

3628 {  !
£q
 || seq->
tŸÆ
 =0; 
	}
}

3630 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$˛ór
()

3631 { if(
£q
Ë
	`˛órSeq
(£q); 
	}
}

3633 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$p›_back
()

3634 { 
	`£qP›
(
£q
); 
	}
}

3636 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$p›_‰⁄t
()

3637 { 
	`£qP›Fr⁄t
(
£q
); 
	}
}

3639 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$p›_back
(
_Tp
* 
ñem
, 
size_t
 
cou¡
)

3640 { 
	`£qP›Mu…i
(
£q
, 
ñem
, ()
cou¡
, 0); 
	}
}

3642 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$p›_‰⁄t
(
_Tp
* 
ñem
, 
size_t
 
cou¡
)

3643 { 
	`£qP›Mu…i
(
£q
, 
ñem
, ()
cou¡
, 1); 
	}
}

3645 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ö£π
(
idx
, c⁄° 
_Tp
& 
ñem
)

3646 { 
	`£qIn£π
(
£q
, 
idx
, &
ñem
); 
	}
}

3648 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ö£π
(
idx
, c⁄° 
_Tp
* 
ñems
, 
size_t
 
cou¡
)

3650 
CvM©
 
m
 = 
	`cvM©
(1, 
cou¡
, 
D©aTy≥
<
_Tp
>::
ty≥
, 
ñems
);

3651 
	`£qIn£πSli˚
(
£q
, 
idx
, &
m
);

3652 
	}
}

3654 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ªmove
(
idx
)

3655 { 
	`£qRemove
(
£q
, 
idx
); 
	}
}

3657 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ªmove
(c⁄° 
R™ge
& 
r
)

3658 { 
	`£qRemoveSli˚
(
£q
, 
r
); 
	}
}

3660 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
c›yTo
(
ve˘‹
<
_Tp
>& 
vec
, c⁄° 
R™ge
& 
ønge
) const

3662 
size_t
 
	gÀn
 = !
£q
 ? 0 : 
ønge
 =
R™ge
::
Æl
(Ë? seq->
tŸÆ
 :Ñ™ge.
íd
 -Ñ™ge.
°¨t
;

3663 
	gvec
.
ªsize
(
Àn
);

3664 if–
	g£q
 && 
	gÀn
 )

3665 
cvCvtSeqToAºay
(
£q
, &
vec
[0], 
ønge
);

3668 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
›î©‹
 
ve˘‹
<
_Tp
>() const

3670 
ve˘‹
<
_Tp
> 
vec
;

3671 
c›yTo
(
vec
);

3672  
	gvec
;

3675 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>::
	$SeqIãøt‹
()

3676 { 
	`mem£t
(
this
, 0, (*this)); 
	}
}

3678 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>::
SeqIãøt‹
(c⁄° 
Seq
<
_Tp
>& 
_£q
, 
boﬁ
 
£ekEnd
)

3680 
cvSèπRódSeq
(
_£q
.
£q
, 
this
);

3681 
	gödex
 = 
£ekEnd
 ? 
_£q
.
£q
->
tŸÆ
 : 0;

3684 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>::
	$£ek
(
size_t
 
pos
)

3686 
	`cvSëSeqRódîPos
(
this
, ()
pos
, 
Ál£
);

3687 
ödex
 = 
pos
;

3688 
	}
}

3690 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gSeqIãøt‹
<_Tp>::
	$ãŒ
() const

3691 {  
ödex
; 
	}
}

3693 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gSeqIãøt‹
<_Tp>::
›î©‹
 *()

3694 {  *(
_Tp
*)
±r
; }

3696 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gSeqIãøt‹
<_Tp>::
›î©‹
 *() const

3697 {  *(c⁄° 
_Tp
*)
±r
; }

3699 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>& SeqIãøt‹<_Tp>::
›î©‹
 ++()

3701 
CV_NEXT_SEQ_ELEM
((
_Tp
), *
this
);

3702 if–++
	gödex
 >
£q
->
tŸÆ
*2 )

3703 
ödex
 = 0;

3704  *
	gthis
;

3707 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp> SeqIãøt‹<_Tp>::
›î©‹
 ++() const

3709 
SeqIãøt‹
<
_Tp
> 
ô
 = *
this
;

3710 ++*
	gthis
;

3711  
	gô
;

3714 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>& SeqIãøt‹<_Tp>::
›î©‹
 --()

3716 
CV_PREV_SEQ_ELEM
((
_Tp
), *
this
);

3717 if–--
	gödex
 < 0 )

3718 
	gödex
 = 
£q
->
tŸÆ
*2-1;

3719  *
	gthis
;

3722 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp> SeqIãøt‹<_Tp>::
›î©‹
 --() const

3724 
SeqIãøt‹
<
_Tp
> 
ô
 = *
this
;

3725 --*
	gthis
;

3726  
	gô
;

3729 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>& SeqIãøt‹<_Tp>::
›î©‹
 +=(
dñè
)

3731 
cvSëSeqRódîPos
(
this
, 
dñè
, 1);

3732 
	gödex
 +
dñè
;

3733 
	gn
 = 
£q
->
tŸÆ
*2;

3734 if–
	gödex
 < 0 )

3735 
	gödex
 +
n
;

3736 if–
	gödex
 >
n
 )

3737 
ödex
 -
n
;

3738  *
	gthis
;

3741 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>& SeqIãøt‹<_Tp>::
›î©‹
 -=(
dñè
)

3743  (*
this
 +-
dñè
);

3746 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
±rdiff_t
 
	g›î©‹
 - (c⁄° 
	gSeqIãøt‹
<_Tp>& 
	ga
,

3747 c⁄° 
	gSeqIãøt‹
<
	g_Tp
>& 
	gb
)

3749 
±rdiff_t
 
	gdñè
 = 
a
.
ödex
 - 
b
.ödex, 
	gn
 =á.
£q
->
tŸÆ
;

3750 if–
	g°d
::
abs
(
°©ic_ˇ°
<>(
dñè
)Ë> 
n
 )

3751 
dñè
 +dñè < 0 ? 
n
 : -n;

3752  
	gdñè
;

3755 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
SeqIãøt‹
<
_Tp
>& 
a
,

3756 c⁄° 
	gSeqIãøt‹
<
	g_Tp
>& 
	gb
)

3758  
	ga
.
	g£q
 =
b
.
£q
 && 
a
.
ödex
 == b.index;

3761 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
SeqIãøt‹
<
_Tp
>& 
a
,

3762 c⁄° 
	gSeqIãøt‹
<
	g_Tp
>& 
	gb
)

3764  !(
	ga
 =
b
);

3768 
	gãm∂©e
<
ty≥«me
 
	g_ClsName
> 
	sRTTIIm∂


3770 
	gpublic
:

3771 
isIn°™˚
(c⁄° * 
±r
)

3773 
_ClsName
 
dummy
;

3774 * 
	gdummyp
 = &
dummy
;

3777 c⁄° * 
	gp
;

3778 c⁄° ** 
	gµ
;

3779 } 
	ga
, 
	gb
;

3780 
	ga
.
	gp
 = 
dummyp
;

3781 
	gb
.
	gp
 = 
±r
;

3782  *
	ga
.
	gµ
 =*
b
.
µ
;

3784 
ªÀa£
(** 
db±r
)

3786 if(
	gdb±r
 && *dbptr)

3788 
dñëe
 (
_ClsName
*)*
	gdb±r
;

3789 *
	gdb±r
 = 0;

3792 * 
ªad
(
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
n
)

3794 
FûeNode
 
‚
(
fs
, 
n
);

3795 
_ClsName
* 
	gobj
 = 
√w
 _ClsName;

3796 if(
	gobj
->
ªad
(
‚
))

3797  
	gobj
;

3798 
dñëe
 
	gobj
;

3802 
wrôe
(
CvFûeSt‹age
* 
_fs
, c⁄° * 
«me
, c⁄° * 
±r
, 
CvAârLi°
)

3804 if(
	g±r
 && 
	g_fs
)

3806 
FûeSt‹age
 
fs
(
_fs
);

3807 
	gfs
.fs.
addªf
();

3808 ((c⁄° 
	g_ClsName
*)
	g±r
)->
wrôe
(
fs
, 
°rög
(
«me
));

3812 * 
˛⁄e
(c⁄° * 
±r
)

3814 if(!
	g±r
)

3816  
√w
 
_ClsName
(*(c⁄° _ClsName*)
±r
);

3821 ˛as†
	cCV_EXPORTS
 
	gF‹m©ãr


3823 
	gpublic
:

3824 
vútuÆ
 ~
F‹m©ãr
() {}

3825 
vútuÆ
 
wrôe
(
°d
::
o°ªam
& 
out
, c⁄° 
M©
& 
m
, c⁄° * 
∑øms
=0, 
≈¨ams
=0) const = 0;

3826 
vútuÆ
 
wrôe
(
°d
::
o°ªam
& 
out
, c⁄° * 
d©a
, 
√Àms
, 
ty≥
,

3827 c⁄° * 
∑øms
=0, 
≈¨ams
=0) const = 0;

3828 c⁄° 
F‹m©ãr
* 
gë
(c⁄° * 
fmt
="");

3829 c⁄° 
F‹m©ãr
* 
£tDeÁu…
(c⁄° F‹m©ãr* 
fmt
);

3833 
CV_EXPORTS
 
	gF‹m©ãd


3835 
F‹m©ãd
(c⁄° 
M©
& 
m
, c⁄° 
F‹m©ãr
* 
fmt
,

3836 c⁄° 
ve˘‹
<>& 
∑øms
);

3837 
F‹m©ãd
(c⁄° 
M©
& 
m
, c⁄° 
F‹m©ãr
* 
fmt
,

3838 c⁄° * 
∑øms
=0);

3839 
M©
 
	gmtx
;

3840 c⁄° 
F‹m©ãr
* 
	gfmt
;

3841 
	gve˘‹
<> 
	g∑øms
;

3844 
ölöe
 
F‹m©ãd
 
f‹m©
(c⁄° 
M©
& 
mtx
, c⁄° * 
fmt
,

3845 c⁄° 
ve˘‹
<>& 
∑øms
=vector<>())

3847  
F‹m©ãd
(
mtx
, 
F‹m©ãr
::
gë
(
fmt
), 
∑øms
);

3850 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
F‹m©ãd
 
f‹m©
(c⁄° 
ve˘‹
<
Poöt_
<
_Tp
> >& 
vec
,

3851 c⁄° * 
fmt
, c⁄° 
ve˘‹
<>& 
∑øms
=vector<>())

3853  
F‹m©ãd
(
M©
(
vec
), 
F‹m©ãr
::
gë
(
fmt
), 
∑øms
);

3856 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
F‹m©ãd
 
f‹m©
(c⁄° 
ve˘‹
<
Poöt3_
<
_Tp
> >& 
vec
,

3857 c⁄° * 
fmt
, c⁄° 
ve˘‹
<>& 
∑øms
=vector<>())

3859  
F‹m©ãd
(
M©
(
vec
), 
F‹m©ãr
::
gë
(
fmt
), 
∑øms
);

3869 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
 << (
°d
::o°ªam& 
out
, c⁄° 
	gM©
& 
	gmtx
)

3871 
	gF‹m©ãr
::
gë
()->
wrôe
(
out
, 
mtx
);

3872  
	gout
;

3882 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
 << (
°d
::o°ªam& 
out
, c⁄° 
	gF‹m©ãd
& 
	gfmtd
)

3884 
	gfmtd
.
	gfmt
->
wrôe
(
out
, 
fmtd
.
mtx
);

3885  
	gout
;

3889 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
 << (
°d
::o°ªam& 
out
,

3890 c⁄° 
	gve˘‹
<
	gPoöt_
<
	g_Tp
> >& 
	gvec
)

3892 
	gF‹m©ãr
::
gë
()->
wrôe
(
out
, 
M©
(
vec
));

3893  
	gout
;

3897 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
 << (
°d
::o°ªam& 
out
,

3898 c⁄° 
	gve˘‹
<
	gPoöt3_
<
	g_Tp
> >& 
	gvec
)

3900 
	gF‹m©ãr
::
gë
()->
wrôe
(
out
, 
M©
(
vec
));

3901  
	gout
;

3907 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gM©x
<_Tp, m,Ç>& 
	gm©x
)

3909 
	gout
 << 
	gcv
::
M©
(
m©x
);

3910  
	gout
;

3915 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gPoöt_
<_Tp>& 
	gp
)

3917 
	gout
 << "[" << 
	gp
.
	gx
 << ", " <<Ö.
	gy
 << "]";

3918  
	gout
;

3923 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gPoöt3_
<_Tp>& 
	gp
)

3925 
	gout
 << "[" << 
	gp
.
	gx
 << ", " <<Ö.
	gy
 << ", " <<Ö.
	gz
 << "]";

3926  
	gout
;

3931 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gVec
<_Tp,Ç>& 
	gvec
)

3933 
	gout
 << "[";

3935 if(
	gVec
<
	g_Tp
, 
	gn
>::
dïth
 < 
CV_32F
)

3937 
i
 = 0; 
	gi
 < 
	gn
 - 1; ++i) {

3938 
	gout
 << ()
	gvec
[
i
] << ", ";

3940 
	gout
 << ()
	gvec
[
n
-1] << "]";

3944 
	gi
 = 0; i < 
	gn
 - 1; ++i) {

3945 
	gout
 << 
	gvec
[
i
] << ", ";

3947 
	gout
 << 
	gvec
[
n
-1] << "]";

3950  
	gout
;

3955 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gSize_
<_Tp>& 
	gsize
)

3957 
	gout
 << "[" << 
	gsize
.
	gwidth
 << " x " << size.
	gheight
 << "]";

3958  
	gout
;

3963 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gRe˘_
<_Tp>& 
	gª˘
)

3965 
	gout
 << "[" << 
	gª˘
.
	gwidth
 << " x " <<Ñe˘.
	gheight
 << " from (" <<Ñe˘.
	gx
 << ", " <<Ñe˘.
	gy
 << ")]";

3966  
	gout
;

3970 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp> 
	gAlg‹ôhm
::
	$¸óã
(c⁄° 
°rög
& 
«me
)

3972  
	`_¸óã
(
«me
).
±r
<
_Tp
>();

3973 
	}
}

3975 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

3976 
ölöe
 
	gAlg‹ôhm
::
£t
(c⁄° * 
_«me
, c⁄° 
På
<
_Tp
>& 
vÆue
)

3978 
	gPå
<
	gAlg‹ôhm
> 
	gÆgo_±r
 = 
vÆue
. 
ãm∂©e
 
±r
<
cv
::
Alg‹ôhm
>();

3979 i‡(
	gÆgo_±r
.
em±y
()) {

3980 
CV_Eº‹
–
CV_StsUnsuµ‹ãdF‹m©
, "unknown/unsupported PtrÅype ofÅhe secondÖarameter ofÅhe method Algorithm::set");

3982 
öfo
()->
£t
(
this
, 
_«me
, 
P¨amTy≥
<
Alg‹ôhm
>::
ty≥
, &
Ægo_±r
);

3985 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

3986 
ölöe
 
	gAlg‹ôhm
::
£t
(c⁄° 
°rög
& 
_«me
, c⁄° 
På
<
_Tp
>& 
vÆue
)

3988 
	gthis
->
	g£t
<
	g_Tp
>(
	g_«me
.
c_°r
(), 
	gvÆue
);

3991 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

3992 
ölöe
 
	gAlg‹ôhm
::
£tAlg‹ôhm
(c⁄° * 
_«me
, c⁄° 
På
<
_Tp
>& 
vÆue
)

3994 
	gPå
<
	gAlg‹ôhm
> 
	gÆgo_±r
 = 
vÆue
. 
ãm∂©e
 
±r
<
cv
::
Alg‹ôhm
>();

3995 i‡(
	gÆgo_±r
.
em±y
()) {

3996 
CV_Eº‹
–
CV_StsUnsuµ‹ãdF‹m©
, "unknown/unsupported PtrÅype ofÅhe secondÖarameter ofÅhe method Algorithm::set");

3998 
öfo
()->
£t
(
this
, 
_«me
, 
P¨amTy≥
<
Alg‹ôhm
>::
ty≥
, &
Ægo_±r
);

4001 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

4002 
ölöe
 
	gAlg‹ôhm
::
£tAlg‹ôhm
(c⁄° 
°rög
& 
_«me
, c⁄° 
På
<
_Tp
>& 
vÆue
)

4004 
	gthis
->
	g£t
<
	g_Tp
>(
	g_«me
.
c_°r
(), 
	gvÆue
);

4007 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
Åy≥«mê
	gP¨amTy≥
<_Tp>::
membî_ty≥
 
Alg‹ôhm
::
	$gë
(c⁄° 
°rög
& 
_«me
) const

4009 
ty≥«me
 
P¨amTy≥
<
_Tp
>::
membî_ty≥
 
vÆue
;

4010 
	`öfo
()->
	`gë
(
this
, 
_«me
.
	`c_°r
(), 
P¨amTy≥
<
_Tp
>::
ty≥
, &
vÆue
);

4011  
vÆue
;

4012 
	}
}

4014 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
Åy≥«mê
	gP¨amTy≥
<_Tp>::
membî_ty≥
 
Alg‹ôhm
::
	$gë
(c⁄° * 
_«me
) const

4016 
ty≥«me
 
P¨amTy≥
<
_Tp
>::
membî_ty≥
 
vÆue
;

4017 
	`öfo
()->
	`gë
(
this
, 
_«me
, 
P¨amTy≥
<
_Tp
>::
ty≥
, &
vÆue
);

4018  
vÆue
;

4019 
	}
}

4021 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_Ba£
> 
ölöe
 
	gAlg‹ôhmInfo
::
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
∑ømëî
,

4022 
På
<
_Tp
>& 
vÆue
, 
boﬁ
 
ªadO∆y
, På<_Tp> (
Alg‹ôhm
::*
gëãr
)(), (Alg‹ôhm::*
£âî
)(const Ptr<_Tp>&),

4023 c⁄° 
°rög
& 
hñp
)

4026 
	`addP¨am_
(
Ægo
, 
∑ømëî
, 
P¨amTy≥
<
_Ba£
>::
ty≥
, &
vÆue
, 
ªadO∆y
,

4027 (
Alg‹ôhm
::
Gëãr
)
gëãr
, (Alg‹ôhm::
Sëãr
)
£âî
, 
hñp
);

4028 
	}
}

4030 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gAlg‹ôhmInfo
::
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
∑ømëî
,

4031 
På
<
_Tp
>& 
vÆue
, 
boﬁ
 
ªadO∆y
, På<_Tp> (
Alg‹ôhm
::*
gëãr
)(), (Alg‹ôhm::*
£âî
)(const Ptr<_Tp>&),

4032 c⁄° 
°rög
& 
hñp
)

4035 
	`addP¨am_
(
Ægo
, 
∑ømëî
, 
P¨amTy≥
<
Alg‹ôhm
>::
ty≥
, &
vÆue
, 
ªadO∆y
,

4036 (
Alg‹ôhm
::
Gëãr
)
gëãr
, (Alg‹ôhm::
Sëãr
)
£âî
, 
hñp
);

4037 
	}
}

4041 #ifde‡
_MSC_VER


4042 #¥agm®
w¨nög
(
p›
)

	@/usr/include/opencv2/core/types_c.h

43 #i‚de‡
__OPENCV_CORE_TYPES_H__


44 
	#__OPENCV_CORE_TYPES_H__


	)

46 #i‡!
deföed
 
_CRT_SECURE_NO_DEPRECATE
 && deföed 
_MSC_VER


47 #i‡
_MSC_VER
 > 1300

48 
	#_CRT_SECURE_NO_DEPRECATE


	)

53 #i‚de‡
SKIP_INCLUDES


55 
	~<as£π.h
>

56 
	~<°dlib.h
>

57 
	~<°rög.h
>

58 
	~<Êﬂt.h
>

60 #i‡!
deföed
 
_MSC_VER
 && !deföed 
__BORLANDC__


61 
	~<°döt.h
>

64 #i‡
deföed
 
__ICL


65 
	#CV_ICC
 
__ICL


	)

66 #ñi‡
deföed
 
__ICC


67 
	#CV_ICC
 
__ICC


	)

68 #ñi‡
deföed
 
__ECL


69 
	#CV_ICC
 
__ECL


	)

70 #ñi‡
deföed
 
__ECC


71 
	#CV_ICC
 
__ECC


	)

72 #ñi‡
deföed
 
__INTEL_COMPILER


73 
	#CV_ICC
 
__INTEL_COMPILER


	)

76 #i‡
deföed
 
CV_ICC
 && !deföed 
CV_ENABLE_UNROLLED


77 
	#CV_ENABLE_UNROLLED
 0

	)

79 
	#CV_ENABLE_UNROLLED
 1

	)

82 #i‡(
deföed
 
_M_X64
 && deföed 
_MSC_VER
 && _MSC_VER >1400Ë|| (
__GNUC__
 >4 && deföed 
__x86_64__
)

83 #i‡
deföed
 
WIN32


84 
	~<öåö.h
>

86 #i‡
deföed
 
__SSE2__
 || !deföed 
__GNUC__


87 
	~<emmöåö.h
>

91 #i‡
deföed
 
__BORLANDC__


92 
	~<Á°m©h.h
>

94 
	~<m©h.h
>

97 #ifde‡
HAVE_IPL


98 #i‚de‡
__IPL_H__


99 #i‡
deföed
 
WIN32
 || deföed 
_WIN32


100 
	~<ùl.h
>

102 
	~<ùl/ùl.h
>

105 #ñi‡
deföed
 
__IPL_H__


106 
	#HAVE_IPL


	)

111 #i‡
deföed
 
WIN32
 || deföed 
_WIN32


112 
	#CV_CDECL
 
__cde˛


	)

113 
	#CV_STDCALL
 
__°dˇŒ


	)

115 
	#CV_CDECL


	)

116 
	#CV_STDCALL


	)

119 #i‚de‡
CV_EXTERN_C


120 #ifde‡
__˝lu•lus


121 
	#CV_EXTERN_C
 "C"

	)

122 
	#CV_DEFAULT
(
vÆ
Ë
	)
vÆ

124 
	#CV_EXTERN_C


	)

125 
	#CV_DEFAULT
(
vÆ
)

	)

129 #i‚de‡
CV_EXTERN_C_FUNCPTR


130 #ifde‡
__˝lu•lus


131 
	#CV_EXTERN_C_FUNCPTR
(
x
Ë"C" { x; }

	)

133 
	#CV_EXTERN_C_FUNCPTR
(
x
Ë
	)
x

137 #i‚de‡
	tCV_INLINE


138 #i‡
	tdeföed
 
	t__˝lu•lus


139 
	tCV_INLINE
 
	tölöe


	)

140 #ñi‡
	tdeföed
 
	t_MSC_VER


141 
	tCV_INLINE
 
	t__ölöe


	)

143 
	tCV_INLINE
 

	)

147 #i‡(
	tdeföed
 
	tWIN32
 || deföed 
	t_WIN32
 || deföed 
	tWINCE
Ë&& deföed 
	tCVAPI_EXPORTS


148 
	tCV_EXPORTS
 
	t__de˛•ec
(
	tdŒexp‹t
)

	)

150 
	tCV_EXPORTS


	)

153 #i‚de‡
	tCVAPI


154 
	tCVAPI
(
	tªây≥
Ë
	tCV_EXTERN_C
 
	tCV_EXPORTS
Ñëty≥ 
	tCV_CDECL


	)

157 #i‡
	tdeföed
 
	t_MSC_VER
 || deföed 
	t__BORLANDC__


158 
__öt64
 
	töt64
;

159 
	t__öt64
 
	tuöt64
;

160 
	#CV_BIG_INT
(
n
Ën##
I64


	)

161 
	#CV_BIG_UINT
(
n
Ën##
UI64


	)

163 
öt64_t
 
	töt64
;

164 
uöt64_t
 
	tuöt64
;

165 
	#CV_BIG_INT
(
n
Ën##
LL


	)

166 
	#CV_BIG_UINT
(
n
Ën##
ULL


	)

169 #i‚de‡
HAVE_IPL


170 
	tuch¨
;

171 
	tush‹t
;

174 sig√d 
	tsch¨
;

177 
	#CV_CARRAY
(
cou¡î
)

	)

178 
	#CV_CUSTOM_CARRAY
(
¨gs
)

	)

179 
	#CV_EXPORTS_W
 
CV_EXPORTS


	)

180 
	#CV_EXPORTS_W_SIMPLE
 
CV_EXPORTS


	)

181 
	#CV_EXPORTS_AS
(
syn⁄ym
Ë
CV_EXPORTS


	)

182 
	#CV_EXPORTS_W_MAP
 
CV_EXPORTS


	)

183 
	#CV_IN_OUT


	)

184 
	#CV_OUT


	)

185 
	#CV_PROP


	)

186 
	#CV_PROP_RW


	)

187 
	#CV_WRAP


	)

188 
	#CV_WRAP_AS
(
syn⁄ym
)

	)

189 
	#CV_WRAP_DEFAULT
(
vÆue
)

	)

196 
	tCvAº
;

198 
	uCv32suf


200 
	mi
;

201 
	mu
;

202 
	mf
;

204 
	tCv32suf
;

206 
	uCv64suf


208 
öt64
 
	mi
;

209 
uöt64
 
	mu
;

210 
	mf
;

212 
	tCv64suf
;

214 
	tCVSètus
;

217 
	mCV_StsOk
= 0,

218 
	mCV_StsBackTø˚
= -1,

219 
	mCV_StsEº‹
= -2,

220 
	mCV_StsI¡î«l
= -3,

221 
	mCV_StsNoMem
= -4,

222 
	mCV_StsBadArg
= -5,

223 
	mCV_StsBadFunc
= -6,

224 
	mCV_StsNoC⁄v
= -7,

225 
	mCV_StsAutoTø˚
= -8,

226 
	mCV_HódîIsNuŒ
= -9,

227 
	mCV_BadImageSize
= -10,

228 
	mCV_BadOff£t
= -11,

229 
	mCV_BadD©aPå
= -12,

230 
	mCV_BadSãp
= -13,

231 
	mCV_BadModñOrChSeq
= -14,

232 
	mCV_BadNumCh™√ls
= -15,

233 
	mCV_BadNumCh™√l1U
= -16,

234 
	mCV_BadDïth
= -17,

235 
	mCV_BadAÕhaCh™√l
= -18,

236 
	mCV_BadOrdî
= -19,

237 
	mCV_BadOrigö
= -20,

238 
	mCV_BadAlign
= -21,

239 
	mCV_BadCÆlBack
= -22,

240 
	mCV_BadTûeSize
= -23,

241 
	mCV_BadCOI
= -24,

242 
	mCV_BadROISize
= -25,

243 
	mCV_MaskIsTûed
= -26,

244 
	mCV_StsNuŒPå
= -27,

245 
	mCV_StsVecLígthEº
= -28,

246 
	mCV_StsFûãrSåu˘C⁄ã¡Eº
= -29,

247 
	mCV_StsKî√lSåu˘C⁄ã¡Eº
= -30,

248 
	mCV_StsFûãrOff£tEº
= -31,

249 
	mCV_StsBadSize
= -201,

250 
	mCV_StsDivByZîo
= -202,

251 
	mCV_StsI≈œ˚NŸSuµ‹ãd
= -203,

252 
	mCV_StsObje˘NŸFound
= -204,

253 
	mCV_StsUnm©chedF‹m©s
= -205,

254 
	mCV_StsBadFœg
= -206,

255 
	mCV_StsBadPoöt
= -207,

256 
	mCV_StsBadMask
= -208,

257 
	mCV_StsUnm©chedSizes
= -209,

258 
	mCV_StsUnsuµ‹ãdF‹m©
= -210,

259 
	mCV_StsOutOfR™ge
= -211,

260 
	mCV_StsP¨£Eº‹
= -212,

261 
	mCV_StsNŸIm∂emíãd
= -213,

262 
	mCV_StsBadMemBlock
= -214,

263 
	mCV_StsAs£π
= -215,

264 
	mCV_GpuNŸSuµ‹ãd
= -216,

265 
	mCV_GpuApiCÆlEº‹
= -217,

266 
	mCV_O≥nGlNŸSuµ‹ãd
= -218,

267 
	mCV_O≥nGlApiCÆlEº‹
= -219,

268 
	mCV_O≥nCLDoubÀNŸSuµ‹ãd
= -220,

269 
	mCV_O≥nCLInôEº‹
= -221,

270 
	mCV_O≥nCLNoAMDBœsF·
= -222

277 #ifde‡
HAVE_TEGRA_OPTIMIZATION


278 
	~"ãgø_round.hµ
"

281 
	#CV_PI
 3.1415926535897932384626433832795

	)

282 
	#CV_LOG2
 0.69314718055994530941723212145818

	)

284 
	#CV_SWAP
(
a
,
b
,
t
Ë(—Ë◊), (aË(b), (bË—))

	)

286 #i‚de‡
MIN


287 
	#MIN
(
a
,
b
Ë(◊Ë> (bË? (bË: (a))

	)

290 #i‚de‡
MAX


291 
	#MAX
(
a
,
b
Ë(◊Ë< (bË? (bË: (a))

	)

295 
	#CV_IMIN
(
a
, 
b
Ë(◊Ë^ ((◊)^(b)Ë& ((◊Ë< (b)Ë- 1)))

	)

297 
	#CV_IMAX
(
a
, 
b
Ë(◊Ë^ ((◊)^(b)Ë& ((◊Ë> (b)Ë- 1)))

	)

300 #i‚de‡
__˝lu•lus


301 
	#CV_IABS
(
a
Ë((◊Ë^ (◊Ë< 0 ? -1 : 0)Ë- (◊Ë< 0 ? -1 : 0))

	)

303 
	#CV_IABS
(
a
Ë
	`abs
◊)

	)

305 
	#CV_CMP
(
a
,
b
Ë((◊Ë> (b)Ë- (◊Ë< (b)))

	)

306 
	#CV_SIGN
(
a
Ë
	`CV_CMP
(◊),0)

	)

308 
CV_INLINE
 
	$cvRound
–
vÆue
 )

310 #i‡(
deföed
 
_MSC_VER
 && deföed 
_M_X64
Ë|| (deföed 
__GNUC__
 && deföed 
__x86_64__
 && deföed 
__SSE2__
 && !deföed 
__APPLE__
)

311 
__m128d
 
t
 = 
	`_mm_£t_sd
–
vÆue
 );

312  
	`_mm_cvtsd_si32
(
t
);

313 #ñi‡
deföed
 
_MSC_VER
 && deföed 
_M_IX86


314 
t
;

315 
__asm


317 
Êd
 
vÆue
;

318 
fi°p
 
t
;

320  
t
;

321 #ñi‡
deföed
 
_MSC_VER
 && deföed 
_M_ARM
 && deföed 
HAVE_TEGRA_OPTIMIZATION


322 
	`TEGRA_ROUND
(
vÆue
);

323 #ñi‡
deföed
 
CV_ICC
 || deföed 
__GNUC__


324 #ifde‡
HAVE_TEGRA_OPTIMIZATION


325 
	`TEGRA_ROUND
(
vÆue
);

327  ()
	`Ãöt
(
vÆue
);

330 
öç¨t
, 
‰a˘∑π
;

331 
‰a˘∑π
 = 
	`modf
(
vÆue
, &
öç¨t
);

332 i‡((
	`Ábs
(
‰a˘∑π
Ë!0.5Ë|| (((()
öç¨t
) % 2) != 0))

333  ()(
vÆue
 + (value >= 0 ? 0.5 : -0.5));

335  ()
öç¨t
;

337 
	}
}

339 #i‡
deföed
 
__SSE2__
 || (deföed 
_M_IX86_FP
 && 2 == _M_IX86_FP)

340 
	~"emmöåö.h
"

343 
CV_INLINE
 
	$cvFlo‹
–
vÆue
 )

345 #i‡
deföed
 
_MSC_VER
 && deföed 
_M_X64
 || (deföed 
__GNUC__
 && deföed 
__SSE2__
 && !deföed 
__APPLE__
)

346 
__m128d
 
t
 = 
	`_mm_£t_sd
–
vÆue
 );

347 
i
 = 
	`_mm_cvtsd_si32
(
t
);

348  
i
 - 
	`_mm_movemask_pd
(
	`_mm_cm∂t_sd
(
t
, 
	`_mm_cvtsi32_sd
(t,i)));

349 #ñi‡
deföed
 
__GNUC__


350 
i
 = ()
vÆue
;

351  
i
 - (ò> 
vÆue
);

353 
i
 = 
	`cvRound
(
vÆue
);

354 
diff
 = ()(
vÆue
 - 
i
);

355  
i
 - (
diff
 < 0);

357 
	}
}

360 
CV_INLINE
 
	$cvCeû
–
vÆue
 )

362 #i‡
deföed
 
_MSC_VER
 && deföed 
_M_X64
 || (deföed 
__GNUC__
 && deföed 
__SSE2__
&& !deföed 
__APPLE__
)

363 
__m128d
 
t
 = 
	`_mm_£t_sd
–
vÆue
 );

364 
i
 = 
	`_mm_cvtsd_si32
(
t
);

365  
i
 + 
	`_mm_movemask_pd
(
	`_mm_cm∂t_sd
(
	`_mm_cvtsi32_sd
(
t
,i),Å));

366 #ñi‡
deföed
 
__GNUC__


367 
i
 = ()
vÆue
;

368  
i
 + (ò< 
vÆue
);

370 
i
 = 
	`cvRound
(
vÆue
);

371 
diff
 = ()(
i
 - 
vÆue
);

372  
i
 + (
diff
 < 0);

374 
	}
}

376 
	#cvInvSqπ
(
vÆue
Ë(()(1./
	`sqπ
(vÆue)))

	)

377 
	#cvSqπ
(
vÆue
Ë(()
	`sqπ
(vÆue))

	)

379 
CV_INLINE
 
	$cvIsNaN
–
vÆue
 )

381 
Cv64suf
 
õì754
;

382 
õì754
.
f
 = 
vÆue
;

383  (()(
õì754
.
u
 >> 32) & 0x7fffffff) +

384 (()
õì754
.
u
 != 0) > 0x7ff00000;

385 
	}
}

388 
CV_INLINE
 
	$cvIsInf
–
vÆue
 )

390 
Cv64suf
 
õì754
;

391 
õì754
.
f
 = 
vÆue
;

392  (()(
õì754
.
u
 >> 32) & 0x7fffffff) == 0x7ff00000 &&

393 ()
õì754
.
u
 == 0;

394 
	}
}

399 
uöt64
 
	tCvRNG
;

401 
	#CV_RNG_COEFF
 4164903690U

	)

403 
CV_INLINE
 
CvRNG
 
cvRNG
–
öt64
 
£ed
 
CV_DEFAULT
(-1))

405 
CvRNG
 
	g∫g
 = 
£ed
 ? (
uöt64
)£ed : (uöt64)(
öt64
)-1;

406  
	g∫g
;

410 
CV_INLINE
 
	$cvR™dI¡
–
CvRNG
* 
∫g
 )

412 
uöt64
 
ãmp
 = *
∫g
;

413 
ãmp
 = (
uöt64
)(Èemp*
CV_RNG_COEFF
 + (temp >> 32);

414 *
∫g
 = 
ãmp
;

415  ()
ãmp
;

416 
	}
}

419 
CV_INLINE
 
	$cvR™dRól
–
CvRNG
* 
∫g
 )

421  
	`cvR™dI¡
(
∫g
)*2.3283064365386962890625e-10 ;

422 
	}
}

428 #i‚de‡
HAVE_IPL


435 
	#IPL_DEPTH_SIGN
 0x80000000

	)

437 
	#IPL_DEPTH_1U
 1

	)

438 
	#IPL_DEPTH_8U
 8

	)

439 
	#IPL_DEPTH_16U
 16

	)

440 
	#IPL_DEPTH_32F
 32

	)

442 
	#IPL_DEPTH_8S
 (
IPL_DEPTH_SIGN
| 8)

	)

443 
	#IPL_DEPTH_16S
 (
IPL_DEPTH_SIGN
|16)

	)

444 
	#IPL_DEPTH_32S
 (
IPL_DEPTH_SIGN
|32)

	)

446 
	#IPL_DATA_ORDER_PIXEL
 0

	)

447 
	#IPL_DATA_ORDER_PLANE
 1

	)

449 
	#IPL_ORIGIN_TL
 0

	)

450 
	#IPL_ORIGIN_BL
 1

	)

452 
	#IPL_ALIGN_4BYTES
 4

	)

453 
	#IPL_ALIGN_8BYTES
 8

	)

454 
	#IPL_ALIGN_16BYTES
 16

	)

455 
	#IPL_ALIGN_32BYTES
 32

	)

457 
	#IPL_ALIGN_DWORD
 
IPL_ALIGN_4BYTES


	)

458 
	#IPL_ALIGN_QWORD
 
IPL_ALIGN_8BYTES


	)

460 
	#IPL_BORDER_CONSTANT
 0

	)

461 
	#IPL_BORDER_REPLICATE
 1

	)

462 
	#IPL_BORDER_REFLECT
 2

	)

463 
	#IPL_BORDER_WRAP
 3

	)

465 
	s_I∂Image


467 
	mnSize
;

468 
	mID
;

469 
	mnCh™√ls
;

470 
	mÆphaCh™√l
;

471 
	mdïth
;

473 
	mcﬁ‹Modñ
[4];

474 
	mch™√lSeq
[4];

475 
	md©aOrdî
;

477 
	m‹igö
;

479 
	mÆign
;

481 
	mwidth
;

482 
	mheight
;

483 
_I∂ROI
 *
	mroi
;

484 
_I∂Image
 *
	mmaskROI
;

485 *
	mimageId
;

486 
_I∂TûeInfo
 *
	mtûeInfo
;

487 
	mimageSize
;

490 *
	mimageD©a
;

491 
	mwidthSãp
;

492 
	mB‹dîMode
[4];

493 
	mB‹dîC⁄°
[4];

494 *
	mimageD©aOrigö
;

498 
	tI∂Image
;

500 
_I∂TûeInfo
 
	tI∂TûeInfo
;

502 
	s_I∂ROI


504 
	mcoi
;

505 
	mxOff£t
;

506 
	myOff£t
;

507 
	mwidth
;

508 
	mheight
;

510 
	tI∂ROI
;

512 
	s_I∂C⁄vKî√l


514 
	mnCﬁs
;

515 
	mnRows
;

516 
	m™ch‹X
;

517 
	m™ch‹Y
;

518 *
	mvÆues
;

519 
	mnShi·R
;

521 
	tI∂C⁄vKî√l
;

523 
	s_I∂C⁄vKî√lFP


525 
	mnCﬁs
;

526 
	mnRows
;

527 
	m™ch‹X
;

528 
	m™ch‹Y
;

529 *
	mvÆues
;

531 
	tI∂C⁄vKî√lFP
;

533 
	#IPL_IMAGE_HEADER
 1

	)

534 
	#IPL_IMAGE_DATA
 2

	)

535 
	#IPL_IMAGE_ROI
 4

	)

540 
	#IPL_BORDER_REFLECT_101
 4

	)

541 
	#IPL_BORDER_TRANSPARENT
 5

	)

543 
	#IPL_IMAGE_MAGIC_VAL
 (()(
I∂Image
))

	)

544 
	#CV_TYPE_NAME_IMAGE
 "›ícv-image"

	)

546 
	#CV_IS_IMAGE_HDR
(
img
) \

547 ((
img
Ë!
NULL
 && ((c⁄° 
I∂Image
*)(img))->
nSize
 =(I∂Image))

	)

549 
	#CV_IS_IMAGE
(
img
) \

550 (
	`CV_IS_IMAGE_HDR
(
img
Ë&& ((
I∂Image
*)img)->
imageD©a
 !
NULL
)

	)

554 
	#IPL_DEPTH_64F
 64

	)

558 
	#CV_IMAGE_ELEM
–
image
, 
ñemty≥
, 
row
, 
cﬁ
 ) \

559 (((
ñemty≥
*)((
image
)->
imageD©a
 + (image)->
widthSãp
*(
row
)))[(
cﬁ
)])

	)

565 
	#CV_CN_MAX
 512

	)

566 
	#CV_CN_SHIFT
 3

	)

567 
	#CV_DEPTH_MAX
 (1 << 
CV_CN_SHIFT
)

	)

569 
	#CV_8U
 0

	)

570 
	#CV_8S
 1

	)

571 
	#CV_16U
 2

	)

572 
	#CV_16S
 3

	)

573 
	#CV_32S
 4

	)

574 
	#CV_32F
 5

	)

575 
	#CV_64F
 6

	)

576 
	#CV_USRTYPE1
 7

	)

578 
	#CV_MAT_DEPTH_MASK
 (
CV_DEPTH_MAX
 - 1)

	)

579 
	#CV_MAT_DEPTH
(
Êags
Ë((ÊagsË& 
CV_MAT_DEPTH_MASK
)

	)

581 
	#CV_MAKETYPE
(
dïth
,
˙
Ë(
	`CV_MAT_DEPTH
(dïthË+ (((˙)-1Ë<< 
CV_CN_SHIFT
))

	)

582 
	#CV_MAKE_TYPE
 
CV_MAKETYPE


	)

584 
	#CV_8UC1
 
	`CV_MAKETYPE
(
CV_8U
,1)

	)

585 
	#CV_8UC2
 
	`CV_MAKETYPE
(
CV_8U
,2)

	)

586 
	#CV_8UC3
 
	`CV_MAKETYPE
(
CV_8U
,3)

	)

587 
	#CV_8UC4
 
	`CV_MAKETYPE
(
CV_8U
,4)

	)

588 
	#CV_8UC
(
n
Ë
	`CV_MAKETYPE
(
CV_8U
,“))

	)

590 
	#CV_8SC1
 
	`CV_MAKETYPE
(
CV_8S
,1)

	)

591 
	#CV_8SC2
 
	`CV_MAKETYPE
(
CV_8S
,2)

	)

592 
	#CV_8SC3
 
	`CV_MAKETYPE
(
CV_8S
,3)

	)

593 
	#CV_8SC4
 
	`CV_MAKETYPE
(
CV_8S
,4)

	)

594 
	#CV_8SC
(
n
Ë
	`CV_MAKETYPE
(
CV_8S
,“))

	)

596 
	#CV_16UC1
 
	`CV_MAKETYPE
(
CV_16U
,1)

	)

597 
	#CV_16UC2
 
	`CV_MAKETYPE
(
CV_16U
,2)

	)

598 
	#CV_16UC3
 
	`CV_MAKETYPE
(
CV_16U
,3)

	)

599 
	#CV_16UC4
 
	`CV_MAKETYPE
(
CV_16U
,4)

	)

600 
	#CV_16UC
(
n
Ë
	`CV_MAKETYPE
(
CV_16U
,“))

	)

602 
	#CV_16SC1
 
	`CV_MAKETYPE
(
CV_16S
,1)

	)

603 
	#CV_16SC2
 
	`CV_MAKETYPE
(
CV_16S
,2)

	)

604 
	#CV_16SC3
 
	`CV_MAKETYPE
(
CV_16S
,3)

	)

605 
	#CV_16SC4
 
	`CV_MAKETYPE
(
CV_16S
,4)

	)

606 
	#CV_16SC
(
n
Ë
	`CV_MAKETYPE
(
CV_16S
,“))

	)

608 
	#CV_32SC1
 
	`CV_MAKETYPE
(
CV_32S
,1)

	)

609 
	#CV_32SC2
 
	`CV_MAKETYPE
(
CV_32S
,2)

	)

610 
	#CV_32SC3
 
	`CV_MAKETYPE
(
CV_32S
,3)

	)

611 
	#CV_32SC4
 
	`CV_MAKETYPE
(
CV_32S
,4)

	)

612 
	#CV_32SC
(
n
Ë
	`CV_MAKETYPE
(
CV_32S
,“))

	)

614 
	#CV_32FC1
 
	`CV_MAKETYPE
(
CV_32F
,1)

	)

615 
	#CV_32FC2
 
	`CV_MAKETYPE
(
CV_32F
,2)

	)

616 
	#CV_32FC3
 
	`CV_MAKETYPE
(
CV_32F
,3)

	)

617 
	#CV_32FC4
 
	`CV_MAKETYPE
(
CV_32F
,4)

	)

618 
	#CV_32FC
(
n
Ë
	`CV_MAKETYPE
(
CV_32F
,“))

	)

620 
	#CV_64FC1
 
	`CV_MAKETYPE
(
CV_64F
,1)

	)

621 
	#CV_64FC2
 
	`CV_MAKETYPE
(
CV_64F
,2)

	)

622 
	#CV_64FC3
 
	`CV_MAKETYPE
(
CV_64F
,3)

	)

623 
	#CV_64FC4
 
	`CV_MAKETYPE
(
CV_64F
,4)

	)

624 
	#CV_64FC
(
n
Ë
	`CV_MAKETYPE
(
CV_64F
,“))

	)

626 
	#CV_AUTO_STEP
 0x7fffffff

	)

627 
	#CV_WHOLE_ARR
 
	`cvSli˚
–0, 0x3ffffff‡)

	)

629 
	#CV_MAT_CN_MASK
 ((
CV_CN_MAX
 - 1Ë<< 
CV_CN_SHIFT
)

	)

630 
	#CV_MAT_CN
(
Êags
Ë((((ÊagsË& 
CV_MAT_CN_MASK
Ë>> 
CV_CN_SHIFT
Ë+ 1)

	)

631 
	#CV_MAT_TYPE_MASK
 (
CV_DEPTH_MAX
*
CV_CN_MAX
 - 1)

	)

632 
	#CV_MAT_TYPE
(
Êags
Ë((ÊagsË& 
CV_MAT_TYPE_MASK
)

	)

633 
	#CV_MAT_CONT_FLAG_SHIFT
 14

	)

634 
	#CV_MAT_CONT_FLAG
 (1 << 
CV_MAT_CONT_FLAG_SHIFT
)

	)

635 
	#CV_IS_MAT_CONT
(
Êags
Ë((ÊagsË& 
CV_MAT_CONT_FLAG
)

	)

636 
	#CV_IS_CONT_MAT
 
CV_IS_MAT_CONT


	)

637 
	#CV_SUBMAT_FLAG_SHIFT
 15

	)

638 
	#CV_SUBMAT_FLAG
 (1 << 
CV_SUBMAT_FLAG_SHIFT
)

	)

639 
	#CV_IS_SUBMAT
(
Êags
Ë((ÊagsË& 
CV_MAT_SUBMAT_FLAG
)

	)

641 
	#CV_MAGIC_MASK
 0xFFFF0000

	)

642 
	#CV_MAT_MAGIC_VAL
 0x42420000

	)

643 
	#CV_TYPE_NAME_MAT
 "›ícv-m©rix"

	)

645 
	sCvM©


647 
	mty≥
;

648 
	m°ï
;

651 * 
	mªfcou¡
;

652 
	mhdr_ªfcou¡
;

656 
uch¨
* 
	m±r
;

657 * 
	ms
;

658 * 
	mi
;

659 * 
	mÊ
;

660 * 
	mdb
;

661 } 
	md©a
;

663 #ifde‡
__˝lu•lus


666 
	mrows
;

667 
	mheight
;

672 
	mcﬁs
;

673 
	mwidth
;

676 
	mrows
;

677 
	mcﬁs
;

681 
	tCvM©
;

684 
	#CV_IS_MAT_HDR
(
m©
) \

685 ((
m©
Ë!
NULL
 && \

686 (((c⁄° 
CvM©
*)(
m©
))->
ty≥
 & 
CV_MAGIC_MASK
Ë=
CV_MAT_MAGIC_VAL
 && \

687 ((c⁄° 
CvM©
*)(
m©
))->
cﬁs
 > 0 && ((c⁄° CvM©*)(m©))->
rows
 > 0)

	)

689 
	#CV_IS_MAT_HDR_Z
(
m©
) \

690 ((
m©
Ë!
NULL
 && \

691 (((c⁄° 
CvM©
*)(
m©
))->
ty≥
 & 
CV_MAGIC_MASK
Ë=
CV_MAT_MAGIC_VAL
 && \

692 ((c⁄° 
CvM©
*)(
m©
))->
cﬁs
 >0 && ((c⁄° CvM©*)(m©))->
rows
 >0)

	)

694 
	#CV_IS_MAT
(
m©
) \

695 (
	`CV_IS_MAT_HDR
(
m©
Ë&& ((c⁄° 
CvM©
*)(m©))->
d©a
.
±r
 !
NULL
)

	)

697 
	#CV_IS_MASK_ARR
(
m©
) \

698 (((
m©
)->
ty≥
 & (
CV_MAT_TYPE_MASK
 & ~
CV_8SC1
)Ë=0)

	)

700 
	#CV_ARE_TYPES_EQ
(
m©1
, 
m©2
) \

701 ((((
m©1
)->
ty≥
 ^ (
m©2
)->ty≥Ë& 
CV_MAT_TYPE_MASK
Ë=0)

	)

703 
	#CV_ARE_CNS_EQ
(
m©1
, 
m©2
) \

704 ((((
m©1
)->
ty≥
 ^ (
m©2
)->ty≥Ë& 
CV_MAT_CN_MASK
Ë=0)

	)

706 
	#CV_ARE_DEPTHS_EQ
(
m©1
, 
m©2
) \

707 ((((
m©1
)->
ty≥
 ^ (
m©2
)->ty≥Ë& 
CV_MAT_DEPTH_MASK
Ë=0)

	)

709 
	#CV_ARE_SIZES_EQ
(
m©1
, 
m©2
) \

710 ((
m©1
)->
rows
 =(
m©2
)->row†&& (m©1)->
cﬁs
 =(m©2)->cﬁs)

	)

712 
	#CV_IS_MAT_CONST
(
m©
) \

713 (((
m©
)->
rows
|(m©)->
cﬁs
Ë=1)

	)

717 
	#CV_ELEM_SIZE1
(
ty≥
) \

718 (((((
size_t
)<<28)|0x8442211Ë>> 
	`CV_MAT_DEPTH
(
ty≥
)*4Ë& 15)

	)

721 
	#CV_ELEM_SIZE
(
ty≥
) \

722 (
	`CV_MAT_CN
(
ty≥
Ë<< (((((
size_t
)/4+1)*16384|0x3a50Ë>> 
	`CV_MAT_DEPTH
—y≥)*2Ë& 3))

	)

724 
	#IPL2CV_DEPTH
(
dïth
) \

725 ((((
CV_8U
)+(
CV_16U
<<4)+(
CV_32F
<<8)+(
CV_64F
<<16)+(
CV_8S
<<20)+ \

726 (
CV_16S
<<24)+(
CV_32S
<<28)Ë>> ((((
dïth
) & 0xF0) >> 2) + \

727 (((
dïth
Ë& 
IPL_DEPTH_SIGN
Ë? 20 : 0))Ë& 15)

	)

733 
CV_INLINE
 
CvM©
 
cvM©
–
rows
, 
cﬁs
, 
ty≥
, * 
d©a
 
	$CV_DEFAULT
(
NULL
))

735 
CvM©
 
m
;

737 
	`as£π
–()
	`CV_MAT_DEPTH
(
ty≥
Ë<
CV_64F
 );

738 
ty≥
 = 
	`CV_MAT_TYPE
(type);

739 
m
.
ty≥
 = 
CV_MAT_MAGIC_VAL
 | 
CV_MAT_CONT_FLAG
 |Åype;

740 
m
.
cﬁs
 = cols;

741 
m
.
rows
 =Ñows;

742 
m
.
°ï
 = m.
cﬁs
*
	`CV_ELEM_SIZE
(
ty≥
);

743 
m
.
d©a
.
±r
 = (
uch¨
*)data;

744 
m
.
ªfcou¡
 = 
NULL
;

745 
m
.
hdr_ªfcou¡
 = 0;

747  
m
;

748 
	}
}

751 
	#CV_MAT_ELEM_PTR_FAST
–
m©
, 
row
, 
cﬁ
, 
pix_size
 ) \

752 (
	`as£π
–()(
row
Ë< ()(
m©
).
rows
 && \

753 ()(
cﬁ
Ë< ()(
m©
).
cﬁs
 ), \

754 (
m©
).
d©a
.
±r
 + (
size_t
)(m©).
°ï
*(
row
Ë+ (
pix_size
)*(
cﬁ
))

	)

756 
	#CV_MAT_ELEM_PTR
–
m©
, 
row
, 
cﬁ
 ) \

757 
	`CV_MAT_ELEM_PTR_FAST
–
m©
, 
row
, 
cﬁ
, 
	`CV_ELEM_SIZE
((m©).
ty≥
Ë)

	)

759 
	#CV_MAT_ELEM
–
m©
, 
ñemty≥
, 
row
, 
cﬁ
 ) \

760 (*(
ñemty≥
*)
	`CV_MAT_ELEM_PTR_FAST
–
m©
, 
row
, 
cﬁ
, ”Àmty≥)))

	)

763 
CV_INLINE
 
	$cvmGë
–c⁄° 
CvM©
* 
m©
, 
row
, 
cﬁ
 )

765 
ty≥
;

767 
ty≥
 = 
	`CV_MAT_TYPE
(
m©
->type);

768 
	`as£π
–()
row
 < ()
m©
->
rows
 &&

769 ()
cﬁ
 < ()
m©
->
cﬁs
 );

771 if–
ty≥
 =
CV_32FC1
 )

772  ((*)(*)(
m©
->
d©a
.
±r
 + (
size_t
)m©->
°ï
*
row
))[
cﬁ
];

775 
	`as£π
–
ty≥
 =
CV_64FC1
 );

776  ((*)(*)(
m©
->
d©a
.
±r
 + (
size_t
)m©->
°ï
*
row
))[
cﬁ
];

778 
	}
}

781 
CV_INLINE
 
	$cvmSë
–
CvM©
* 
m©
, 
row
, 
cﬁ
, 
vÆue
 )

783 
ty≥
;

784 
ty≥
 = 
	`CV_MAT_TYPE
(
m©
->type);

785 
	`as£π
–()
row
 < ()
m©
->
rows
 &&

786 ()
cﬁ
 < ()
m©
->
cﬁs
 );

788 if–
ty≥
 =
CV_32FC1
 )

789 ((*)(*)(
m©
->
d©a
.
±r
 + (
size_t
)m©->
°ï
*
row
))[
cﬁ
] = ()
vÆue
;

792 
	`as£π
–
ty≥
 =
CV_64FC1
 );

793 ((*)(*)(
m©
->
d©a
.
±r
 + (
size_t
)m©->
°ï
*
row
))[
cﬁ
] = ()
vÆue
;

795 
	}
}

798 
CV_INLINE
 
	$cvI∂Dïth
–
ty≥
 )

800 
dïth
 = 
	`CV_MAT_DEPTH
(
ty≥
);

801  
	`CV_ELEM_SIZE1
(
dïth
)*8 | (dïth =
CV_8S
 || dïth =
CV_16S
 ||

802 
dïth
 =
CV_32S
 ? 
IPL_DEPTH_SIGN
 : 0);

803 
	}
}

810 
	#CV_MATND_MAGIC_VAL
 0x42430000

	)

811 
	#CV_TYPE_NAME_MATND
 "›ícv-nd-m©rix"

	)

813 
	#CV_MAX_DIM
 32

	)

814 
	#CV_MAX_DIM_HEAP
 1024

	)

816 
	sCvM©ND


818 
	mty≥
;

819 
	mdims
;

821 * 
	mªfcou¡
;

822 
	mhdr_ªfcou¡
;

826 
uch¨
* 
	m±r
;

827 * 
	mÊ
;

828 * 
	mdb
;

829 * 
	mi
;

830 * 
	ms
;

831 } 
	md©a
;

835 
	msize
;

836 
	m°ï
;

838 
	mdim
[
CV_MAX_DIM
];

840 
	tCvM©ND
;

842 
	#CV_IS_MATND_HDR
(
m©
) \

843 ((
m©
Ë!
NULL
 && (((c⁄° 
CvM©ND
*)(m©))->
ty≥
 & 
CV_MAGIC_MASK
Ë=
CV_MATND_MAGIC_VAL
)

	)

845 
	#CV_IS_MATND
(
m©
) \

846 (
	`CV_IS_MATND_HDR
(
m©
Ë&& ((c⁄° 
CvM©ND
*)(m©))->
d©a
.
±r
 !
NULL
)

	)

853 
	#CV_SPARSE_MAT_MAGIC_VAL
 0x42440000

	)

854 
	#CV_TYPE_NAME_SPARSE_MAT
 "›ícv-•¨£-m©rix"

	)

856 
	gCvSë
;

858 
	sCvS∑r£M©


860 
	mty≥
;

861 
	mdims
;

862 * 
	mªfcou¡
;

863 
	mhdr_ªfcou¡
;

865 
CvSë
* 
	mhóp
;

866 ** 
	mhashèbÀ
;

867 
	mhashsize
;

868 
	mvÆoff£t
;

869 
	midxoff£t
;

870 
	msize
[
CV_MAX_DIM
];

872 
	tCvS∑r£M©
;

874 
	#CV_IS_SPARSE_MAT_HDR
(
m©
) \

875 ((
m©
Ë!
NULL
 && \

876 (((c⁄° 
CvS∑r£M©
*)(
m©
))->
ty≥
 & 
CV_MAGIC_MASK
Ë=
CV_SPARSE_MAT_MAGIC_VAL
)

	)

878 
	#CV_IS_SPARSE_MAT
(
m©
) \

879 
	`CV_IS_SPARSE_MAT_HDR
(
m©
)

	)

883 
	sCvS∑r£Node


885 
	mhashvÆ
;

886 
CvS∑r£Node
* 
	m√xt
;

888 
	tCvS∑r£Node
;

890 
	sCvS∑r£M©Iãøt‹


892 
CvS∑r£M©
* 
	mm©
;

893 
CvS∑r£Node
* 
	mnode
;

894 
	mcuridx
;

896 
	tCvS∑r£M©Iãøt‹
;

898 
	#CV_NODE_VAL
(
m©
,
node
Ë((*)((
uch¨
*)“odeË+ (m©)->
vÆoff£t
))

	)

899 
	#CV_NODE_IDX
(
m©
,
node
Ë((*)((
uch¨
*)“odeË+ (m©)->
idxoff£t
))

	)

905 
	tCvHi°Ty≥
;

907 
	#CV_HIST_MAGIC_VAL
 0x42450000

	)

908 
	#CV_HIST_UNIFORM_FLAG
 (1 << 10)

	)

911 
	#CV_HIST_RANGES_FLAG
 (1 << 11)

	)

913 
	#CV_HIST_ARRAY
 0

	)

914 
	#CV_HIST_SPARSE
 1

	)

915 
	#CV_HIST_TREE
 
CV_HIST_SPARSE


	)

919 
	#CV_HIST_UNIFORM
 1

	)

921 
	sCvHi°ogøm


923 
	mty≥
;

924 
CvAº
* 
	mbös
;

925 
	mthªsh
[
CV_MAX_DIM
][2];

926 ** 
	mthªsh2
;

927 
CvM©ND
 
	mm©
;

929 
	tCvHi°ogøm
;

931 
	#CV_IS_HIST
–
hi°
 ) \

932 ((
hi°
Ë!
NULL
 && \

933 (((
CvHi°ogøm
*)(
hi°
))->
ty≥
 & 
CV_MAGIC_MASK
Ë=
CV_HIST_MAGIC_VAL
 && \

934 (
hi°
)->
bös
 !
NULL
)

	)

936 
	#CV_IS_UNIFORM_HIST
–
hi°
 ) \

937 (((
hi°
)->
ty≥
 & 
CV_HIST_UNIFORM_FLAG
Ë!0)

	)

939 
	#CV_IS_SPARSE_HIST
–
hi°
 ) \

940 
	`CV_IS_SPARSE_MAT
((
hi°
)->
bös
)

	)

942 
	#CV_HIST_HAS_RANGES
–
hi°
 ) \

943 (((
hi°
)->
ty≥
 & 
CV_HIST_RANGES_FLAG
Ë!0)

	)

951 
	sCvRe˘


953 
	mx
;

954 
	my
;

955 
	mwidth
;

956 
	mheight
;

958 
	tCvRe˘
;

960 
CV_INLINE
 
CvRe˘
 
	$cvRe˘
–
x
, 
y
, 
width
, 
height
 )

962 
CvRe˘
 
r
;

964 
r
.
x
 = x;

965 
r
.
y
 = y;

966 
r
.
width
 = width;

967 
r
.
height
 = height;

969  
r
;

970 
	}
}

973 
CV_INLINE
 
I∂ROI
 
	$cvRe˘ToROI
–
CvRe˘
 
ª˘
, 
coi
 )

975 
I∂ROI
 
roi
;

976 
roi
.
xOff£t
 = 
ª˘
.
x
;

977 
roi
.
yOff£t
 = 
ª˘
.
y
;

978 
roi
.
width
 = 
ª˘
.width;

979 
roi
.
height
 = 
ª˘
.height;

980 
roi
.
coi
 = coi;

982  
roi
;

983 
	}
}

986 
CV_INLINE
 
CvRe˘
 
	$cvROIToRe˘
–
I∂ROI
 
roi
 )

988  
	`cvRe˘
–
roi
.
xOff£t
,Ñoi.
yOff£t
,Ñoi.
width
,Ñoi.
height
 );

989 
	}
}

993 
	#CV_TERMCRIT_ITER
 1

	)

994 
	#CV_TERMCRIT_NUMBER
 
CV_TERMCRIT_ITER


	)

995 
	#CV_TERMCRIT_EPS
 2

	)

997 
	sCvTîmCrôîü


999 
	mty≥
;

1002 
	mmax_ôî
;

1003 
	mïsû⁄
;

1005 
	tCvTîmCrôîü
;

1007 
CV_INLINE
 
CvTîmCrôîü
 
	$cvTîmCrôîü
–
ty≥
, 
max_ôî
, 
ïsû⁄
 )

1009 
CvTîmCrôîü
 
t
;

1011 
t
.
ty≥
 =Åype;

1012 
t
.
max_ôî
 = max_iter;

1013 
t
.
ïsû⁄
 = ()epsilon;

1015  
t
;

1016 
	}
}

1021 
	sCvPoöt


1023 
	mx
;

1024 
	my
;

1026 
	tCvPoöt
;

1029 
CV_INLINE
 
CvPoöt
 
	$cvPoöt
–
x
, 
y
 )

1031 
CvPoöt
 
p
;

1033 
p
.
x
 = x;

1034 
p
.
y
 = y;

1036  
p
;

1037 
	}
}

1040 
	sCvPoöt2D32f


1042 
	mx
;

1043 
	my
;

1045 
	tCvPoöt2D32f
;

1048 
CV_INLINE
 
CvPoöt2D32f
 
	$cvPoöt2D32f
–
x
, 
y
 )

1050 
CvPoöt2D32f
 
p
;

1052 
p
.
x
 = ()x;

1053 
p
.
y
 = ()y;

1055  
p
;

1056 
	}
}

1059 
CV_INLINE
 
CvPoöt2D32f
 
	$cvPoötTo32f
–
CvPoöt
 
poöt
 )

1061  
	`cvPoöt2D32f
–()
poöt
.
x
, (Ìoöt.
y
 );

1062 
	}
}

1065 
CV_INLINE
 
CvPoöt
 
	$cvPoötFrom32f
–
CvPoöt2D32f
 
poöt
 )

1067 
CvPoöt
 
ùt
;

1068 
ùt
.
x
 = 
	`cvRound
(
poöt
.x);

1069 
ùt
.
y
 = 
	`cvRound
(
poöt
.y);

1071  
ùt
;

1072 
	}
}

1075 
	sCvPoöt3D32f


1077 
	mx
;

1078 
	my
;

1079 
	mz
;

1081 
	tCvPoöt3D32f
;

1084 
CV_INLINE
 
CvPoöt3D32f
 
	$cvPoöt3D32f
–
x
, 
y
, 
z
 )

1086 
CvPoöt3D32f
 
p
;

1088 
p
.
x
 = ()x;

1089 
p
.
y
 = ()y;

1090 
p
.
z
 = ()z;

1092  
p
;

1093 
	}
}

1096 
	sCvPoöt2D64f


1098 
	mx
;

1099 
	my
;

1101 
	tCvPoöt2D64f
;

1104 
CV_INLINE
 
CvPoöt2D64f
 
	$cvPoöt2D64f
–
x
, 
y
 )

1106 
CvPoöt2D64f
 
p
;

1108 
p
.
x
 = x;

1109 
p
.
y
 = y;

1111  
p
;

1112 
	}
}

1115 
	sCvPoöt3D64f


1117 
	mx
;

1118 
	my
;

1119 
	mz
;

1121 
	tCvPoöt3D64f
;

1124 
CV_INLINE
 
CvPoöt3D64f
 
	$cvPoöt3D64f
–
x
, 
y
, 
z
 )

1126 
CvPoöt3D64f
 
p
;

1128 
p
.
x
 = x;

1129 
p
.
y
 = y;

1130 
p
.
z
 = z;

1132  
p
;

1133 
	}
}

1138 
	sCvSize


1140 
	mwidth
;

1141 
	mheight
;

1143 
	tCvSize
;

1145 
CV_INLINE
 
CvSize
 
	$cvSize
–
width
, 
height
 )

1147 
CvSize
 
s
;

1149 
s
.
width
 = width;

1150 
s
.
height
 = height;

1152  
s
;

1153 
	}
}

1155 
	sCvSize2D32f


1157 
	mwidth
;

1158 
	mheight
;

1160 
	tCvSize2D32f
;

1163 
CV_INLINE
 
CvSize2D32f
 
	$cvSize2D32f
–
width
, 
height
 )

1165 
CvSize2D32f
 
s
;

1167 
s
.
width
 = ()width;

1168 
s
.
height
 = ()height;

1170  
s
;

1171 
	}
}

1173 
	sCvBox2D


1175 
CvPoöt2D32f
 
	m˚¡î
;

1176 
CvSize2D32f
 
	msize
;

1177 
	m™gÀ
;

1180 
	tCvBox2D
;

1184 
	sCvLöeIãøt‹


1187 
uch¨
* 
	m±r
;

1190 
	mîr
;

1191 
	m∂us_dñè
;

1192 
	mmöus_dñè
;

1193 
	m∂us_°ï
;

1194 
	mmöus_°ï
;

1196 
	tCvLöeIãøt‹
;

1202 
	sCvSli˚


1204 
	m°¨t_ödex
, 
	míd_ödex
;

1206 
	tCvSli˚
;

1208 
CV_INLINE
 
CvSli˚
 
	$cvSli˚
–
°¨t
, 
íd
 )

1210 
CvSli˚
 
¶i˚
;

1211 
¶i˚
.
°¨t_ödex
 = 
°¨t
;

1212 
¶i˚
.
íd_ödex
 = 
íd
;

1214  
¶i˚
;

1215 
	}
}

1217 
	#CV_WHOLE_SEQ_END_INDEX
 0x3fffffff

	)

1218 
	#CV_WHOLE_SEQ
 
	`cvSli˚
(0, 
CV_WHOLE_SEQ_END_INDEX
)

	)

1223 
	sCvSˇœr


1225 
	mvÆ
[4];

1227 
	tCvSˇœr
;

1229 
CV_INLINE
 
CvSˇœr
 
cvSˇœr
–
vÆ0
, 
vÆ1
 
CV_DEFAULT
(0),

1230 
vÆ2
 
CV_DEFAULT
(0), 
vÆ3
 
	$CV_DEFAULT
(0))

1232 
CvSˇœr
 
sˇœr
;

1233 
sˇœr
.
vÆ
[0] = 
vÆ0
; sˇœr.vÆ[1] = 
vÆ1
;

1234 
sˇœr
.
vÆ
[2] = 
vÆ2
; sˇœr.vÆ[3] = 
vÆ3
;

1235  
sˇœr
;

1236 
	}
}

1239 
CV_INLINE
 
CvSˇœr
 
	$cvRólSˇœr
–
vÆ0
 )

1241 
CvSˇœr
 
sˇœr
;

1242 
sˇœr
.
vÆ
[0] = 
vÆ0
;

1243 
sˇœr
.
vÆ
[1] = scalar.val[2] = scalar.val[3] = 0;

1244  
sˇœr
;

1245 
	}
}

1247 
CV_INLINE
 
CvSˇœr
 
	$cvSˇœrAŒ
–
vÆ0123
 )

1249 
CvSˇœr
 
sˇœr
;

1250 
sˇœr
.
vÆ
[0] = 
vÆ0123
;

1251 
sˇœr
.
vÆ
[1] = 
vÆ0123
;

1252 
sˇœr
.
vÆ
[2] = 
vÆ0123
;

1253 
sˇœr
.
vÆ
[3] = 
vÆ0123
;

1254  
sˇœr
;

1255 
	}
}

1263 
	sCvMemBlock


1265 
CvMemBlock
* 
	m¥ev
;

1266 
CvMemBlock
* 
	m√xt
;

1268 
	tCvMemBlock
;

1270 
	#CV_STORAGE_MAGIC_VAL
 0x42890000

	)

1272 
	sCvMemSt‹age


1274 
	msig«tuª
;

1275 
CvMemBlock
* 
	mbŸtom
;

1276 
CvMemBlock
* 
	mt›
;

1277 
CvMemSt‹age
* 
	m∑ª¡
;

1278 
	mblock_size
;

1279 
	m‰ì_•a˚
;

1281 
	tCvMemSt‹age
;

1283 
	#CV_IS_STORAGE
(
°‹age
) \

1284 ((
°‹age
Ë!
NULL
 && \

1285 (((
CvMemSt‹age
*)(
°‹age
))->
sig«tuª
 & 
CV_MAGIC_MASK
Ë=
CV_STORAGE_MAGIC_VAL
)

	)

1288 
	sCvMemSt‹agePos


1290 
CvMemBlock
* 
	mt›
;

1291 
	m‰ì_•a˚
;

1293 
	tCvMemSt‹agePos
;

1298 
	sCvSeqBlock


1300 
CvSeqBlock
* 
	m¥ev
;

1301 
CvSeqBlock
* 
	m√xt
;

1302 
	m°¨t_ödex
;

1304 
	mcou¡
;

1305 
sch¨
* 
	md©a
;

1307 
	tCvSeqBlock
;

1310 
	#CV_TREE_NODE_FIELDS
(
node_ty≥
) \

1311 
Êags
; \

1312 
hódî_size
; \

1313 
node_ty≥
* 
h_¥ev
; \

1314 
node_ty≥
* 
h_√xt
; \

1315 
node_ty≥
* 
v_¥ev
; \

1316 
node_ty≥
* 
v_√xt


	)

1322 
	#CV_SEQUENCE_FIELDS
() \

1323 
	`CV_TREE_NODE_FIELDS
(
CvSeq
); \

1324 
tŸÆ
; \

1325 
ñem_size
; \

1326 
sch¨
* 
block_max
; \

1327 
sch¨
* 
±r
; \

1328 
dñè_ñems
; \

1329 
CvMemSt‹age
* 
°‹age
; \

1330 
CvSeqBlock
* 
‰ì_blocks
; \

1331 
CvSeqBlock
* 
fú°
;

	)

1333 
	sCvSeq


1335 
CV_SEQUENCE_FIELDS
()

1337 
	tCvSeq
;

1339 
	#CV_TYPE_NAME_SEQ
 "›ícv-£quí˚"

	)

1340 
	#CV_TYPE_NAME_SEQ_TREE
 "›ícv-£quí˚-åì"

	)

1349 
	#CV_SET_ELEM_FIELDS
(
ñem_ty≥
) \

1350 
Êags
; \

1351 
ñem_ty≥
* 
√xt_‰ì
;

	)

1353 
	sCvSëEÀm


1355 
CV_SET_ELEM_FIELDS
(
CvSëEÀm
)

1357 
	tCvSëEÀm
;

1359 
	#CV_SET_FIELDS
() \

1360 
	`CV_SEQUENCE_FIELDS
() \

1361 
CvSëEÀm
* 
‰ì_ñems
; \

1362 
a˘ive_cou¡
;

	)

1364 
	sCvSë


1366 
CV_SET_FIELDS
()

1368 
	tCvSë
;

1371 
	#CV_SET_ELEM_IDX_MASK
 ((1 << 26Ë- 1)

	)

1372 
	#CV_SET_ELEM_FREE_FLAG
 (1 << (()*8-1))

	)

1375 
	#CV_IS_SET_ELEM
–
±r
 ) (((
CvSëEÀm
*)’å))->
Êags
 >0)

	)

1397 
	#CV_GRAPH_EDGE_FIELDS
() \

1398 
Êags
; \

1399 
weight
; \

1400 
CvGøphEdge
* 
√xt
[2]; \

1401 
CvGøphVtx
* 
vtx
[2];

	)

1404 
	#CV_GRAPH_VERTEX_FIELDS
() \

1405 
Êags
; \

1406 
CvGøphEdge
* 
fú°
;

	)

1409 
	sCvGøphEdge


1411 
CV_GRAPH_EDGE_FIELDS
()

1413 
	tCvGøphEdge
;

1415 
	sCvGøphVtx


1417 
CV_GRAPH_VERTEX_FIELDS
()

1419 
	tCvGøphVtx
;

1421 
	sCvGøphVtx2D


1423 
CV_GRAPH_VERTEX_FIELDS
()

1424 
CvPoöt2D32f
* 
	m±r
;

1426 
	tCvGøphVtx2D
;

1432 
	#CV_GRAPH_FIELDS
() \

1433 
	`CV_SET_FIELDS
() \

1434 
CvSë
* 
edges
;

	)

1436 
	sCvGøph


1438 
CV_GRAPH_FIELDS
()

1440 
	tCvGøph
;

1442 
	#CV_TYPE_NAME_GRAPH
 "›ícv-gøph"

	)

1446 
	sCvChaö


1448 
CV_SEQUENCE_FIELDS
()

1449 
CvPoöt
 
	m‹igö
;

1451 
	tCvChaö
;

1453 
	#CV_CONTOUR_FIELDS
() \

1454 
	`CV_SEQUENCE_FIELDS
() \

1455 
CvRe˘
 
ª˘
; \

1456 
cﬁ‹
; \

1457 
ª£rved
[3];

	)

1459 
	sCvC⁄tour


1461 
CV_CONTOUR_FIELDS
()

1463 
	tCvC⁄tour
;

1465 
CvC⁄tour
 
	tCvPoöt2DSeq
;

1471 
	#CV_SEQ_MAGIC_VAL
 0x42990000

	)

1473 
	#CV_IS_SEQ
(
£q
) \

1474 ((
£q
Ë!
NULL
 && (((
CvSeq
*)(£q))->
Êags
 & 
CV_MAGIC_MASK
Ë=
CV_SEQ_MAGIC_VAL
)

	)

1476 
	#CV_SET_MAGIC_VAL
 0x42980000

	)

1477 
	#CV_IS_SET
(
£t
) \

1478 ((
£t
Ë!
NULL
 && (((
CvSeq
*)(£t))->
Êags
 & 
CV_MAGIC_MASK
Ë=
CV_SET_MAGIC_VAL
)

	)

1480 
	#CV_SEQ_ELTYPE_BITS
 12

	)

1481 
	#CV_SEQ_ELTYPE_MASK
 ((1 << 
CV_SEQ_ELTYPE_BITS
Ë- 1)

	)

1483 
	#CV_SEQ_ELTYPE_POINT
 
CV_32SC2


	)

1484 
	#CV_SEQ_ELTYPE_CODE
 
CV_8UC1


	)

1485 
	#CV_SEQ_ELTYPE_GENERIC
 0

	)

1486 
	#CV_SEQ_ELTYPE_PTR
 
CV_USRTYPE1


	)

1487 
	#CV_SEQ_ELTYPE_PPOINT
 
CV_SEQ_ELTYPE_PTR


	)

1488 
	#CV_SEQ_ELTYPE_INDEX
 
CV_32SC1


	)

1489 
	#CV_SEQ_ELTYPE_GRAPH_EDGE
 0

	)

1490 
	#CV_SEQ_ELTYPE_GRAPH_VERTEX
 0

	)

1491 
	#CV_SEQ_ELTYPE_TRIAN_ATR
 0

	)

1492 
	#CV_SEQ_ELTYPE_CONNECTED_COMP
 0

	)

1493 
	#CV_SEQ_ELTYPE_POINT3D
 
CV_32FC3


	)

1495 
	#CV_SEQ_KIND_BITS
 2

	)

1496 
	#CV_SEQ_KIND_MASK
 (((1 << 
CV_SEQ_KIND_BITS
Ë- 1)<<
CV_SEQ_ELTYPE_BITS
)

	)

1499 
	#CV_SEQ_KIND_GENERIC
 (0 << 
CV_SEQ_ELTYPE_BITS
)

	)

1500 
	#CV_SEQ_KIND_CURVE
 (1 << 
CV_SEQ_ELTYPE_BITS
)

	)

1501 
	#CV_SEQ_KIND_BIN_TREE
 (2 << 
CV_SEQ_ELTYPE_BITS
)

	)

1504 
	#CV_SEQ_KIND_GRAPH
 (1 << 
CV_SEQ_ELTYPE_BITS
)

	)

1505 
	#CV_SEQ_KIND_SUBDIV2D
 (2 << 
CV_SEQ_ELTYPE_BITS
)

	)

1507 
	#CV_SEQ_FLAG_SHIFT
 (
CV_SEQ_KIND_BITS
 + 
CV_SEQ_ELTYPE_BITS
)

	)

1510 
	#CV_SEQ_FLAG_CLOSED
 (1 << 
CV_SEQ_FLAG_SHIFT
)

	)

1511 
	#CV_SEQ_FLAG_SIMPLE
 (0 << 
CV_SEQ_FLAG_SHIFT
)

	)

1512 
	#CV_SEQ_FLAG_CONVEX
 (0 << 
CV_SEQ_FLAG_SHIFT
)

	)

1513 
	#CV_SEQ_FLAG_HOLE
 (2 << 
CV_SEQ_FLAG_SHIFT
)

	)

1516 
	#CV_GRAPH_FLAG_ORIENTED
 (1 << 
CV_SEQ_FLAG_SHIFT
)

	)

1518 
	#CV_GRAPH
 
CV_SEQ_KIND_GRAPH


	)

1519 
	#CV_ORIENTED_GRAPH
 (
CV_SEQ_KIND_GRAPH
|
CV_GRAPH_FLAG_ORIENTED
)

	)

1522 
	#CV_SEQ_POINT_SET
 (
CV_SEQ_KIND_GENERIC
| 
CV_SEQ_ELTYPE_POINT
)

	)

1523 
	#CV_SEQ_POINT3D_SET
 (
CV_SEQ_KIND_GENERIC
| 
CV_SEQ_ELTYPE_POINT3D
)

	)

1524 
	#CV_SEQ_POLYLINE
 (
CV_SEQ_KIND_CURVE
 | 
CV_SEQ_ELTYPE_POINT
)

	)

1525 
	#CV_SEQ_POLYGON
 (
CV_SEQ_FLAG_CLOSED
 | 
CV_SEQ_POLYLINE
 )

	)

1526 
	#CV_SEQ_CONTOUR
 
CV_SEQ_POLYGON


	)

1527 
	#CV_SEQ_SIMPLE_POLYGON
 (
CV_SEQ_FLAG_SIMPLE
 | 
CV_SEQ_POLYGON
 )

	)

1530 
	#CV_SEQ_CHAIN
 (
CV_SEQ_KIND_CURVE
 | 
CV_SEQ_ELTYPE_CODE
)

	)

1531 
	#CV_SEQ_CHAIN_CONTOUR
 (
CV_SEQ_FLAG_CLOSED
 | 
CV_SEQ_CHAIN
)

	)

1534 
	#CV_SEQ_POLYGON_TREE
 (
CV_SEQ_KIND_BIN_TREE
 | 
CV_SEQ_ELTYPE_TRIAN_ATR
)

	)

1537 
	#CV_SEQ_CONNECTED_COMP
 (
CV_SEQ_KIND_GENERIC
 | 
CV_SEQ_ELTYPE_CONNECTED_COMP
)

	)

1540 
	#CV_SEQ_INDEX
 (
CV_SEQ_KIND_GENERIC
 | 
CV_SEQ_ELTYPE_INDEX
)

	)

1542 
	#CV_SEQ_ELTYPE
–
£q
 ) ((£q)->
Êags
 & 
CV_SEQ_ELTYPE_MASK
)

	)

1543 
	#CV_SEQ_KIND
–
£q
 ) ((£q)->
Êags
 & 
CV_SEQ_KIND_MASK
 )

	)

1546 
	#CV_IS_SEQ_INDEX
–
£q
 ) ((
	`CV_SEQ_ELTYPE
(£qË=
CV_SEQ_ELTYPE_INDEX
) && \

1547 (
	`CV_SEQ_KIND
(
£q
Ë=
CV_SEQ_KIND_GENERIC
))

	)

1549 
	#CV_IS_SEQ_CURVE
–
£q
 ) (
	`CV_SEQ_KIND
(£qË=
CV_SEQ_KIND_CURVE
)

	)

1550 
	#CV_IS_SEQ_CLOSED
–
£q
 ) (((£q)->
Êags
 & 
CV_SEQ_FLAG_CLOSED
Ë!0)

	)

1551 
	#CV_IS_SEQ_CONVEX
–
£q
 ) 0

	)

1552 
	#CV_IS_SEQ_HOLE
–
£q
 ) (((£q)->
Êags
 & 
CV_SEQ_FLAG_HOLE
Ë!0)

	)

1553 
	#CV_IS_SEQ_SIMPLE
–
£q
 ) 1

	)

1556 
	#CV_IS_SEQ_POINT_SET
–
£q
 ) \

1557 ((
	`CV_SEQ_ELTYPE
(
£q
Ë=
CV_32SC2
 || CV_SEQ_ELTYPE(£qË=
CV_32FC2
))

	)

1559 
	#CV_IS_SEQ_POINT_SUBSET
–
£q
 ) \

1560 (
	`CV_IS_SEQ_INDEX
–
£q
 ) || 
	`CV_SEQ_ELTYPE
(£qË=
CV_SEQ_ELTYPE_PPOINT
)

	)

1562 
	#CV_IS_SEQ_POLYLINE
–
£q
 ) \

1563 (
	`CV_SEQ_KIND
(
£q
Ë=
CV_SEQ_KIND_CURVE
 && 
	`CV_IS_SEQ_POINT_SET
(£q))

	)

1565 
	#CV_IS_SEQ_POLYGON
–
£q
 ) \

1566 (
	`CV_IS_SEQ_POLYLINE
(
£q
Ë&& 
	`CV_IS_SEQ_CLOSED
(£q))

	)

1568 
	#CV_IS_SEQ_CHAIN
–
£q
 ) \

1569 (
	`CV_SEQ_KIND
(
£q
Ë=
CV_SEQ_KIND_CURVE
 && (£q)->
ñem_size
 =1)

	)

1571 
	#CV_IS_SEQ_CONTOUR
–
£q
 ) \

1572 (
	`CV_IS_SEQ_CLOSED
(
£q
Ë&& (
	`CV_IS_SEQ_POLYLINE
(£qË|| 
	`CV_IS_SEQ_CHAIN
(£q)))

	)

1574 
	#CV_IS_SEQ_CHAIN_CONTOUR
–
£q
 ) \

1575 (
	`CV_IS_SEQ_CHAIN
–
£q
 ) && 
	`CV_IS_SEQ_CLOSED
–£q ))

	)

1577 
	#CV_IS_SEQ_POLYGON_TREE
–
£q
 ) \

1578 (
	`CV_SEQ_ELTYPE
 (
£q
Ë=
CV_SEQ_ELTYPE_TRIAN_ATR
 && \

1579 
	`CV_SEQ_KIND
–
£q
 ) =
CV_SEQ_KIND_BIN_TREE
 )

	)

1581 
	#CV_IS_GRAPH
–
£q
 ) \

1582 (
	`CV_IS_SET
(
£q
Ë&& 
	`CV_SEQ_KIND
((
CvSë
*)(£q)Ë=
CV_SEQ_KIND_GRAPH
)

	)

1584 
	#CV_IS_GRAPH_ORIENTED
–
£q
 ) \

1585 (((
£q
)->
Êags
 & 
CV_GRAPH_FLAG_ORIENTED
Ë!0)

	)

1587 
	#CV_IS_SUBDIV2D
–
£q
 ) \

1588 (
	`CV_IS_SET
(
£q
Ë&& 
	`CV_SEQ_KIND
((
CvSë
*)(£q)Ë=
CV_SEQ_KIND_SUBDIV2D
)

	)

1594 
	#CV_SEQ_WRITER_FIELDS
() \

1595 
hódî_size
; \

1596 
CvSeq
* 
£q
; \

1597 
CvSeqBlock
* 
block
; \

1598 
sch¨
* 
±r
; \

1599 
sch¨
* 
block_mö
; \

1600 
sch¨
* 
block_max
;

	)

1602 
	sCvSeqWrôî


1604 
CV_SEQ_WRITER_FIELDS
()

1606 
	tCvSeqWrôî
;

1609 
	#CV_SEQ_READER_FIELDS
() \

1610 
hódî_size
; \

1611 
CvSeq
* 
£q
; \

1612 
CvSeqBlock
* 
block
; \

1613 
sch¨
* 
±r
; \

1614 
sch¨
* 
block_mö
; \

1615 
sch¨
* 
block_max
; \

1616 
dñè_ödex
; \

1617 
sch¨
* 
¥ev_ñem
;

	)

1620 
	sCvSeqRódî


1622 
CV_SEQ_READER_FIELDS
()

1624 
	tCvSeqRódî
;

1630 
	#CV_SEQ_ELEM
–
£q
, 
ñem_ty≥
, 
ödex
 ) \

1632 –
	`as£π
(((
£q
)->
fú°
[0]Ë=(
CvSeqBlock
) && \

1633 (
£q
)->
ñem_size
 =(
ñem_ty≥
)), \

1634 (
ñem_ty≥
*)((
£q
)->
fú°
 && ()
ödex
 < \

1635 ()((
£q
)->
fú°
->
cou¡
) ? \

1636 (
£q
)->
fú°
->
d©a
 + (
ödex
Ë* (
ñem_ty≥
) : \

1637 
	`cvGëSeqEÀm
–(
CvSeq
*)(
£q
), (
ödex
Ë)))

	)

1638 
	#CV_GET_SEQ_ELEM
–
ñem_ty≥
, 
£q
, 
ödex
 ) 
	`CV_SEQ_ELEM
–(£q),ÉÀm_ty≥, (ödexË)

	)

1641 
	#CV_WRITE_SEQ_ELEM_VAR
–
ñem_±r
, 
wrôî
 ) \

1643 if–(
wrôî
).
±r
 >(wrôî).
block_max
 ) \

1645 
	`cvCª©eSeqBlock
–&
wrôî
); \

1647 
	`mem˝y
((
wrôî
).
±r
, 
ñem_±r
, (wrôî).
£q
->
ñem_size
);\

1648 (
wrôî
).
±r
 +(wrôî).
£q
->
ñem_size
; \

1649 }

	)

1651 
	#CV_WRITE_SEQ_ELEM
–
ñem
, 
wrôî
 ) \

1653 
	`as£π
–(
wrôî
).
£q
->
ñem_size
 =(
ñem
)); \

1654 if–(
wrôî
).
±r
 >(wrôî).
block_max
 ) \

1656 
	`cvCª©eSeqBlock
–&
wrôî
); \

1658 
	`as£π
–(
wrôî
).
±r
 <(wrôî).
block_max
 - (
ñem
));\

1659 
	`mem˝y
((
wrôî
).
±r
, &(
ñem
), (elem)); \

1660 (
wrôî
).
±r
 +(
ñem
); \

1661 }

	)

1665 
	#CV_NEXT_SEQ_ELEM
–
ñem_size
, 
ªadî
 ) \

1667 if–((
ªadî
).
±r
 +(
ñem_size
)Ë>‘ódî).
block_max
 ) \

1669 
	`cvCh™geSeqBlock
–&(
ªadî
), 1 ); \

1671 }

	)

1675 
	#CV_PREV_SEQ_ELEM
–
ñem_size
, 
ªadî
 ) \

1677 if–((
ªadî
).
±r
 -(
ñem_size
)Ë< (ªadî).
block_mö
 ) \

1679 
	`cvCh™geSeqBlock
–&(
ªadî
), -1 ); \

1681 }

	)

1684 
	#CV_READ_SEQ_ELEM
–
ñem
, 
ªadî
 ) \

1686 
	`as£π
–(
ªadî
).
£q
->
ñem_size
 =(
ñem
)); \

1687 
	`mem˝y
–&(
ñem
), (
ªadî
).
±r
, ((elem))); \

1688 
	`CV_NEXT_SEQ_ELEM
–(
ñem
), 
ªadî
 ) \

1689 }

	)

1692 
	#CV_REV_READ_SEQ_ELEM
–
ñem
, 
ªadî
 ) \

1694 
	`as£π
–(
ªadî
).
£q
->
ñem_size
 =(
ñem
)); \

1695 
	`mem˝y
(&(
ñem
), (
ªadî
).
±r
, ((elem))); \

1696 
	`CV_PREV_SEQ_ELEM
–(
ñem
), 
ªadî
 ) \

1697 }

	)

1700 
	#CV_READ_CHAIN_POINT
–
_±
, 
ªadî
 ) \

1702 (
_±
Ë(
ªadî
).
±
; \

1703 if–(
ªadî
).
±r
 ) \

1705 
	`CV_READ_SEQ_ELEM
–(
ªadî
).
code
, (reader)); \

1706 
	`as£π
–((
ªadî
).
code
 & ~7) == 0 ); \

1707 (
ªadî
).
±
.
x
 +‘ódî).
dñès
[()‘ódî).
code
][0]; \

1708 (
ªadî
).
±
.
y
 +‘ódî).
dñès
[()‘ódî).
code
][1]; \

1710 }

	)

1712 
	#CV_CURRENT_POINT
–
ªadî
 ) (*((
CvPoöt
*)(‘ódî).
±r
)))

	)

1713 
	#CV_PREV_POINT
–
ªadî
 ) (*((
CvPoöt
*)(‘ódî).
¥ev_ñem
)))

	)

1715 
	#CV_READ_EDGE
–
±1
, 
±2
, 
ªadî
 ) \

1717 
	`as£π
–(
±1
Ë=(
CvPoöt
) && \

1718 (
±2
Ë=(
CvPoöt
) && \

1719 
ªadî
.
£q
->
ñem_size
 =(
CvPoöt
)); \

1720 (
±1
Ë
	`CV_PREV_POINT
–
ªadî
 ); \

1721 (
±2
Ë
	`CV_CURRENT_POINT
–
ªadî
 ); \

1722 (
ªadî
).
¥ev_ñem
 = (ªadî).
±r
; \

1723 
	`CV_NEXT_SEQ_ELEM
–(
CvPoöt
), (
ªadî
)); \

1724 }

	)

1729 
	#CV_NEXT_GRAPH_EDGE
–
edge
, 
vîãx
 ) \

1730 (
	`as£π
((
edge
)->
vtx
[0] =(
vîãx
) || (edge)->vtx[1] == (vertex)), \

1731 (
edge
)->
√xt
[”dge)->
vtx
[1] =(
vîãx
)])

	)

1740 
CvFûeSt‹age
 
	tCvFûeSt‹age
;

1743 
	#CV_STORAGE_READ
 0

	)

1744 
	#CV_STORAGE_WRITE
 1

	)

1745 
	#CV_STORAGE_WRITE_TEXT
 
CV_STORAGE_WRITE


	)

1746 
	#CV_STORAGE_WRITE_BINARY
 
CV_STORAGE_WRITE


	)

1747 
	#CV_STORAGE_APPEND
 2

	)

1748 
	#CV_STORAGE_MEMORY
 4

	)

1749 
	#CV_STORAGE_FORMAT_MASK
 (7<<3)

	)

1750 
	#CV_STORAGE_FORMAT_AUTO
 0

	)

1751 
	#CV_STORAGE_FORMAT_XML
 8

	)

1752 
	#CV_STORAGE_FORMAT_YAML
 16

	)

1755 
	sCvAârLi°


1757 c⁄° ** 
	m©å
;

1758 
CvAârLi°
* 
	m√xt
;

1760 
	tCvAârLi°
;

1762 
CV_INLINE
 
CvAârLi°
 
cvAârLi°
–c⁄° ** 
©å
 
CV_DEFAULT
(
NULL
),

1763 
CvAârLi°
* 
√xt
 
	$CV_DEFAULT
(
NULL
) )

1765 
CvAârLi°
 
l
;

1766 
l
.
©å
 =áttr;

1767 
l
.
√xt
 =Çext;

1769  
l
;

1770 
	}
}

1772 
	gCvTy≥Info
;

1774 
	#CV_NODE_NONE
 0

	)

1775 
	#CV_NODE_INT
 1

	)

1776 
	#CV_NODE_INTEGER
 
CV_NODE_INT


	)

1777 
	#CV_NODE_REAL
 2

	)

1778 
	#CV_NODE_FLOAT
 
CV_NODE_REAL


	)

1779 
	#CV_NODE_STR
 3

	)

1780 
	#CV_NODE_STRING
 
CV_NODE_STR


	)

1781 
	#CV_NODE_REF
 4

	)

1782 
	#CV_NODE_SEQ
 5

	)

1783 
	#CV_NODE_MAP
 6

	)

1784 
	#CV_NODE_TYPE_MASK
 7

	)

1786 
	#CV_NODE_TYPE
(
Êags
Ë((ÊagsË& 
CV_NODE_TYPE_MASK
)

	)

1789 
	#CV_NODE_FLOW
 8

	)

1790 
	#CV_NODE_USER
 16

	)

1791 
	#CV_NODE_EMPTY
 32

	)

1792 
	#CV_NODE_NAMED
 64

	)

1794 
	#CV_NODE_IS_INT
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË=
CV_NODE_INT
)

	)

1795 
	#CV_NODE_IS_REAL
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË=
CV_NODE_REAL
)

	)

1796 
	#CV_NODE_IS_STRING
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË=
CV_NODE_STRING
)

	)

1797 
	#CV_NODE_IS_SEQ
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË=
CV_NODE_SEQ
)

	)

1798 
	#CV_NODE_IS_MAP
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË=
CV_NODE_MAP
)

	)

1799 
	#CV_NODE_IS_COLLECTION
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË>
CV_NODE_SEQ
)

	)

1800 
	#CV_NODE_IS_FLOW
(
Êags
Ë(((ÊagsË& 
CV_NODE_FLOW
Ë!0)

	)

1801 
	#CV_NODE_IS_EMPTY
(
Êags
Ë(((ÊagsË& 
CV_NODE_EMPTY
Ë!0)

	)

1802 
	#CV_NODE_IS_USER
(
Êags
Ë(((ÊagsË& 
CV_NODE_USER
Ë!0)

	)

1803 
	#CV_NODE_HAS_NAME
(
Êags
Ë(((ÊagsË& 
CV_NODE_NAMED
Ë!0)

	)

1805 
	#CV_NODE_SEQ_SIMPLE
 256

	)

1806 
	#CV_NODE_SEQ_IS_SIMPLE
(
£q
Ë(((£q)->
Êags
 & 
CV_NODE_SEQ_SIMPLE
Ë!0)

	)

1808 
	sCvSåög


1810 
	mÀn
;

1811 * 
	m±r
;

1813 
	tCvSåög
;

1817 
	sCvSåögHashNode


1819 
	mhashvÆ
;

1820 
CvSåög
 
	m°r
;

1821 
CvSåögHashNode
* 
	m√xt
;

1823 
	tCvSåögHashNode
;

1825 
CvGíîicHash
 
	tCvFûeNodeHash
;

1828 
	sCvFûeNode


1830 
	mèg
;

1831 
CvTy≥Info
* 
	möfo
;

1835 
	mf
;

1836 
	mi
;

1837 
CvSåög
 
	m°r
;

1838 
CvSeq
* 
	m£q
;

1839 
CvFûeNodeHash
* 
	mm≠
;

1840 } 
	md©a
;

1842 
	tCvFûeNode
;

1844 #ifde‡
__˝lu•lus


1847 (
CV_CDECL
 *
	tCvIsIn°™˚Func
)–c⁄° * 
	t°ru˘_±r
 );

1848 (
CV_CDECL
 *
	tCvRñó£Func
)–** 
	t°ru˘_dbÕå
 );

1849 * (
	tCV_CDECL
 *
	tCvRódFunc
)–
	tCvFûeSt‹age
* 
	t°‹age
, 
	tCvFûeNode
* 
	tnode
 );

1850 (
CV_CDECL
 *
	tCvWrôeFunc
)–
	tCvFûeSt‹age
* 
	t°‹age
, c⁄° * 
	t«me
,

1851 c⁄° * 
	t°ru˘_±r
, 
	tCvAârLi°
 
	t©åibuãs
 );

1852 * (
	tCV_CDECL
 *
	tCvCl⁄eFunc
)–c⁄° * 
	t°ru˘_±r
 );

1853 #ifde‡
__˝lu•lus


1857 
	sCvTy≥Info


1859 
Êags
;

1860 
hódî_size
;

1861 
CvTy≥Info
* 
¥ev
;

1862 
CvTy≥Info
* 
√xt
;

1863 c⁄° * 
ty≥_«me
;

1864 
CvIsIn°™˚Func
 
is_ö°™˚
;

1865 
CvRñó£Func
 
ªÀa£
;

1866 
CvRódFunc
 
ªad
;

1867 
CvWrôeFunc
 
wrôe
;

1868 
CvCl⁄eFunc
 
˛⁄e
;

1870 
	tCvTy≥Info
;

1875 
	sCvPlugöFuncInfo


1877 ** 
	mfunc_addr
;

1878 * 
	mdeÁu…_func_addr
;

1879 c⁄° * 
	mfunc_«mes
;

1880 
	m£¨ch_moduÀs
;

1881 
	mlﬂded_‰om
;

1883 
	tCvPlugöFuncInfo
;

1885 
	sCvModuÀInfo


1887 
CvModuÀInfo
* 
	m√xt
;

1888 c⁄° * 
	m«me
;

1889 c⁄° * 
	mvîsi⁄
;

1890 
CvPlugöFuncInfo
* 
	mfunc_èb
;

1892 
	tCvModuÀInfo
;

	@/usr/include/opencv2/core/version.hpp

47 #i‚de‡
__OPENCV_VERSION_HPP__


48 
	#__OPENCV_VERSION_HPP__


	)

50 
	#CV_VERSION_EPOCH
 2

	)

51 
	#CV_VERSION_MAJOR
 4

	)

52 
	#CV_VERSION_MINOR
 9

	)

53 
	#CV_VERSION_REVISION
 1

	)

55 
	#CVAUX_STR_EXP
(
__A
Ë#__A

	)

56 
	#CVAUX_STR
(
__A
Ë
	`CVAUX_STR_EXP
(__A)

	)

58 
	#CVAUX_STRW_EXP
(
__A
Ë
L
#__A

	)

59 
	#CVAUX_STRW
(
__A
Ë
	`CVAUX_STRW_EXP
(__A)

	)

61 #i‡
CV_VERSION_REVISION


62 
	#CV_VERSION
 
	`CVAUX_STR
(
CV_VERSION_EPOCH
Ë"." CVAUX_STR(
CV_VERSION_MAJOR
Ë"." CVAUX_STR(
CV_VERSION_MINOR
Ë"." CVAUX_STR(
CV_VERSION_REVISION
)

	)

64 
	#CV_VERSION
 
	`CVAUX_STR
(
CV_VERSION_EPOCH
Ë"." CVAUX_STR(
CV_VERSION_MAJOR
Ë"." CVAUX_STR(
CV_VERSION_MINOR
)

	)

68 
	#CV_MAJOR_VERSION
 
CV_VERSION_EPOCH


	)

69 
	#CV_MINOR_VERSION
 
CV_VERSION_MAJOR


	)

70 
	#CV_SUBMINOR_VERSION
 
CV_VERSION_MINOR


	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
44
1068
.client.cpp
DJI_guidance.h
DJI_utility.cpp
DJI_utility.h
getDataAndSave.cpp
getDataAndTrans.cpp
getDataAndTransTCP.cpp
/usr/include/arpa/inet.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/math.h
/usr/include/netinet/in.h
/usr/include/opencv2/highgui/highgui.hpp
/usr/include/pthread.h
/usr/include/semaphore.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/opencv2/core/core.hpp
/usr/include/opencv2/highgui/highgui_c.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/limits.h
/usr/include/opencv2/core/core_c.h
/usr/include/opencv2/core/mat.hpp
/usr/include/opencv2/core/operations.hpp
/usr/include/opencv2/core/types_c.h
/usr/include/opencv2/core/version.hpp
/usr/include/stdc-predef.h
/usr/include/assert.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
